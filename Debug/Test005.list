
Test005.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006e20  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004dc  08006ee0  08006ee0  00016ee0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080073bc  080073bc  000201dc  2**0
                  CONTENTS
  4 .ARM          00000008  080073bc  080073bc  000173bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080073c4  080073c4  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080073c4  080073c4  000173c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080073c8  080073c8  000173c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  080073cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c0  200001dc  080075a8  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000029c  080075a8  0002029c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009e50  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000016e8  00000000  00000000  0002a054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006b8  00000000  00000000  0002b740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000630  00000000  00000000  0002bdf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014d2f  00000000  00000000  0002c428  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000088f5  00000000  00000000  00041157  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007cec6  00000000  00000000  00049a4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000c6912  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002798  00000000  00000000  000c6968  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006ec8 	.word	0x08006ec8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	08006ec8 	.word	0x08006ec8

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	1c10      	adds	r0, r2, #0
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	1c19      	adds	r1, r3, #0
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f847 	bl	80014d0 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 ff91 	bl	8001374 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f839 	bl	80014d0 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f82f 	bl	80014d0 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ffb3 	bl	80013ec <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 ffa9 	bl	80013ec <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_uldivmod>:
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	d111      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004ac:	2a00      	cmp	r2, #0
 80004ae:	d10f      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004b0:	2900      	cmp	r1, #0
 80004b2:	d100      	bne.n	80004b6 <__aeabi_uldivmod+0xe>
 80004b4:	2800      	cmp	r0, #0
 80004b6:	d002      	beq.n	80004be <__aeabi_uldivmod+0x16>
 80004b8:	2100      	movs	r1, #0
 80004ba:	43c9      	mvns	r1, r1
 80004bc:	1c08      	adds	r0, r1, #0
 80004be:	b407      	push	{r0, r1, r2}
 80004c0:	4802      	ldr	r0, [pc, #8]	; (80004cc <__aeabi_uldivmod+0x24>)
 80004c2:	a102      	add	r1, pc, #8	; (adr r1, 80004cc <__aeabi_uldivmod+0x24>)
 80004c4:	1840      	adds	r0, r0, r1
 80004c6:	9002      	str	r0, [sp, #8]
 80004c8:	bd03      	pop	{r0, r1, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)
 80004cc:	ffffff5d 	.word	0xffffff5d
 80004d0:	b403      	push	{r0, r1}
 80004d2:	4668      	mov	r0, sp
 80004d4:	b501      	push	{r0, lr}
 80004d6:	9802      	ldr	r0, [sp, #8]
 80004d8:	f000 f82e 	bl	8000538 <__udivmoddi4>
 80004dc:	9b01      	ldr	r3, [sp, #4]
 80004de:	469e      	mov	lr, r3
 80004e0:	b002      	add	sp, #8
 80004e2:	bc0c      	pop	{r2, r3}
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)

080004e8 <__aeabi_lmul>:
 80004e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ea:	0415      	lsls	r5, r2, #16
 80004ec:	0c2d      	lsrs	r5, r5, #16
 80004ee:	000f      	movs	r7, r1
 80004f0:	0001      	movs	r1, r0
 80004f2:	002e      	movs	r6, r5
 80004f4:	46c6      	mov	lr, r8
 80004f6:	4684      	mov	ip, r0
 80004f8:	0400      	lsls	r0, r0, #16
 80004fa:	0c14      	lsrs	r4, r2, #16
 80004fc:	0c00      	lsrs	r0, r0, #16
 80004fe:	0c09      	lsrs	r1, r1, #16
 8000500:	4346      	muls	r6, r0
 8000502:	434d      	muls	r5, r1
 8000504:	4360      	muls	r0, r4
 8000506:	4361      	muls	r1, r4
 8000508:	1940      	adds	r0, r0, r5
 800050a:	0c34      	lsrs	r4, r6, #16
 800050c:	1824      	adds	r4, r4, r0
 800050e:	b500      	push	{lr}
 8000510:	42a5      	cmp	r5, r4
 8000512:	d903      	bls.n	800051c <__aeabi_lmul+0x34>
 8000514:	2080      	movs	r0, #128	; 0x80
 8000516:	0240      	lsls	r0, r0, #9
 8000518:	4680      	mov	r8, r0
 800051a:	4441      	add	r1, r8
 800051c:	0c25      	lsrs	r5, r4, #16
 800051e:	186d      	adds	r5, r5, r1
 8000520:	4661      	mov	r1, ip
 8000522:	4359      	muls	r1, r3
 8000524:	437a      	muls	r2, r7
 8000526:	0430      	lsls	r0, r6, #16
 8000528:	1949      	adds	r1, r1, r5
 800052a:	0424      	lsls	r4, r4, #16
 800052c:	0c00      	lsrs	r0, r0, #16
 800052e:	1820      	adds	r0, r4, r0
 8000530:	1889      	adds	r1, r1, r2
 8000532:	bc80      	pop	{r7}
 8000534:	46b8      	mov	r8, r7
 8000536:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000538 <__udivmoddi4>:
 8000538:	b5f0      	push	{r4, r5, r6, r7, lr}
 800053a:	4657      	mov	r7, sl
 800053c:	464e      	mov	r6, r9
 800053e:	4645      	mov	r5, r8
 8000540:	46de      	mov	lr, fp
 8000542:	b5e0      	push	{r5, r6, r7, lr}
 8000544:	0004      	movs	r4, r0
 8000546:	000d      	movs	r5, r1
 8000548:	4692      	mov	sl, r2
 800054a:	4699      	mov	r9, r3
 800054c:	b083      	sub	sp, #12
 800054e:	428b      	cmp	r3, r1
 8000550:	d830      	bhi.n	80005b4 <__udivmoddi4+0x7c>
 8000552:	d02d      	beq.n	80005b0 <__udivmoddi4+0x78>
 8000554:	4649      	mov	r1, r9
 8000556:	4650      	mov	r0, sl
 8000558:	f001 fef0 	bl	800233c <__clzdi2>
 800055c:	0029      	movs	r1, r5
 800055e:	0006      	movs	r6, r0
 8000560:	0020      	movs	r0, r4
 8000562:	f001 feeb 	bl	800233c <__clzdi2>
 8000566:	1a33      	subs	r3, r6, r0
 8000568:	4698      	mov	r8, r3
 800056a:	3b20      	subs	r3, #32
 800056c:	469b      	mov	fp, r3
 800056e:	d433      	bmi.n	80005d8 <__udivmoddi4+0xa0>
 8000570:	465a      	mov	r2, fp
 8000572:	4653      	mov	r3, sl
 8000574:	4093      	lsls	r3, r2
 8000576:	4642      	mov	r2, r8
 8000578:	001f      	movs	r7, r3
 800057a:	4653      	mov	r3, sl
 800057c:	4093      	lsls	r3, r2
 800057e:	001e      	movs	r6, r3
 8000580:	42af      	cmp	r7, r5
 8000582:	d83a      	bhi.n	80005fa <__udivmoddi4+0xc2>
 8000584:	42af      	cmp	r7, r5
 8000586:	d100      	bne.n	800058a <__udivmoddi4+0x52>
 8000588:	e078      	b.n	800067c <__udivmoddi4+0x144>
 800058a:	465b      	mov	r3, fp
 800058c:	1ba4      	subs	r4, r4, r6
 800058e:	41bd      	sbcs	r5, r7
 8000590:	2b00      	cmp	r3, #0
 8000592:	da00      	bge.n	8000596 <__udivmoddi4+0x5e>
 8000594:	e075      	b.n	8000682 <__udivmoddi4+0x14a>
 8000596:	2200      	movs	r2, #0
 8000598:	2300      	movs	r3, #0
 800059a:	9200      	str	r2, [sp, #0]
 800059c:	9301      	str	r3, [sp, #4]
 800059e:	2301      	movs	r3, #1
 80005a0:	465a      	mov	r2, fp
 80005a2:	4093      	lsls	r3, r2
 80005a4:	9301      	str	r3, [sp, #4]
 80005a6:	2301      	movs	r3, #1
 80005a8:	4642      	mov	r2, r8
 80005aa:	4093      	lsls	r3, r2
 80005ac:	9300      	str	r3, [sp, #0]
 80005ae:	e028      	b.n	8000602 <__udivmoddi4+0xca>
 80005b0:	4282      	cmp	r2, r0
 80005b2:	d9cf      	bls.n	8000554 <__udivmoddi4+0x1c>
 80005b4:	2200      	movs	r2, #0
 80005b6:	2300      	movs	r3, #0
 80005b8:	9200      	str	r2, [sp, #0]
 80005ba:	9301      	str	r3, [sp, #4]
 80005bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80005be:	2b00      	cmp	r3, #0
 80005c0:	d001      	beq.n	80005c6 <__udivmoddi4+0x8e>
 80005c2:	601c      	str	r4, [r3, #0]
 80005c4:	605d      	str	r5, [r3, #4]
 80005c6:	9800      	ldr	r0, [sp, #0]
 80005c8:	9901      	ldr	r1, [sp, #4]
 80005ca:	b003      	add	sp, #12
 80005cc:	bcf0      	pop	{r4, r5, r6, r7}
 80005ce:	46bb      	mov	fp, r7
 80005d0:	46b2      	mov	sl, r6
 80005d2:	46a9      	mov	r9, r5
 80005d4:	46a0      	mov	r8, r4
 80005d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005d8:	4642      	mov	r2, r8
 80005da:	2320      	movs	r3, #32
 80005dc:	1a9b      	subs	r3, r3, r2
 80005de:	4652      	mov	r2, sl
 80005e0:	40da      	lsrs	r2, r3
 80005e2:	4641      	mov	r1, r8
 80005e4:	0013      	movs	r3, r2
 80005e6:	464a      	mov	r2, r9
 80005e8:	408a      	lsls	r2, r1
 80005ea:	0017      	movs	r7, r2
 80005ec:	4642      	mov	r2, r8
 80005ee:	431f      	orrs	r7, r3
 80005f0:	4653      	mov	r3, sl
 80005f2:	4093      	lsls	r3, r2
 80005f4:	001e      	movs	r6, r3
 80005f6:	42af      	cmp	r7, r5
 80005f8:	d9c4      	bls.n	8000584 <__udivmoddi4+0x4c>
 80005fa:	2200      	movs	r2, #0
 80005fc:	2300      	movs	r3, #0
 80005fe:	9200      	str	r2, [sp, #0]
 8000600:	9301      	str	r3, [sp, #4]
 8000602:	4643      	mov	r3, r8
 8000604:	2b00      	cmp	r3, #0
 8000606:	d0d9      	beq.n	80005bc <__udivmoddi4+0x84>
 8000608:	07fb      	lsls	r3, r7, #31
 800060a:	0872      	lsrs	r2, r6, #1
 800060c:	431a      	orrs	r2, r3
 800060e:	4646      	mov	r6, r8
 8000610:	087b      	lsrs	r3, r7, #1
 8000612:	e00e      	b.n	8000632 <__udivmoddi4+0xfa>
 8000614:	42ab      	cmp	r3, r5
 8000616:	d101      	bne.n	800061c <__udivmoddi4+0xe4>
 8000618:	42a2      	cmp	r2, r4
 800061a:	d80c      	bhi.n	8000636 <__udivmoddi4+0xfe>
 800061c:	1aa4      	subs	r4, r4, r2
 800061e:	419d      	sbcs	r5, r3
 8000620:	2001      	movs	r0, #1
 8000622:	1924      	adds	r4, r4, r4
 8000624:	416d      	adcs	r5, r5
 8000626:	2100      	movs	r1, #0
 8000628:	3e01      	subs	r6, #1
 800062a:	1824      	adds	r4, r4, r0
 800062c:	414d      	adcs	r5, r1
 800062e:	2e00      	cmp	r6, #0
 8000630:	d006      	beq.n	8000640 <__udivmoddi4+0x108>
 8000632:	42ab      	cmp	r3, r5
 8000634:	d9ee      	bls.n	8000614 <__udivmoddi4+0xdc>
 8000636:	3e01      	subs	r6, #1
 8000638:	1924      	adds	r4, r4, r4
 800063a:	416d      	adcs	r5, r5
 800063c:	2e00      	cmp	r6, #0
 800063e:	d1f8      	bne.n	8000632 <__udivmoddi4+0xfa>
 8000640:	9800      	ldr	r0, [sp, #0]
 8000642:	9901      	ldr	r1, [sp, #4]
 8000644:	465b      	mov	r3, fp
 8000646:	1900      	adds	r0, r0, r4
 8000648:	4169      	adcs	r1, r5
 800064a:	2b00      	cmp	r3, #0
 800064c:	db24      	blt.n	8000698 <__udivmoddi4+0x160>
 800064e:	002b      	movs	r3, r5
 8000650:	465a      	mov	r2, fp
 8000652:	4644      	mov	r4, r8
 8000654:	40d3      	lsrs	r3, r2
 8000656:	002a      	movs	r2, r5
 8000658:	40e2      	lsrs	r2, r4
 800065a:	001c      	movs	r4, r3
 800065c:	465b      	mov	r3, fp
 800065e:	0015      	movs	r5, r2
 8000660:	2b00      	cmp	r3, #0
 8000662:	db2a      	blt.n	80006ba <__udivmoddi4+0x182>
 8000664:	0026      	movs	r6, r4
 8000666:	409e      	lsls	r6, r3
 8000668:	0033      	movs	r3, r6
 800066a:	0026      	movs	r6, r4
 800066c:	4647      	mov	r7, r8
 800066e:	40be      	lsls	r6, r7
 8000670:	0032      	movs	r2, r6
 8000672:	1a80      	subs	r0, r0, r2
 8000674:	4199      	sbcs	r1, r3
 8000676:	9000      	str	r0, [sp, #0]
 8000678:	9101      	str	r1, [sp, #4]
 800067a:	e79f      	b.n	80005bc <__udivmoddi4+0x84>
 800067c:	42a3      	cmp	r3, r4
 800067e:	d8bc      	bhi.n	80005fa <__udivmoddi4+0xc2>
 8000680:	e783      	b.n	800058a <__udivmoddi4+0x52>
 8000682:	4642      	mov	r2, r8
 8000684:	2320      	movs	r3, #32
 8000686:	2100      	movs	r1, #0
 8000688:	1a9b      	subs	r3, r3, r2
 800068a:	2200      	movs	r2, #0
 800068c:	9100      	str	r1, [sp, #0]
 800068e:	9201      	str	r2, [sp, #4]
 8000690:	2201      	movs	r2, #1
 8000692:	40da      	lsrs	r2, r3
 8000694:	9201      	str	r2, [sp, #4]
 8000696:	e786      	b.n	80005a6 <__udivmoddi4+0x6e>
 8000698:	4642      	mov	r2, r8
 800069a:	2320      	movs	r3, #32
 800069c:	1a9b      	subs	r3, r3, r2
 800069e:	002a      	movs	r2, r5
 80006a0:	4646      	mov	r6, r8
 80006a2:	409a      	lsls	r2, r3
 80006a4:	0023      	movs	r3, r4
 80006a6:	40f3      	lsrs	r3, r6
 80006a8:	4644      	mov	r4, r8
 80006aa:	4313      	orrs	r3, r2
 80006ac:	002a      	movs	r2, r5
 80006ae:	40e2      	lsrs	r2, r4
 80006b0:	001c      	movs	r4, r3
 80006b2:	465b      	mov	r3, fp
 80006b4:	0015      	movs	r5, r2
 80006b6:	2b00      	cmp	r3, #0
 80006b8:	dad4      	bge.n	8000664 <__udivmoddi4+0x12c>
 80006ba:	4642      	mov	r2, r8
 80006bc:	002f      	movs	r7, r5
 80006be:	2320      	movs	r3, #32
 80006c0:	0026      	movs	r6, r4
 80006c2:	4097      	lsls	r7, r2
 80006c4:	1a9b      	subs	r3, r3, r2
 80006c6:	40de      	lsrs	r6, r3
 80006c8:	003b      	movs	r3, r7
 80006ca:	4333      	orrs	r3, r6
 80006cc:	e7cd      	b.n	800066a <__udivmoddi4+0x132>
 80006ce:	46c0      	nop			; (mov r8, r8)

080006d0 <__aeabi_dadd>:
 80006d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006d2:	464f      	mov	r7, r9
 80006d4:	46d6      	mov	lr, sl
 80006d6:	4646      	mov	r6, r8
 80006d8:	000d      	movs	r5, r1
 80006da:	0001      	movs	r1, r0
 80006dc:	0018      	movs	r0, r3
 80006de:	b5c0      	push	{r6, r7, lr}
 80006e0:	0017      	movs	r7, r2
 80006e2:	032b      	lsls	r3, r5, #12
 80006e4:	0a5a      	lsrs	r2, r3, #9
 80006e6:	0f4b      	lsrs	r3, r1, #29
 80006e8:	4313      	orrs	r3, r2
 80006ea:	00ca      	lsls	r2, r1, #3
 80006ec:	4691      	mov	r9, r2
 80006ee:	0302      	lsls	r2, r0, #12
 80006f0:	006e      	lsls	r6, r5, #1
 80006f2:	0041      	lsls	r1, r0, #1
 80006f4:	0a52      	lsrs	r2, r2, #9
 80006f6:	0fec      	lsrs	r4, r5, #31
 80006f8:	0f7d      	lsrs	r5, r7, #29
 80006fa:	4315      	orrs	r5, r2
 80006fc:	0d76      	lsrs	r6, r6, #21
 80006fe:	0d49      	lsrs	r1, r1, #21
 8000700:	0fc0      	lsrs	r0, r0, #31
 8000702:	4682      	mov	sl, r0
 8000704:	46ac      	mov	ip, r5
 8000706:	00ff      	lsls	r7, r7, #3
 8000708:	1a72      	subs	r2, r6, r1
 800070a:	4284      	cmp	r4, r0
 800070c:	d100      	bne.n	8000710 <__aeabi_dadd+0x40>
 800070e:	e098      	b.n	8000842 <__aeabi_dadd+0x172>
 8000710:	2a00      	cmp	r2, #0
 8000712:	dc00      	bgt.n	8000716 <__aeabi_dadd+0x46>
 8000714:	e081      	b.n	800081a <__aeabi_dadd+0x14a>
 8000716:	2900      	cmp	r1, #0
 8000718:	d100      	bne.n	800071c <__aeabi_dadd+0x4c>
 800071a:	e0b6      	b.n	800088a <__aeabi_dadd+0x1ba>
 800071c:	49c9      	ldr	r1, [pc, #804]	; (8000a44 <__aeabi_dadd+0x374>)
 800071e:	428e      	cmp	r6, r1
 8000720:	d100      	bne.n	8000724 <__aeabi_dadd+0x54>
 8000722:	e172      	b.n	8000a0a <__aeabi_dadd+0x33a>
 8000724:	2180      	movs	r1, #128	; 0x80
 8000726:	0028      	movs	r0, r5
 8000728:	0409      	lsls	r1, r1, #16
 800072a:	4308      	orrs	r0, r1
 800072c:	4684      	mov	ip, r0
 800072e:	2a38      	cmp	r2, #56	; 0x38
 8000730:	dd00      	ble.n	8000734 <__aeabi_dadd+0x64>
 8000732:	e15e      	b.n	80009f2 <__aeabi_dadd+0x322>
 8000734:	2a1f      	cmp	r2, #31
 8000736:	dd00      	ble.n	800073a <__aeabi_dadd+0x6a>
 8000738:	e1ee      	b.n	8000b18 <__aeabi_dadd+0x448>
 800073a:	2020      	movs	r0, #32
 800073c:	0039      	movs	r1, r7
 800073e:	4665      	mov	r5, ip
 8000740:	1a80      	subs	r0, r0, r2
 8000742:	4087      	lsls	r7, r0
 8000744:	40d1      	lsrs	r1, r2
 8000746:	4085      	lsls	r5, r0
 8000748:	430d      	orrs	r5, r1
 800074a:	0039      	movs	r1, r7
 800074c:	1e4f      	subs	r7, r1, #1
 800074e:	41b9      	sbcs	r1, r7
 8000750:	4667      	mov	r7, ip
 8000752:	40d7      	lsrs	r7, r2
 8000754:	4329      	orrs	r1, r5
 8000756:	1bdb      	subs	r3, r3, r7
 8000758:	464a      	mov	r2, r9
 800075a:	1a55      	subs	r5, r2, r1
 800075c:	45a9      	cmp	r9, r5
 800075e:	4189      	sbcs	r1, r1
 8000760:	4249      	negs	r1, r1
 8000762:	1a5b      	subs	r3, r3, r1
 8000764:	4698      	mov	r8, r3
 8000766:	4643      	mov	r3, r8
 8000768:	021b      	lsls	r3, r3, #8
 800076a:	d400      	bmi.n	800076e <__aeabi_dadd+0x9e>
 800076c:	e0cc      	b.n	8000908 <__aeabi_dadd+0x238>
 800076e:	4643      	mov	r3, r8
 8000770:	025b      	lsls	r3, r3, #9
 8000772:	0a5b      	lsrs	r3, r3, #9
 8000774:	4698      	mov	r8, r3
 8000776:	4643      	mov	r3, r8
 8000778:	2b00      	cmp	r3, #0
 800077a:	d100      	bne.n	800077e <__aeabi_dadd+0xae>
 800077c:	e12c      	b.n	80009d8 <__aeabi_dadd+0x308>
 800077e:	4640      	mov	r0, r8
 8000780:	f001 fdbe 	bl	8002300 <__clzsi2>
 8000784:	0001      	movs	r1, r0
 8000786:	3908      	subs	r1, #8
 8000788:	2220      	movs	r2, #32
 800078a:	0028      	movs	r0, r5
 800078c:	4643      	mov	r3, r8
 800078e:	1a52      	subs	r2, r2, r1
 8000790:	408b      	lsls	r3, r1
 8000792:	40d0      	lsrs	r0, r2
 8000794:	408d      	lsls	r5, r1
 8000796:	4303      	orrs	r3, r0
 8000798:	428e      	cmp	r6, r1
 800079a:	dd00      	ble.n	800079e <__aeabi_dadd+0xce>
 800079c:	e117      	b.n	80009ce <__aeabi_dadd+0x2fe>
 800079e:	1b8e      	subs	r6, r1, r6
 80007a0:	1c72      	adds	r2, r6, #1
 80007a2:	2a1f      	cmp	r2, #31
 80007a4:	dd00      	ble.n	80007a8 <__aeabi_dadd+0xd8>
 80007a6:	e1a7      	b.n	8000af8 <__aeabi_dadd+0x428>
 80007a8:	2120      	movs	r1, #32
 80007aa:	0018      	movs	r0, r3
 80007ac:	002e      	movs	r6, r5
 80007ae:	1a89      	subs	r1, r1, r2
 80007b0:	408d      	lsls	r5, r1
 80007b2:	4088      	lsls	r0, r1
 80007b4:	40d6      	lsrs	r6, r2
 80007b6:	40d3      	lsrs	r3, r2
 80007b8:	1e69      	subs	r1, r5, #1
 80007ba:	418d      	sbcs	r5, r1
 80007bc:	4330      	orrs	r0, r6
 80007be:	4698      	mov	r8, r3
 80007c0:	2600      	movs	r6, #0
 80007c2:	4305      	orrs	r5, r0
 80007c4:	076b      	lsls	r3, r5, #29
 80007c6:	d009      	beq.n	80007dc <__aeabi_dadd+0x10c>
 80007c8:	230f      	movs	r3, #15
 80007ca:	402b      	ands	r3, r5
 80007cc:	2b04      	cmp	r3, #4
 80007ce:	d005      	beq.n	80007dc <__aeabi_dadd+0x10c>
 80007d0:	1d2b      	adds	r3, r5, #4
 80007d2:	42ab      	cmp	r3, r5
 80007d4:	41ad      	sbcs	r5, r5
 80007d6:	426d      	negs	r5, r5
 80007d8:	44a8      	add	r8, r5
 80007da:	001d      	movs	r5, r3
 80007dc:	4643      	mov	r3, r8
 80007de:	021b      	lsls	r3, r3, #8
 80007e0:	d400      	bmi.n	80007e4 <__aeabi_dadd+0x114>
 80007e2:	e094      	b.n	800090e <__aeabi_dadd+0x23e>
 80007e4:	4b97      	ldr	r3, [pc, #604]	; (8000a44 <__aeabi_dadd+0x374>)
 80007e6:	1c72      	adds	r2, r6, #1
 80007e8:	429a      	cmp	r2, r3
 80007ea:	d100      	bne.n	80007ee <__aeabi_dadd+0x11e>
 80007ec:	e09d      	b.n	800092a <__aeabi_dadd+0x25a>
 80007ee:	4641      	mov	r1, r8
 80007f0:	4b95      	ldr	r3, [pc, #596]	; (8000a48 <__aeabi_dadd+0x378>)
 80007f2:	08ed      	lsrs	r5, r5, #3
 80007f4:	4019      	ands	r1, r3
 80007f6:	000b      	movs	r3, r1
 80007f8:	0552      	lsls	r2, r2, #21
 80007fa:	0749      	lsls	r1, r1, #29
 80007fc:	025b      	lsls	r3, r3, #9
 80007fe:	4329      	orrs	r1, r5
 8000800:	0b1b      	lsrs	r3, r3, #12
 8000802:	0d52      	lsrs	r2, r2, #21
 8000804:	0512      	lsls	r2, r2, #20
 8000806:	4313      	orrs	r3, r2
 8000808:	07e4      	lsls	r4, r4, #31
 800080a:	4323      	orrs	r3, r4
 800080c:	0008      	movs	r0, r1
 800080e:	0019      	movs	r1, r3
 8000810:	bce0      	pop	{r5, r6, r7}
 8000812:	46ba      	mov	sl, r7
 8000814:	46b1      	mov	r9, r6
 8000816:	46a8      	mov	r8, r5
 8000818:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800081a:	2a00      	cmp	r2, #0
 800081c:	d043      	beq.n	80008a6 <__aeabi_dadd+0x1d6>
 800081e:	1b8a      	subs	r2, r1, r6
 8000820:	2e00      	cmp	r6, #0
 8000822:	d000      	beq.n	8000826 <__aeabi_dadd+0x156>
 8000824:	e12a      	b.n	8000a7c <__aeabi_dadd+0x3ac>
 8000826:	464c      	mov	r4, r9
 8000828:	431c      	orrs	r4, r3
 800082a:	d100      	bne.n	800082e <__aeabi_dadd+0x15e>
 800082c:	e1d1      	b.n	8000bd2 <__aeabi_dadd+0x502>
 800082e:	1e54      	subs	r4, r2, #1
 8000830:	2a01      	cmp	r2, #1
 8000832:	d100      	bne.n	8000836 <__aeabi_dadd+0x166>
 8000834:	e21f      	b.n	8000c76 <__aeabi_dadd+0x5a6>
 8000836:	4d83      	ldr	r5, [pc, #524]	; (8000a44 <__aeabi_dadd+0x374>)
 8000838:	42aa      	cmp	r2, r5
 800083a:	d100      	bne.n	800083e <__aeabi_dadd+0x16e>
 800083c:	e272      	b.n	8000d24 <__aeabi_dadd+0x654>
 800083e:	0022      	movs	r2, r4
 8000840:	e123      	b.n	8000a8a <__aeabi_dadd+0x3ba>
 8000842:	2a00      	cmp	r2, #0
 8000844:	dc00      	bgt.n	8000848 <__aeabi_dadd+0x178>
 8000846:	e098      	b.n	800097a <__aeabi_dadd+0x2aa>
 8000848:	2900      	cmp	r1, #0
 800084a:	d042      	beq.n	80008d2 <__aeabi_dadd+0x202>
 800084c:	497d      	ldr	r1, [pc, #500]	; (8000a44 <__aeabi_dadd+0x374>)
 800084e:	428e      	cmp	r6, r1
 8000850:	d100      	bne.n	8000854 <__aeabi_dadd+0x184>
 8000852:	e0da      	b.n	8000a0a <__aeabi_dadd+0x33a>
 8000854:	2180      	movs	r1, #128	; 0x80
 8000856:	0028      	movs	r0, r5
 8000858:	0409      	lsls	r1, r1, #16
 800085a:	4308      	orrs	r0, r1
 800085c:	4684      	mov	ip, r0
 800085e:	2a38      	cmp	r2, #56	; 0x38
 8000860:	dd00      	ble.n	8000864 <__aeabi_dadd+0x194>
 8000862:	e129      	b.n	8000ab8 <__aeabi_dadd+0x3e8>
 8000864:	2a1f      	cmp	r2, #31
 8000866:	dc00      	bgt.n	800086a <__aeabi_dadd+0x19a>
 8000868:	e187      	b.n	8000b7a <__aeabi_dadd+0x4aa>
 800086a:	0011      	movs	r1, r2
 800086c:	4665      	mov	r5, ip
 800086e:	3920      	subs	r1, #32
 8000870:	40cd      	lsrs	r5, r1
 8000872:	2a20      	cmp	r2, #32
 8000874:	d004      	beq.n	8000880 <__aeabi_dadd+0x1b0>
 8000876:	2040      	movs	r0, #64	; 0x40
 8000878:	4661      	mov	r1, ip
 800087a:	1a82      	subs	r2, r0, r2
 800087c:	4091      	lsls	r1, r2
 800087e:	430f      	orrs	r7, r1
 8000880:	0039      	movs	r1, r7
 8000882:	1e4f      	subs	r7, r1, #1
 8000884:	41b9      	sbcs	r1, r7
 8000886:	430d      	orrs	r5, r1
 8000888:	e11b      	b.n	8000ac2 <__aeabi_dadd+0x3f2>
 800088a:	0029      	movs	r1, r5
 800088c:	4339      	orrs	r1, r7
 800088e:	d100      	bne.n	8000892 <__aeabi_dadd+0x1c2>
 8000890:	e0b5      	b.n	80009fe <__aeabi_dadd+0x32e>
 8000892:	1e51      	subs	r1, r2, #1
 8000894:	2a01      	cmp	r2, #1
 8000896:	d100      	bne.n	800089a <__aeabi_dadd+0x1ca>
 8000898:	e1ab      	b.n	8000bf2 <__aeabi_dadd+0x522>
 800089a:	486a      	ldr	r0, [pc, #424]	; (8000a44 <__aeabi_dadd+0x374>)
 800089c:	4282      	cmp	r2, r0
 800089e:	d100      	bne.n	80008a2 <__aeabi_dadd+0x1d2>
 80008a0:	e1b2      	b.n	8000c08 <__aeabi_dadd+0x538>
 80008a2:	000a      	movs	r2, r1
 80008a4:	e743      	b.n	800072e <__aeabi_dadd+0x5e>
 80008a6:	4969      	ldr	r1, [pc, #420]	; (8000a4c <__aeabi_dadd+0x37c>)
 80008a8:	1c75      	adds	r5, r6, #1
 80008aa:	420d      	tst	r5, r1
 80008ac:	d000      	beq.n	80008b0 <__aeabi_dadd+0x1e0>
 80008ae:	e0cf      	b.n	8000a50 <__aeabi_dadd+0x380>
 80008b0:	2e00      	cmp	r6, #0
 80008b2:	d000      	beq.n	80008b6 <__aeabi_dadd+0x1e6>
 80008b4:	e193      	b.n	8000bde <__aeabi_dadd+0x50e>
 80008b6:	4649      	mov	r1, r9
 80008b8:	4319      	orrs	r1, r3
 80008ba:	d100      	bne.n	80008be <__aeabi_dadd+0x1ee>
 80008bc:	e1d1      	b.n	8000c62 <__aeabi_dadd+0x592>
 80008be:	4661      	mov	r1, ip
 80008c0:	4339      	orrs	r1, r7
 80008c2:	d000      	beq.n	80008c6 <__aeabi_dadd+0x1f6>
 80008c4:	e1e3      	b.n	8000c8e <__aeabi_dadd+0x5be>
 80008c6:	4649      	mov	r1, r9
 80008c8:	0758      	lsls	r0, r3, #29
 80008ca:	08c9      	lsrs	r1, r1, #3
 80008cc:	4301      	orrs	r1, r0
 80008ce:	08db      	lsrs	r3, r3, #3
 80008d0:	e026      	b.n	8000920 <__aeabi_dadd+0x250>
 80008d2:	0029      	movs	r1, r5
 80008d4:	4339      	orrs	r1, r7
 80008d6:	d100      	bne.n	80008da <__aeabi_dadd+0x20a>
 80008d8:	e091      	b.n	80009fe <__aeabi_dadd+0x32e>
 80008da:	1e51      	subs	r1, r2, #1
 80008dc:	2a01      	cmp	r2, #1
 80008de:	d005      	beq.n	80008ec <__aeabi_dadd+0x21c>
 80008e0:	4858      	ldr	r0, [pc, #352]	; (8000a44 <__aeabi_dadd+0x374>)
 80008e2:	4282      	cmp	r2, r0
 80008e4:	d100      	bne.n	80008e8 <__aeabi_dadd+0x218>
 80008e6:	e18f      	b.n	8000c08 <__aeabi_dadd+0x538>
 80008e8:	000a      	movs	r2, r1
 80008ea:	e7b8      	b.n	800085e <__aeabi_dadd+0x18e>
 80008ec:	003d      	movs	r5, r7
 80008ee:	444d      	add	r5, r9
 80008f0:	454d      	cmp	r5, r9
 80008f2:	4189      	sbcs	r1, r1
 80008f4:	4463      	add	r3, ip
 80008f6:	4698      	mov	r8, r3
 80008f8:	4249      	negs	r1, r1
 80008fa:	4488      	add	r8, r1
 80008fc:	4643      	mov	r3, r8
 80008fe:	2602      	movs	r6, #2
 8000900:	021b      	lsls	r3, r3, #8
 8000902:	d500      	bpl.n	8000906 <__aeabi_dadd+0x236>
 8000904:	e0eb      	b.n	8000ade <__aeabi_dadd+0x40e>
 8000906:	3e01      	subs	r6, #1
 8000908:	076b      	lsls	r3, r5, #29
 800090a:	d000      	beq.n	800090e <__aeabi_dadd+0x23e>
 800090c:	e75c      	b.n	80007c8 <__aeabi_dadd+0xf8>
 800090e:	4643      	mov	r3, r8
 8000910:	08e9      	lsrs	r1, r5, #3
 8000912:	075a      	lsls	r2, r3, #29
 8000914:	4311      	orrs	r1, r2
 8000916:	0032      	movs	r2, r6
 8000918:	08db      	lsrs	r3, r3, #3
 800091a:	484a      	ldr	r0, [pc, #296]	; (8000a44 <__aeabi_dadd+0x374>)
 800091c:	4282      	cmp	r2, r0
 800091e:	d021      	beq.n	8000964 <__aeabi_dadd+0x294>
 8000920:	031b      	lsls	r3, r3, #12
 8000922:	0552      	lsls	r2, r2, #21
 8000924:	0b1b      	lsrs	r3, r3, #12
 8000926:	0d52      	lsrs	r2, r2, #21
 8000928:	e76c      	b.n	8000804 <__aeabi_dadd+0x134>
 800092a:	2300      	movs	r3, #0
 800092c:	2100      	movs	r1, #0
 800092e:	e769      	b.n	8000804 <__aeabi_dadd+0x134>
 8000930:	002a      	movs	r2, r5
 8000932:	433a      	orrs	r2, r7
 8000934:	d069      	beq.n	8000a0a <__aeabi_dadd+0x33a>
 8000936:	464a      	mov	r2, r9
 8000938:	0758      	lsls	r0, r3, #29
 800093a:	08d1      	lsrs	r1, r2, #3
 800093c:	08da      	lsrs	r2, r3, #3
 800093e:	2380      	movs	r3, #128	; 0x80
 8000940:	031b      	lsls	r3, r3, #12
 8000942:	4308      	orrs	r0, r1
 8000944:	421a      	tst	r2, r3
 8000946:	d007      	beq.n	8000958 <__aeabi_dadd+0x288>
 8000948:	0029      	movs	r1, r5
 800094a:	08ed      	lsrs	r5, r5, #3
 800094c:	421d      	tst	r5, r3
 800094e:	d103      	bne.n	8000958 <__aeabi_dadd+0x288>
 8000950:	002a      	movs	r2, r5
 8000952:	08ff      	lsrs	r7, r7, #3
 8000954:	0748      	lsls	r0, r1, #29
 8000956:	4338      	orrs	r0, r7
 8000958:	0f43      	lsrs	r3, r0, #29
 800095a:	00c1      	lsls	r1, r0, #3
 800095c:	075b      	lsls	r3, r3, #29
 800095e:	08c9      	lsrs	r1, r1, #3
 8000960:	4319      	orrs	r1, r3
 8000962:	0013      	movs	r3, r2
 8000964:	000a      	movs	r2, r1
 8000966:	431a      	orrs	r2, r3
 8000968:	d100      	bne.n	800096c <__aeabi_dadd+0x29c>
 800096a:	e213      	b.n	8000d94 <__aeabi_dadd+0x6c4>
 800096c:	2280      	movs	r2, #128	; 0x80
 800096e:	0312      	lsls	r2, r2, #12
 8000970:	4313      	orrs	r3, r2
 8000972:	031b      	lsls	r3, r3, #12
 8000974:	4a33      	ldr	r2, [pc, #204]	; (8000a44 <__aeabi_dadd+0x374>)
 8000976:	0b1b      	lsrs	r3, r3, #12
 8000978:	e744      	b.n	8000804 <__aeabi_dadd+0x134>
 800097a:	2a00      	cmp	r2, #0
 800097c:	d04b      	beq.n	8000a16 <__aeabi_dadd+0x346>
 800097e:	1b8a      	subs	r2, r1, r6
 8000980:	2e00      	cmp	r6, #0
 8000982:	d100      	bne.n	8000986 <__aeabi_dadd+0x2b6>
 8000984:	e0e7      	b.n	8000b56 <__aeabi_dadd+0x486>
 8000986:	482f      	ldr	r0, [pc, #188]	; (8000a44 <__aeabi_dadd+0x374>)
 8000988:	4281      	cmp	r1, r0
 800098a:	d100      	bne.n	800098e <__aeabi_dadd+0x2be>
 800098c:	e195      	b.n	8000cba <__aeabi_dadd+0x5ea>
 800098e:	2080      	movs	r0, #128	; 0x80
 8000990:	0400      	lsls	r0, r0, #16
 8000992:	4303      	orrs	r3, r0
 8000994:	2a38      	cmp	r2, #56	; 0x38
 8000996:	dd00      	ble.n	800099a <__aeabi_dadd+0x2ca>
 8000998:	e143      	b.n	8000c22 <__aeabi_dadd+0x552>
 800099a:	2a1f      	cmp	r2, #31
 800099c:	dd00      	ble.n	80009a0 <__aeabi_dadd+0x2d0>
 800099e:	e1db      	b.n	8000d58 <__aeabi_dadd+0x688>
 80009a0:	2020      	movs	r0, #32
 80009a2:	001d      	movs	r5, r3
 80009a4:	464e      	mov	r6, r9
 80009a6:	1a80      	subs	r0, r0, r2
 80009a8:	4085      	lsls	r5, r0
 80009aa:	40d6      	lsrs	r6, r2
 80009ac:	4335      	orrs	r5, r6
 80009ae:	464e      	mov	r6, r9
 80009b0:	4086      	lsls	r6, r0
 80009b2:	0030      	movs	r0, r6
 80009b4:	40d3      	lsrs	r3, r2
 80009b6:	1e46      	subs	r6, r0, #1
 80009b8:	41b0      	sbcs	r0, r6
 80009ba:	449c      	add	ip, r3
 80009bc:	4305      	orrs	r5, r0
 80009be:	19ed      	adds	r5, r5, r7
 80009c0:	42bd      	cmp	r5, r7
 80009c2:	419b      	sbcs	r3, r3
 80009c4:	425b      	negs	r3, r3
 80009c6:	4463      	add	r3, ip
 80009c8:	4698      	mov	r8, r3
 80009ca:	000e      	movs	r6, r1
 80009cc:	e07f      	b.n	8000ace <__aeabi_dadd+0x3fe>
 80009ce:	4a1e      	ldr	r2, [pc, #120]	; (8000a48 <__aeabi_dadd+0x378>)
 80009d0:	1a76      	subs	r6, r6, r1
 80009d2:	4013      	ands	r3, r2
 80009d4:	4698      	mov	r8, r3
 80009d6:	e6f5      	b.n	80007c4 <__aeabi_dadd+0xf4>
 80009d8:	0028      	movs	r0, r5
 80009da:	f001 fc91 	bl	8002300 <__clzsi2>
 80009de:	0001      	movs	r1, r0
 80009e0:	3118      	adds	r1, #24
 80009e2:	291f      	cmp	r1, #31
 80009e4:	dc00      	bgt.n	80009e8 <__aeabi_dadd+0x318>
 80009e6:	e6cf      	b.n	8000788 <__aeabi_dadd+0xb8>
 80009e8:	002b      	movs	r3, r5
 80009ea:	3808      	subs	r0, #8
 80009ec:	4083      	lsls	r3, r0
 80009ee:	2500      	movs	r5, #0
 80009f0:	e6d2      	b.n	8000798 <__aeabi_dadd+0xc8>
 80009f2:	4662      	mov	r2, ip
 80009f4:	433a      	orrs	r2, r7
 80009f6:	0011      	movs	r1, r2
 80009f8:	1e4f      	subs	r7, r1, #1
 80009fa:	41b9      	sbcs	r1, r7
 80009fc:	e6ac      	b.n	8000758 <__aeabi_dadd+0x88>
 80009fe:	4649      	mov	r1, r9
 8000a00:	0758      	lsls	r0, r3, #29
 8000a02:	08c9      	lsrs	r1, r1, #3
 8000a04:	4301      	orrs	r1, r0
 8000a06:	08db      	lsrs	r3, r3, #3
 8000a08:	e787      	b.n	800091a <__aeabi_dadd+0x24a>
 8000a0a:	4649      	mov	r1, r9
 8000a0c:	075a      	lsls	r2, r3, #29
 8000a0e:	08c9      	lsrs	r1, r1, #3
 8000a10:	4311      	orrs	r1, r2
 8000a12:	08db      	lsrs	r3, r3, #3
 8000a14:	e7a6      	b.n	8000964 <__aeabi_dadd+0x294>
 8000a16:	490d      	ldr	r1, [pc, #52]	; (8000a4c <__aeabi_dadd+0x37c>)
 8000a18:	1c70      	adds	r0, r6, #1
 8000a1a:	4208      	tst	r0, r1
 8000a1c:	d000      	beq.n	8000a20 <__aeabi_dadd+0x350>
 8000a1e:	e0bb      	b.n	8000b98 <__aeabi_dadd+0x4c8>
 8000a20:	2e00      	cmp	r6, #0
 8000a22:	d000      	beq.n	8000a26 <__aeabi_dadd+0x356>
 8000a24:	e114      	b.n	8000c50 <__aeabi_dadd+0x580>
 8000a26:	4649      	mov	r1, r9
 8000a28:	4319      	orrs	r1, r3
 8000a2a:	d100      	bne.n	8000a2e <__aeabi_dadd+0x35e>
 8000a2c:	e175      	b.n	8000d1a <__aeabi_dadd+0x64a>
 8000a2e:	0029      	movs	r1, r5
 8000a30:	4339      	orrs	r1, r7
 8000a32:	d000      	beq.n	8000a36 <__aeabi_dadd+0x366>
 8000a34:	e17e      	b.n	8000d34 <__aeabi_dadd+0x664>
 8000a36:	4649      	mov	r1, r9
 8000a38:	0758      	lsls	r0, r3, #29
 8000a3a:	08c9      	lsrs	r1, r1, #3
 8000a3c:	4301      	orrs	r1, r0
 8000a3e:	08db      	lsrs	r3, r3, #3
 8000a40:	e76e      	b.n	8000920 <__aeabi_dadd+0x250>
 8000a42:	46c0      	nop			; (mov r8, r8)
 8000a44:	000007ff 	.word	0x000007ff
 8000a48:	ff7fffff 	.word	0xff7fffff
 8000a4c:	000007fe 	.word	0x000007fe
 8000a50:	4649      	mov	r1, r9
 8000a52:	1bcd      	subs	r5, r1, r7
 8000a54:	4661      	mov	r1, ip
 8000a56:	1a58      	subs	r0, r3, r1
 8000a58:	45a9      	cmp	r9, r5
 8000a5a:	4189      	sbcs	r1, r1
 8000a5c:	4249      	negs	r1, r1
 8000a5e:	4688      	mov	r8, r1
 8000a60:	0001      	movs	r1, r0
 8000a62:	4640      	mov	r0, r8
 8000a64:	1a09      	subs	r1, r1, r0
 8000a66:	4688      	mov	r8, r1
 8000a68:	0209      	lsls	r1, r1, #8
 8000a6a:	d500      	bpl.n	8000a6e <__aeabi_dadd+0x39e>
 8000a6c:	e0a6      	b.n	8000bbc <__aeabi_dadd+0x4ec>
 8000a6e:	4641      	mov	r1, r8
 8000a70:	4329      	orrs	r1, r5
 8000a72:	d000      	beq.n	8000a76 <__aeabi_dadd+0x3a6>
 8000a74:	e67f      	b.n	8000776 <__aeabi_dadd+0xa6>
 8000a76:	2300      	movs	r3, #0
 8000a78:	2400      	movs	r4, #0
 8000a7a:	e751      	b.n	8000920 <__aeabi_dadd+0x250>
 8000a7c:	4cc7      	ldr	r4, [pc, #796]	; (8000d9c <__aeabi_dadd+0x6cc>)
 8000a7e:	42a1      	cmp	r1, r4
 8000a80:	d100      	bne.n	8000a84 <__aeabi_dadd+0x3b4>
 8000a82:	e0c7      	b.n	8000c14 <__aeabi_dadd+0x544>
 8000a84:	2480      	movs	r4, #128	; 0x80
 8000a86:	0424      	lsls	r4, r4, #16
 8000a88:	4323      	orrs	r3, r4
 8000a8a:	2a38      	cmp	r2, #56	; 0x38
 8000a8c:	dc54      	bgt.n	8000b38 <__aeabi_dadd+0x468>
 8000a8e:	2a1f      	cmp	r2, #31
 8000a90:	dd00      	ble.n	8000a94 <__aeabi_dadd+0x3c4>
 8000a92:	e0cc      	b.n	8000c2e <__aeabi_dadd+0x55e>
 8000a94:	2420      	movs	r4, #32
 8000a96:	4648      	mov	r0, r9
 8000a98:	1aa4      	subs	r4, r4, r2
 8000a9a:	001d      	movs	r5, r3
 8000a9c:	464e      	mov	r6, r9
 8000a9e:	40a0      	lsls	r0, r4
 8000aa0:	40d6      	lsrs	r6, r2
 8000aa2:	40a5      	lsls	r5, r4
 8000aa4:	0004      	movs	r4, r0
 8000aa6:	40d3      	lsrs	r3, r2
 8000aa8:	4662      	mov	r2, ip
 8000aaa:	4335      	orrs	r5, r6
 8000aac:	1e66      	subs	r6, r4, #1
 8000aae:	41b4      	sbcs	r4, r6
 8000ab0:	1ad3      	subs	r3, r2, r3
 8000ab2:	469c      	mov	ip, r3
 8000ab4:	4325      	orrs	r5, r4
 8000ab6:	e044      	b.n	8000b42 <__aeabi_dadd+0x472>
 8000ab8:	4662      	mov	r2, ip
 8000aba:	433a      	orrs	r2, r7
 8000abc:	0015      	movs	r5, r2
 8000abe:	1e6f      	subs	r7, r5, #1
 8000ac0:	41bd      	sbcs	r5, r7
 8000ac2:	444d      	add	r5, r9
 8000ac4:	454d      	cmp	r5, r9
 8000ac6:	4189      	sbcs	r1, r1
 8000ac8:	4249      	negs	r1, r1
 8000aca:	4688      	mov	r8, r1
 8000acc:	4498      	add	r8, r3
 8000ace:	4643      	mov	r3, r8
 8000ad0:	021b      	lsls	r3, r3, #8
 8000ad2:	d400      	bmi.n	8000ad6 <__aeabi_dadd+0x406>
 8000ad4:	e718      	b.n	8000908 <__aeabi_dadd+0x238>
 8000ad6:	4bb1      	ldr	r3, [pc, #708]	; (8000d9c <__aeabi_dadd+0x6cc>)
 8000ad8:	3601      	adds	r6, #1
 8000ada:	429e      	cmp	r6, r3
 8000adc:	d049      	beq.n	8000b72 <__aeabi_dadd+0x4a2>
 8000ade:	4642      	mov	r2, r8
 8000ae0:	4baf      	ldr	r3, [pc, #700]	; (8000da0 <__aeabi_dadd+0x6d0>)
 8000ae2:	2101      	movs	r1, #1
 8000ae4:	401a      	ands	r2, r3
 8000ae6:	0013      	movs	r3, r2
 8000ae8:	086a      	lsrs	r2, r5, #1
 8000aea:	400d      	ands	r5, r1
 8000aec:	4315      	orrs	r5, r2
 8000aee:	07d9      	lsls	r1, r3, #31
 8000af0:	085b      	lsrs	r3, r3, #1
 8000af2:	4698      	mov	r8, r3
 8000af4:	430d      	orrs	r5, r1
 8000af6:	e665      	b.n	80007c4 <__aeabi_dadd+0xf4>
 8000af8:	0018      	movs	r0, r3
 8000afa:	3e1f      	subs	r6, #31
 8000afc:	40f0      	lsrs	r0, r6
 8000afe:	2a20      	cmp	r2, #32
 8000b00:	d003      	beq.n	8000b0a <__aeabi_dadd+0x43a>
 8000b02:	2140      	movs	r1, #64	; 0x40
 8000b04:	1a8a      	subs	r2, r1, r2
 8000b06:	4093      	lsls	r3, r2
 8000b08:	431d      	orrs	r5, r3
 8000b0a:	1e69      	subs	r1, r5, #1
 8000b0c:	418d      	sbcs	r5, r1
 8000b0e:	2300      	movs	r3, #0
 8000b10:	2600      	movs	r6, #0
 8000b12:	4698      	mov	r8, r3
 8000b14:	4305      	orrs	r5, r0
 8000b16:	e6f7      	b.n	8000908 <__aeabi_dadd+0x238>
 8000b18:	0011      	movs	r1, r2
 8000b1a:	4665      	mov	r5, ip
 8000b1c:	3920      	subs	r1, #32
 8000b1e:	40cd      	lsrs	r5, r1
 8000b20:	2a20      	cmp	r2, #32
 8000b22:	d004      	beq.n	8000b2e <__aeabi_dadd+0x45e>
 8000b24:	2040      	movs	r0, #64	; 0x40
 8000b26:	4661      	mov	r1, ip
 8000b28:	1a82      	subs	r2, r0, r2
 8000b2a:	4091      	lsls	r1, r2
 8000b2c:	430f      	orrs	r7, r1
 8000b2e:	0039      	movs	r1, r7
 8000b30:	1e4f      	subs	r7, r1, #1
 8000b32:	41b9      	sbcs	r1, r7
 8000b34:	4329      	orrs	r1, r5
 8000b36:	e60f      	b.n	8000758 <__aeabi_dadd+0x88>
 8000b38:	464a      	mov	r2, r9
 8000b3a:	4313      	orrs	r3, r2
 8000b3c:	001d      	movs	r5, r3
 8000b3e:	1e6b      	subs	r3, r5, #1
 8000b40:	419d      	sbcs	r5, r3
 8000b42:	1b7d      	subs	r5, r7, r5
 8000b44:	42af      	cmp	r7, r5
 8000b46:	419b      	sbcs	r3, r3
 8000b48:	4662      	mov	r2, ip
 8000b4a:	425b      	negs	r3, r3
 8000b4c:	1ad3      	subs	r3, r2, r3
 8000b4e:	4698      	mov	r8, r3
 8000b50:	4654      	mov	r4, sl
 8000b52:	000e      	movs	r6, r1
 8000b54:	e607      	b.n	8000766 <__aeabi_dadd+0x96>
 8000b56:	4648      	mov	r0, r9
 8000b58:	4318      	orrs	r0, r3
 8000b5a:	d100      	bne.n	8000b5e <__aeabi_dadd+0x48e>
 8000b5c:	e0b3      	b.n	8000cc6 <__aeabi_dadd+0x5f6>
 8000b5e:	1e50      	subs	r0, r2, #1
 8000b60:	2a01      	cmp	r2, #1
 8000b62:	d100      	bne.n	8000b66 <__aeabi_dadd+0x496>
 8000b64:	e10d      	b.n	8000d82 <__aeabi_dadd+0x6b2>
 8000b66:	4d8d      	ldr	r5, [pc, #564]	; (8000d9c <__aeabi_dadd+0x6cc>)
 8000b68:	42aa      	cmp	r2, r5
 8000b6a:	d100      	bne.n	8000b6e <__aeabi_dadd+0x49e>
 8000b6c:	e0a5      	b.n	8000cba <__aeabi_dadd+0x5ea>
 8000b6e:	0002      	movs	r2, r0
 8000b70:	e710      	b.n	8000994 <__aeabi_dadd+0x2c4>
 8000b72:	0032      	movs	r2, r6
 8000b74:	2300      	movs	r3, #0
 8000b76:	2100      	movs	r1, #0
 8000b78:	e644      	b.n	8000804 <__aeabi_dadd+0x134>
 8000b7a:	2120      	movs	r1, #32
 8000b7c:	0038      	movs	r0, r7
 8000b7e:	1a89      	subs	r1, r1, r2
 8000b80:	4665      	mov	r5, ip
 8000b82:	408f      	lsls	r7, r1
 8000b84:	408d      	lsls	r5, r1
 8000b86:	40d0      	lsrs	r0, r2
 8000b88:	1e79      	subs	r1, r7, #1
 8000b8a:	418f      	sbcs	r7, r1
 8000b8c:	4305      	orrs	r5, r0
 8000b8e:	433d      	orrs	r5, r7
 8000b90:	4667      	mov	r7, ip
 8000b92:	40d7      	lsrs	r7, r2
 8000b94:	19db      	adds	r3, r3, r7
 8000b96:	e794      	b.n	8000ac2 <__aeabi_dadd+0x3f2>
 8000b98:	4a80      	ldr	r2, [pc, #512]	; (8000d9c <__aeabi_dadd+0x6cc>)
 8000b9a:	4290      	cmp	r0, r2
 8000b9c:	d100      	bne.n	8000ba0 <__aeabi_dadd+0x4d0>
 8000b9e:	e0ec      	b.n	8000d7a <__aeabi_dadd+0x6aa>
 8000ba0:	0039      	movs	r1, r7
 8000ba2:	4449      	add	r1, r9
 8000ba4:	4549      	cmp	r1, r9
 8000ba6:	4192      	sbcs	r2, r2
 8000ba8:	4463      	add	r3, ip
 8000baa:	4252      	negs	r2, r2
 8000bac:	189b      	adds	r3, r3, r2
 8000bae:	07dd      	lsls	r5, r3, #31
 8000bb0:	0849      	lsrs	r1, r1, #1
 8000bb2:	085b      	lsrs	r3, r3, #1
 8000bb4:	4698      	mov	r8, r3
 8000bb6:	0006      	movs	r6, r0
 8000bb8:	430d      	orrs	r5, r1
 8000bba:	e6a5      	b.n	8000908 <__aeabi_dadd+0x238>
 8000bbc:	464a      	mov	r2, r9
 8000bbe:	1abd      	subs	r5, r7, r2
 8000bc0:	42af      	cmp	r7, r5
 8000bc2:	4189      	sbcs	r1, r1
 8000bc4:	4662      	mov	r2, ip
 8000bc6:	4249      	negs	r1, r1
 8000bc8:	1ad3      	subs	r3, r2, r3
 8000bca:	1a5b      	subs	r3, r3, r1
 8000bcc:	4698      	mov	r8, r3
 8000bce:	4654      	mov	r4, sl
 8000bd0:	e5d1      	b.n	8000776 <__aeabi_dadd+0xa6>
 8000bd2:	076c      	lsls	r4, r5, #29
 8000bd4:	08f9      	lsrs	r1, r7, #3
 8000bd6:	4321      	orrs	r1, r4
 8000bd8:	08eb      	lsrs	r3, r5, #3
 8000bda:	0004      	movs	r4, r0
 8000bdc:	e69d      	b.n	800091a <__aeabi_dadd+0x24a>
 8000bde:	464a      	mov	r2, r9
 8000be0:	431a      	orrs	r2, r3
 8000be2:	d175      	bne.n	8000cd0 <__aeabi_dadd+0x600>
 8000be4:	4661      	mov	r1, ip
 8000be6:	4339      	orrs	r1, r7
 8000be8:	d114      	bne.n	8000c14 <__aeabi_dadd+0x544>
 8000bea:	2380      	movs	r3, #128	; 0x80
 8000bec:	2400      	movs	r4, #0
 8000bee:	031b      	lsls	r3, r3, #12
 8000bf0:	e6bc      	b.n	800096c <__aeabi_dadd+0x29c>
 8000bf2:	464a      	mov	r2, r9
 8000bf4:	1bd5      	subs	r5, r2, r7
 8000bf6:	45a9      	cmp	r9, r5
 8000bf8:	4189      	sbcs	r1, r1
 8000bfa:	4662      	mov	r2, ip
 8000bfc:	4249      	negs	r1, r1
 8000bfe:	1a9b      	subs	r3, r3, r2
 8000c00:	1a5b      	subs	r3, r3, r1
 8000c02:	4698      	mov	r8, r3
 8000c04:	2601      	movs	r6, #1
 8000c06:	e5ae      	b.n	8000766 <__aeabi_dadd+0x96>
 8000c08:	464a      	mov	r2, r9
 8000c0a:	08d1      	lsrs	r1, r2, #3
 8000c0c:	075a      	lsls	r2, r3, #29
 8000c0e:	4311      	orrs	r1, r2
 8000c10:	08db      	lsrs	r3, r3, #3
 8000c12:	e6a7      	b.n	8000964 <__aeabi_dadd+0x294>
 8000c14:	4663      	mov	r3, ip
 8000c16:	08f9      	lsrs	r1, r7, #3
 8000c18:	075a      	lsls	r2, r3, #29
 8000c1a:	4654      	mov	r4, sl
 8000c1c:	4311      	orrs	r1, r2
 8000c1e:	08db      	lsrs	r3, r3, #3
 8000c20:	e6a0      	b.n	8000964 <__aeabi_dadd+0x294>
 8000c22:	464a      	mov	r2, r9
 8000c24:	4313      	orrs	r3, r2
 8000c26:	001d      	movs	r5, r3
 8000c28:	1e6b      	subs	r3, r5, #1
 8000c2a:	419d      	sbcs	r5, r3
 8000c2c:	e6c7      	b.n	80009be <__aeabi_dadd+0x2ee>
 8000c2e:	0014      	movs	r4, r2
 8000c30:	001e      	movs	r6, r3
 8000c32:	3c20      	subs	r4, #32
 8000c34:	40e6      	lsrs	r6, r4
 8000c36:	2a20      	cmp	r2, #32
 8000c38:	d005      	beq.n	8000c46 <__aeabi_dadd+0x576>
 8000c3a:	2440      	movs	r4, #64	; 0x40
 8000c3c:	1aa2      	subs	r2, r4, r2
 8000c3e:	4093      	lsls	r3, r2
 8000c40:	464a      	mov	r2, r9
 8000c42:	431a      	orrs	r2, r3
 8000c44:	4691      	mov	r9, r2
 8000c46:	464d      	mov	r5, r9
 8000c48:	1e6b      	subs	r3, r5, #1
 8000c4a:	419d      	sbcs	r5, r3
 8000c4c:	4335      	orrs	r5, r6
 8000c4e:	e778      	b.n	8000b42 <__aeabi_dadd+0x472>
 8000c50:	464a      	mov	r2, r9
 8000c52:	431a      	orrs	r2, r3
 8000c54:	d000      	beq.n	8000c58 <__aeabi_dadd+0x588>
 8000c56:	e66b      	b.n	8000930 <__aeabi_dadd+0x260>
 8000c58:	076b      	lsls	r3, r5, #29
 8000c5a:	08f9      	lsrs	r1, r7, #3
 8000c5c:	4319      	orrs	r1, r3
 8000c5e:	08eb      	lsrs	r3, r5, #3
 8000c60:	e680      	b.n	8000964 <__aeabi_dadd+0x294>
 8000c62:	4661      	mov	r1, ip
 8000c64:	4339      	orrs	r1, r7
 8000c66:	d054      	beq.n	8000d12 <__aeabi_dadd+0x642>
 8000c68:	4663      	mov	r3, ip
 8000c6a:	08f9      	lsrs	r1, r7, #3
 8000c6c:	075c      	lsls	r4, r3, #29
 8000c6e:	4321      	orrs	r1, r4
 8000c70:	08db      	lsrs	r3, r3, #3
 8000c72:	0004      	movs	r4, r0
 8000c74:	e654      	b.n	8000920 <__aeabi_dadd+0x250>
 8000c76:	464a      	mov	r2, r9
 8000c78:	1abd      	subs	r5, r7, r2
 8000c7a:	42af      	cmp	r7, r5
 8000c7c:	4189      	sbcs	r1, r1
 8000c7e:	4662      	mov	r2, ip
 8000c80:	4249      	negs	r1, r1
 8000c82:	1ad3      	subs	r3, r2, r3
 8000c84:	1a5b      	subs	r3, r3, r1
 8000c86:	4698      	mov	r8, r3
 8000c88:	0004      	movs	r4, r0
 8000c8a:	2601      	movs	r6, #1
 8000c8c:	e56b      	b.n	8000766 <__aeabi_dadd+0x96>
 8000c8e:	464a      	mov	r2, r9
 8000c90:	1bd5      	subs	r5, r2, r7
 8000c92:	45a9      	cmp	r9, r5
 8000c94:	4189      	sbcs	r1, r1
 8000c96:	4662      	mov	r2, ip
 8000c98:	4249      	negs	r1, r1
 8000c9a:	1a9a      	subs	r2, r3, r2
 8000c9c:	1a52      	subs	r2, r2, r1
 8000c9e:	4690      	mov	r8, r2
 8000ca0:	0212      	lsls	r2, r2, #8
 8000ca2:	d532      	bpl.n	8000d0a <__aeabi_dadd+0x63a>
 8000ca4:	464a      	mov	r2, r9
 8000ca6:	1abd      	subs	r5, r7, r2
 8000ca8:	42af      	cmp	r7, r5
 8000caa:	4189      	sbcs	r1, r1
 8000cac:	4662      	mov	r2, ip
 8000cae:	4249      	negs	r1, r1
 8000cb0:	1ad3      	subs	r3, r2, r3
 8000cb2:	1a5b      	subs	r3, r3, r1
 8000cb4:	4698      	mov	r8, r3
 8000cb6:	0004      	movs	r4, r0
 8000cb8:	e584      	b.n	80007c4 <__aeabi_dadd+0xf4>
 8000cba:	4663      	mov	r3, ip
 8000cbc:	08f9      	lsrs	r1, r7, #3
 8000cbe:	075a      	lsls	r2, r3, #29
 8000cc0:	4311      	orrs	r1, r2
 8000cc2:	08db      	lsrs	r3, r3, #3
 8000cc4:	e64e      	b.n	8000964 <__aeabi_dadd+0x294>
 8000cc6:	08f9      	lsrs	r1, r7, #3
 8000cc8:	0768      	lsls	r0, r5, #29
 8000cca:	4301      	orrs	r1, r0
 8000ccc:	08eb      	lsrs	r3, r5, #3
 8000cce:	e624      	b.n	800091a <__aeabi_dadd+0x24a>
 8000cd0:	4662      	mov	r2, ip
 8000cd2:	433a      	orrs	r2, r7
 8000cd4:	d100      	bne.n	8000cd8 <__aeabi_dadd+0x608>
 8000cd6:	e698      	b.n	8000a0a <__aeabi_dadd+0x33a>
 8000cd8:	464a      	mov	r2, r9
 8000cda:	08d1      	lsrs	r1, r2, #3
 8000cdc:	075a      	lsls	r2, r3, #29
 8000cde:	4311      	orrs	r1, r2
 8000ce0:	08da      	lsrs	r2, r3, #3
 8000ce2:	2380      	movs	r3, #128	; 0x80
 8000ce4:	031b      	lsls	r3, r3, #12
 8000ce6:	421a      	tst	r2, r3
 8000ce8:	d008      	beq.n	8000cfc <__aeabi_dadd+0x62c>
 8000cea:	4660      	mov	r0, ip
 8000cec:	08c5      	lsrs	r5, r0, #3
 8000cee:	421d      	tst	r5, r3
 8000cf0:	d104      	bne.n	8000cfc <__aeabi_dadd+0x62c>
 8000cf2:	4654      	mov	r4, sl
 8000cf4:	002a      	movs	r2, r5
 8000cf6:	08f9      	lsrs	r1, r7, #3
 8000cf8:	0743      	lsls	r3, r0, #29
 8000cfa:	4319      	orrs	r1, r3
 8000cfc:	0f4b      	lsrs	r3, r1, #29
 8000cfe:	00c9      	lsls	r1, r1, #3
 8000d00:	075b      	lsls	r3, r3, #29
 8000d02:	08c9      	lsrs	r1, r1, #3
 8000d04:	4319      	orrs	r1, r3
 8000d06:	0013      	movs	r3, r2
 8000d08:	e62c      	b.n	8000964 <__aeabi_dadd+0x294>
 8000d0a:	4641      	mov	r1, r8
 8000d0c:	4329      	orrs	r1, r5
 8000d0e:	d000      	beq.n	8000d12 <__aeabi_dadd+0x642>
 8000d10:	e5fa      	b.n	8000908 <__aeabi_dadd+0x238>
 8000d12:	2300      	movs	r3, #0
 8000d14:	000a      	movs	r2, r1
 8000d16:	2400      	movs	r4, #0
 8000d18:	e602      	b.n	8000920 <__aeabi_dadd+0x250>
 8000d1a:	076b      	lsls	r3, r5, #29
 8000d1c:	08f9      	lsrs	r1, r7, #3
 8000d1e:	4319      	orrs	r1, r3
 8000d20:	08eb      	lsrs	r3, r5, #3
 8000d22:	e5fd      	b.n	8000920 <__aeabi_dadd+0x250>
 8000d24:	4663      	mov	r3, ip
 8000d26:	08f9      	lsrs	r1, r7, #3
 8000d28:	075b      	lsls	r3, r3, #29
 8000d2a:	4319      	orrs	r1, r3
 8000d2c:	4663      	mov	r3, ip
 8000d2e:	0004      	movs	r4, r0
 8000d30:	08db      	lsrs	r3, r3, #3
 8000d32:	e617      	b.n	8000964 <__aeabi_dadd+0x294>
 8000d34:	003d      	movs	r5, r7
 8000d36:	444d      	add	r5, r9
 8000d38:	4463      	add	r3, ip
 8000d3a:	454d      	cmp	r5, r9
 8000d3c:	4189      	sbcs	r1, r1
 8000d3e:	4698      	mov	r8, r3
 8000d40:	4249      	negs	r1, r1
 8000d42:	4488      	add	r8, r1
 8000d44:	4643      	mov	r3, r8
 8000d46:	021b      	lsls	r3, r3, #8
 8000d48:	d400      	bmi.n	8000d4c <__aeabi_dadd+0x67c>
 8000d4a:	e5dd      	b.n	8000908 <__aeabi_dadd+0x238>
 8000d4c:	4642      	mov	r2, r8
 8000d4e:	4b14      	ldr	r3, [pc, #80]	; (8000da0 <__aeabi_dadd+0x6d0>)
 8000d50:	2601      	movs	r6, #1
 8000d52:	401a      	ands	r2, r3
 8000d54:	4690      	mov	r8, r2
 8000d56:	e5d7      	b.n	8000908 <__aeabi_dadd+0x238>
 8000d58:	0010      	movs	r0, r2
 8000d5a:	001e      	movs	r6, r3
 8000d5c:	3820      	subs	r0, #32
 8000d5e:	40c6      	lsrs	r6, r0
 8000d60:	2a20      	cmp	r2, #32
 8000d62:	d005      	beq.n	8000d70 <__aeabi_dadd+0x6a0>
 8000d64:	2040      	movs	r0, #64	; 0x40
 8000d66:	1a82      	subs	r2, r0, r2
 8000d68:	4093      	lsls	r3, r2
 8000d6a:	464a      	mov	r2, r9
 8000d6c:	431a      	orrs	r2, r3
 8000d6e:	4691      	mov	r9, r2
 8000d70:	464d      	mov	r5, r9
 8000d72:	1e6b      	subs	r3, r5, #1
 8000d74:	419d      	sbcs	r5, r3
 8000d76:	4335      	orrs	r5, r6
 8000d78:	e621      	b.n	80009be <__aeabi_dadd+0x2ee>
 8000d7a:	0002      	movs	r2, r0
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	2100      	movs	r1, #0
 8000d80:	e540      	b.n	8000804 <__aeabi_dadd+0x134>
 8000d82:	464a      	mov	r2, r9
 8000d84:	19d5      	adds	r5, r2, r7
 8000d86:	42bd      	cmp	r5, r7
 8000d88:	4189      	sbcs	r1, r1
 8000d8a:	4463      	add	r3, ip
 8000d8c:	4698      	mov	r8, r3
 8000d8e:	4249      	negs	r1, r1
 8000d90:	4488      	add	r8, r1
 8000d92:	e5b3      	b.n	80008fc <__aeabi_dadd+0x22c>
 8000d94:	2100      	movs	r1, #0
 8000d96:	4a01      	ldr	r2, [pc, #4]	; (8000d9c <__aeabi_dadd+0x6cc>)
 8000d98:	000b      	movs	r3, r1
 8000d9a:	e533      	b.n	8000804 <__aeabi_dadd+0x134>
 8000d9c:	000007ff 	.word	0x000007ff
 8000da0:	ff7fffff 	.word	0xff7fffff

08000da4 <__aeabi_ddiv>:
 8000da4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000da6:	4657      	mov	r7, sl
 8000da8:	464e      	mov	r6, r9
 8000daa:	4645      	mov	r5, r8
 8000dac:	46de      	mov	lr, fp
 8000dae:	b5e0      	push	{r5, r6, r7, lr}
 8000db0:	4681      	mov	r9, r0
 8000db2:	0005      	movs	r5, r0
 8000db4:	030c      	lsls	r4, r1, #12
 8000db6:	0048      	lsls	r0, r1, #1
 8000db8:	4692      	mov	sl, r2
 8000dba:	001f      	movs	r7, r3
 8000dbc:	b085      	sub	sp, #20
 8000dbe:	0b24      	lsrs	r4, r4, #12
 8000dc0:	0d40      	lsrs	r0, r0, #21
 8000dc2:	0fce      	lsrs	r6, r1, #31
 8000dc4:	2800      	cmp	r0, #0
 8000dc6:	d059      	beq.n	8000e7c <__aeabi_ddiv+0xd8>
 8000dc8:	4b87      	ldr	r3, [pc, #540]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000dca:	4298      	cmp	r0, r3
 8000dcc:	d100      	bne.n	8000dd0 <__aeabi_ddiv+0x2c>
 8000dce:	e098      	b.n	8000f02 <__aeabi_ddiv+0x15e>
 8000dd0:	0f6b      	lsrs	r3, r5, #29
 8000dd2:	00e4      	lsls	r4, r4, #3
 8000dd4:	431c      	orrs	r4, r3
 8000dd6:	2380      	movs	r3, #128	; 0x80
 8000dd8:	041b      	lsls	r3, r3, #16
 8000dda:	4323      	orrs	r3, r4
 8000ddc:	4698      	mov	r8, r3
 8000dde:	4b83      	ldr	r3, [pc, #524]	; (8000fec <__aeabi_ddiv+0x248>)
 8000de0:	00ed      	lsls	r5, r5, #3
 8000de2:	469b      	mov	fp, r3
 8000de4:	2300      	movs	r3, #0
 8000de6:	4699      	mov	r9, r3
 8000de8:	4483      	add	fp, r0
 8000dea:	9300      	str	r3, [sp, #0]
 8000dec:	033c      	lsls	r4, r7, #12
 8000dee:	007b      	lsls	r3, r7, #1
 8000df0:	4650      	mov	r0, sl
 8000df2:	0b24      	lsrs	r4, r4, #12
 8000df4:	0d5b      	lsrs	r3, r3, #21
 8000df6:	0fff      	lsrs	r7, r7, #31
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d067      	beq.n	8000ecc <__aeabi_ddiv+0x128>
 8000dfc:	4a7a      	ldr	r2, [pc, #488]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000dfe:	4293      	cmp	r3, r2
 8000e00:	d018      	beq.n	8000e34 <__aeabi_ddiv+0x90>
 8000e02:	497a      	ldr	r1, [pc, #488]	; (8000fec <__aeabi_ddiv+0x248>)
 8000e04:	0f42      	lsrs	r2, r0, #29
 8000e06:	468c      	mov	ip, r1
 8000e08:	00e4      	lsls	r4, r4, #3
 8000e0a:	4659      	mov	r1, fp
 8000e0c:	4314      	orrs	r4, r2
 8000e0e:	2280      	movs	r2, #128	; 0x80
 8000e10:	4463      	add	r3, ip
 8000e12:	0412      	lsls	r2, r2, #16
 8000e14:	1acb      	subs	r3, r1, r3
 8000e16:	4314      	orrs	r4, r2
 8000e18:	469b      	mov	fp, r3
 8000e1a:	00c2      	lsls	r2, r0, #3
 8000e1c:	2000      	movs	r0, #0
 8000e1e:	0033      	movs	r3, r6
 8000e20:	407b      	eors	r3, r7
 8000e22:	469a      	mov	sl, r3
 8000e24:	464b      	mov	r3, r9
 8000e26:	2b0f      	cmp	r3, #15
 8000e28:	d900      	bls.n	8000e2c <__aeabi_ddiv+0x88>
 8000e2a:	e0ef      	b.n	800100c <__aeabi_ddiv+0x268>
 8000e2c:	4970      	ldr	r1, [pc, #448]	; (8000ff0 <__aeabi_ddiv+0x24c>)
 8000e2e:	009b      	lsls	r3, r3, #2
 8000e30:	58cb      	ldr	r3, [r1, r3]
 8000e32:	469f      	mov	pc, r3
 8000e34:	4b6f      	ldr	r3, [pc, #444]	; (8000ff4 <__aeabi_ddiv+0x250>)
 8000e36:	4652      	mov	r2, sl
 8000e38:	469c      	mov	ip, r3
 8000e3a:	4322      	orrs	r2, r4
 8000e3c:	44e3      	add	fp, ip
 8000e3e:	2a00      	cmp	r2, #0
 8000e40:	d000      	beq.n	8000e44 <__aeabi_ddiv+0xa0>
 8000e42:	e095      	b.n	8000f70 <__aeabi_ddiv+0x1cc>
 8000e44:	4649      	mov	r1, r9
 8000e46:	2302      	movs	r3, #2
 8000e48:	4319      	orrs	r1, r3
 8000e4a:	4689      	mov	r9, r1
 8000e4c:	2400      	movs	r4, #0
 8000e4e:	2002      	movs	r0, #2
 8000e50:	e7e5      	b.n	8000e1e <__aeabi_ddiv+0x7a>
 8000e52:	2300      	movs	r3, #0
 8000e54:	2400      	movs	r4, #0
 8000e56:	2500      	movs	r5, #0
 8000e58:	4652      	mov	r2, sl
 8000e5a:	051b      	lsls	r3, r3, #20
 8000e5c:	4323      	orrs	r3, r4
 8000e5e:	07d2      	lsls	r2, r2, #31
 8000e60:	4313      	orrs	r3, r2
 8000e62:	0028      	movs	r0, r5
 8000e64:	0019      	movs	r1, r3
 8000e66:	b005      	add	sp, #20
 8000e68:	bcf0      	pop	{r4, r5, r6, r7}
 8000e6a:	46bb      	mov	fp, r7
 8000e6c:	46b2      	mov	sl, r6
 8000e6e:	46a9      	mov	r9, r5
 8000e70:	46a0      	mov	r8, r4
 8000e72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e74:	2400      	movs	r4, #0
 8000e76:	2500      	movs	r5, #0
 8000e78:	4b5b      	ldr	r3, [pc, #364]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000e7a:	e7ed      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8000e7c:	464b      	mov	r3, r9
 8000e7e:	4323      	orrs	r3, r4
 8000e80:	4698      	mov	r8, r3
 8000e82:	d100      	bne.n	8000e86 <__aeabi_ddiv+0xe2>
 8000e84:	e089      	b.n	8000f9a <__aeabi_ddiv+0x1f6>
 8000e86:	2c00      	cmp	r4, #0
 8000e88:	d100      	bne.n	8000e8c <__aeabi_ddiv+0xe8>
 8000e8a:	e1e0      	b.n	800124e <__aeabi_ddiv+0x4aa>
 8000e8c:	0020      	movs	r0, r4
 8000e8e:	f001 fa37 	bl	8002300 <__clzsi2>
 8000e92:	0001      	movs	r1, r0
 8000e94:	0002      	movs	r2, r0
 8000e96:	390b      	subs	r1, #11
 8000e98:	231d      	movs	r3, #29
 8000e9a:	1a5b      	subs	r3, r3, r1
 8000e9c:	4649      	mov	r1, r9
 8000e9e:	0010      	movs	r0, r2
 8000ea0:	40d9      	lsrs	r1, r3
 8000ea2:	3808      	subs	r0, #8
 8000ea4:	4084      	lsls	r4, r0
 8000ea6:	000b      	movs	r3, r1
 8000ea8:	464d      	mov	r5, r9
 8000eaa:	4323      	orrs	r3, r4
 8000eac:	4698      	mov	r8, r3
 8000eae:	4085      	lsls	r5, r0
 8000eb0:	4851      	ldr	r0, [pc, #324]	; (8000ff8 <__aeabi_ddiv+0x254>)
 8000eb2:	033c      	lsls	r4, r7, #12
 8000eb4:	1a83      	subs	r3, r0, r2
 8000eb6:	469b      	mov	fp, r3
 8000eb8:	2300      	movs	r3, #0
 8000eba:	4699      	mov	r9, r3
 8000ebc:	9300      	str	r3, [sp, #0]
 8000ebe:	007b      	lsls	r3, r7, #1
 8000ec0:	4650      	mov	r0, sl
 8000ec2:	0b24      	lsrs	r4, r4, #12
 8000ec4:	0d5b      	lsrs	r3, r3, #21
 8000ec6:	0fff      	lsrs	r7, r7, #31
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d197      	bne.n	8000dfc <__aeabi_ddiv+0x58>
 8000ecc:	4652      	mov	r2, sl
 8000ece:	4322      	orrs	r2, r4
 8000ed0:	d055      	beq.n	8000f7e <__aeabi_ddiv+0x1da>
 8000ed2:	2c00      	cmp	r4, #0
 8000ed4:	d100      	bne.n	8000ed8 <__aeabi_ddiv+0x134>
 8000ed6:	e1ca      	b.n	800126e <__aeabi_ddiv+0x4ca>
 8000ed8:	0020      	movs	r0, r4
 8000eda:	f001 fa11 	bl	8002300 <__clzsi2>
 8000ede:	0002      	movs	r2, r0
 8000ee0:	3a0b      	subs	r2, #11
 8000ee2:	231d      	movs	r3, #29
 8000ee4:	0001      	movs	r1, r0
 8000ee6:	1a9b      	subs	r3, r3, r2
 8000ee8:	4652      	mov	r2, sl
 8000eea:	3908      	subs	r1, #8
 8000eec:	40da      	lsrs	r2, r3
 8000eee:	408c      	lsls	r4, r1
 8000ef0:	4314      	orrs	r4, r2
 8000ef2:	4652      	mov	r2, sl
 8000ef4:	408a      	lsls	r2, r1
 8000ef6:	4b41      	ldr	r3, [pc, #260]	; (8000ffc <__aeabi_ddiv+0x258>)
 8000ef8:	4458      	add	r0, fp
 8000efa:	469b      	mov	fp, r3
 8000efc:	4483      	add	fp, r0
 8000efe:	2000      	movs	r0, #0
 8000f00:	e78d      	b.n	8000e1e <__aeabi_ddiv+0x7a>
 8000f02:	464b      	mov	r3, r9
 8000f04:	4323      	orrs	r3, r4
 8000f06:	4698      	mov	r8, r3
 8000f08:	d140      	bne.n	8000f8c <__aeabi_ddiv+0x1e8>
 8000f0a:	2308      	movs	r3, #8
 8000f0c:	4699      	mov	r9, r3
 8000f0e:	3b06      	subs	r3, #6
 8000f10:	2500      	movs	r5, #0
 8000f12:	4683      	mov	fp, r0
 8000f14:	9300      	str	r3, [sp, #0]
 8000f16:	e769      	b.n	8000dec <__aeabi_ddiv+0x48>
 8000f18:	46b2      	mov	sl, r6
 8000f1a:	9b00      	ldr	r3, [sp, #0]
 8000f1c:	2b02      	cmp	r3, #2
 8000f1e:	d0a9      	beq.n	8000e74 <__aeabi_ddiv+0xd0>
 8000f20:	2b03      	cmp	r3, #3
 8000f22:	d100      	bne.n	8000f26 <__aeabi_ddiv+0x182>
 8000f24:	e211      	b.n	800134a <__aeabi_ddiv+0x5a6>
 8000f26:	2b01      	cmp	r3, #1
 8000f28:	d093      	beq.n	8000e52 <__aeabi_ddiv+0xae>
 8000f2a:	4a35      	ldr	r2, [pc, #212]	; (8001000 <__aeabi_ddiv+0x25c>)
 8000f2c:	445a      	add	r2, fp
 8000f2e:	2a00      	cmp	r2, #0
 8000f30:	dc00      	bgt.n	8000f34 <__aeabi_ddiv+0x190>
 8000f32:	e13c      	b.n	80011ae <__aeabi_ddiv+0x40a>
 8000f34:	076b      	lsls	r3, r5, #29
 8000f36:	d000      	beq.n	8000f3a <__aeabi_ddiv+0x196>
 8000f38:	e1a7      	b.n	800128a <__aeabi_ddiv+0x4e6>
 8000f3a:	08ed      	lsrs	r5, r5, #3
 8000f3c:	4643      	mov	r3, r8
 8000f3e:	01db      	lsls	r3, r3, #7
 8000f40:	d506      	bpl.n	8000f50 <__aeabi_ddiv+0x1ac>
 8000f42:	4642      	mov	r2, r8
 8000f44:	4b2f      	ldr	r3, [pc, #188]	; (8001004 <__aeabi_ddiv+0x260>)
 8000f46:	401a      	ands	r2, r3
 8000f48:	4690      	mov	r8, r2
 8000f4a:	2280      	movs	r2, #128	; 0x80
 8000f4c:	00d2      	lsls	r2, r2, #3
 8000f4e:	445a      	add	r2, fp
 8000f50:	4b2d      	ldr	r3, [pc, #180]	; (8001008 <__aeabi_ddiv+0x264>)
 8000f52:	429a      	cmp	r2, r3
 8000f54:	dc8e      	bgt.n	8000e74 <__aeabi_ddiv+0xd0>
 8000f56:	4643      	mov	r3, r8
 8000f58:	0552      	lsls	r2, r2, #21
 8000f5a:	0758      	lsls	r0, r3, #29
 8000f5c:	025c      	lsls	r4, r3, #9
 8000f5e:	4305      	orrs	r5, r0
 8000f60:	0b24      	lsrs	r4, r4, #12
 8000f62:	0d53      	lsrs	r3, r2, #21
 8000f64:	e778      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8000f66:	46ba      	mov	sl, r7
 8000f68:	46a0      	mov	r8, r4
 8000f6a:	0015      	movs	r5, r2
 8000f6c:	9000      	str	r0, [sp, #0]
 8000f6e:	e7d4      	b.n	8000f1a <__aeabi_ddiv+0x176>
 8000f70:	464a      	mov	r2, r9
 8000f72:	2303      	movs	r3, #3
 8000f74:	431a      	orrs	r2, r3
 8000f76:	4691      	mov	r9, r2
 8000f78:	2003      	movs	r0, #3
 8000f7a:	4652      	mov	r2, sl
 8000f7c:	e74f      	b.n	8000e1e <__aeabi_ddiv+0x7a>
 8000f7e:	4649      	mov	r1, r9
 8000f80:	2301      	movs	r3, #1
 8000f82:	4319      	orrs	r1, r3
 8000f84:	4689      	mov	r9, r1
 8000f86:	2400      	movs	r4, #0
 8000f88:	2001      	movs	r0, #1
 8000f8a:	e748      	b.n	8000e1e <__aeabi_ddiv+0x7a>
 8000f8c:	230c      	movs	r3, #12
 8000f8e:	4699      	mov	r9, r3
 8000f90:	3b09      	subs	r3, #9
 8000f92:	46a0      	mov	r8, r4
 8000f94:	4683      	mov	fp, r0
 8000f96:	9300      	str	r3, [sp, #0]
 8000f98:	e728      	b.n	8000dec <__aeabi_ddiv+0x48>
 8000f9a:	2304      	movs	r3, #4
 8000f9c:	4699      	mov	r9, r3
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	469b      	mov	fp, r3
 8000fa2:	3301      	adds	r3, #1
 8000fa4:	2500      	movs	r5, #0
 8000fa6:	9300      	str	r3, [sp, #0]
 8000fa8:	e720      	b.n	8000dec <__aeabi_ddiv+0x48>
 8000faa:	2300      	movs	r3, #0
 8000fac:	2480      	movs	r4, #128	; 0x80
 8000fae:	469a      	mov	sl, r3
 8000fb0:	2500      	movs	r5, #0
 8000fb2:	4b0d      	ldr	r3, [pc, #52]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000fb4:	0324      	lsls	r4, r4, #12
 8000fb6:	e74f      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8000fb8:	2380      	movs	r3, #128	; 0x80
 8000fba:	4641      	mov	r1, r8
 8000fbc:	031b      	lsls	r3, r3, #12
 8000fbe:	4219      	tst	r1, r3
 8000fc0:	d008      	beq.n	8000fd4 <__aeabi_ddiv+0x230>
 8000fc2:	421c      	tst	r4, r3
 8000fc4:	d106      	bne.n	8000fd4 <__aeabi_ddiv+0x230>
 8000fc6:	431c      	orrs	r4, r3
 8000fc8:	0324      	lsls	r4, r4, #12
 8000fca:	46ba      	mov	sl, r7
 8000fcc:	0015      	movs	r5, r2
 8000fce:	4b06      	ldr	r3, [pc, #24]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000fd0:	0b24      	lsrs	r4, r4, #12
 8000fd2:	e741      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8000fd4:	2480      	movs	r4, #128	; 0x80
 8000fd6:	4643      	mov	r3, r8
 8000fd8:	0324      	lsls	r4, r4, #12
 8000fda:	431c      	orrs	r4, r3
 8000fdc:	0324      	lsls	r4, r4, #12
 8000fde:	46b2      	mov	sl, r6
 8000fe0:	4b01      	ldr	r3, [pc, #4]	; (8000fe8 <__aeabi_ddiv+0x244>)
 8000fe2:	0b24      	lsrs	r4, r4, #12
 8000fe4:	e738      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8000fe6:	46c0      	nop			; (mov r8, r8)
 8000fe8:	000007ff 	.word	0x000007ff
 8000fec:	fffffc01 	.word	0xfffffc01
 8000ff0:	08006ef0 	.word	0x08006ef0
 8000ff4:	fffff801 	.word	0xfffff801
 8000ff8:	fffffc0d 	.word	0xfffffc0d
 8000ffc:	000003f3 	.word	0x000003f3
 8001000:	000003ff 	.word	0x000003ff
 8001004:	feffffff 	.word	0xfeffffff
 8001008:	000007fe 	.word	0x000007fe
 800100c:	4544      	cmp	r4, r8
 800100e:	d200      	bcs.n	8001012 <__aeabi_ddiv+0x26e>
 8001010:	e116      	b.n	8001240 <__aeabi_ddiv+0x49c>
 8001012:	d100      	bne.n	8001016 <__aeabi_ddiv+0x272>
 8001014:	e111      	b.n	800123a <__aeabi_ddiv+0x496>
 8001016:	2301      	movs	r3, #1
 8001018:	425b      	negs	r3, r3
 800101a:	469c      	mov	ip, r3
 800101c:	002e      	movs	r6, r5
 800101e:	4640      	mov	r0, r8
 8001020:	2500      	movs	r5, #0
 8001022:	44e3      	add	fp, ip
 8001024:	0223      	lsls	r3, r4, #8
 8001026:	0e14      	lsrs	r4, r2, #24
 8001028:	431c      	orrs	r4, r3
 800102a:	0c1b      	lsrs	r3, r3, #16
 800102c:	4699      	mov	r9, r3
 800102e:	0423      	lsls	r3, r4, #16
 8001030:	0c1f      	lsrs	r7, r3, #16
 8001032:	0212      	lsls	r2, r2, #8
 8001034:	4649      	mov	r1, r9
 8001036:	9200      	str	r2, [sp, #0]
 8001038:	9701      	str	r7, [sp, #4]
 800103a:	f7ff f907 	bl	800024c <__aeabi_uidivmod>
 800103e:	0002      	movs	r2, r0
 8001040:	437a      	muls	r2, r7
 8001042:	040b      	lsls	r3, r1, #16
 8001044:	0c31      	lsrs	r1, r6, #16
 8001046:	4680      	mov	r8, r0
 8001048:	4319      	orrs	r1, r3
 800104a:	428a      	cmp	r2, r1
 800104c:	d90b      	bls.n	8001066 <__aeabi_ddiv+0x2c2>
 800104e:	2301      	movs	r3, #1
 8001050:	425b      	negs	r3, r3
 8001052:	469c      	mov	ip, r3
 8001054:	1909      	adds	r1, r1, r4
 8001056:	44e0      	add	r8, ip
 8001058:	428c      	cmp	r4, r1
 800105a:	d804      	bhi.n	8001066 <__aeabi_ddiv+0x2c2>
 800105c:	428a      	cmp	r2, r1
 800105e:	d902      	bls.n	8001066 <__aeabi_ddiv+0x2c2>
 8001060:	1e83      	subs	r3, r0, #2
 8001062:	4698      	mov	r8, r3
 8001064:	1909      	adds	r1, r1, r4
 8001066:	1a88      	subs	r0, r1, r2
 8001068:	4649      	mov	r1, r9
 800106a:	f7ff f8ef 	bl	800024c <__aeabi_uidivmod>
 800106e:	0409      	lsls	r1, r1, #16
 8001070:	468c      	mov	ip, r1
 8001072:	0431      	lsls	r1, r6, #16
 8001074:	4666      	mov	r6, ip
 8001076:	9a01      	ldr	r2, [sp, #4]
 8001078:	0c09      	lsrs	r1, r1, #16
 800107a:	4342      	muls	r2, r0
 800107c:	0003      	movs	r3, r0
 800107e:	4331      	orrs	r1, r6
 8001080:	428a      	cmp	r2, r1
 8001082:	d904      	bls.n	800108e <__aeabi_ddiv+0x2ea>
 8001084:	1909      	adds	r1, r1, r4
 8001086:	3b01      	subs	r3, #1
 8001088:	428c      	cmp	r4, r1
 800108a:	d800      	bhi.n	800108e <__aeabi_ddiv+0x2ea>
 800108c:	e111      	b.n	80012b2 <__aeabi_ddiv+0x50e>
 800108e:	1a89      	subs	r1, r1, r2
 8001090:	4642      	mov	r2, r8
 8001092:	9e00      	ldr	r6, [sp, #0]
 8001094:	0412      	lsls	r2, r2, #16
 8001096:	431a      	orrs	r2, r3
 8001098:	0c33      	lsrs	r3, r6, #16
 800109a:	001f      	movs	r7, r3
 800109c:	0c10      	lsrs	r0, r2, #16
 800109e:	4690      	mov	r8, r2
 80010a0:	9302      	str	r3, [sp, #8]
 80010a2:	0413      	lsls	r3, r2, #16
 80010a4:	0432      	lsls	r2, r6, #16
 80010a6:	0c16      	lsrs	r6, r2, #16
 80010a8:	0032      	movs	r2, r6
 80010aa:	0c1b      	lsrs	r3, r3, #16
 80010ac:	435a      	muls	r2, r3
 80010ae:	9603      	str	r6, [sp, #12]
 80010b0:	437b      	muls	r3, r7
 80010b2:	4346      	muls	r6, r0
 80010b4:	4378      	muls	r0, r7
 80010b6:	0c17      	lsrs	r7, r2, #16
 80010b8:	46bc      	mov	ip, r7
 80010ba:	199b      	adds	r3, r3, r6
 80010bc:	4463      	add	r3, ip
 80010be:	429e      	cmp	r6, r3
 80010c0:	d903      	bls.n	80010ca <__aeabi_ddiv+0x326>
 80010c2:	2680      	movs	r6, #128	; 0x80
 80010c4:	0276      	lsls	r6, r6, #9
 80010c6:	46b4      	mov	ip, r6
 80010c8:	4460      	add	r0, ip
 80010ca:	0c1e      	lsrs	r6, r3, #16
 80010cc:	1830      	adds	r0, r6, r0
 80010ce:	0416      	lsls	r6, r2, #16
 80010d0:	041b      	lsls	r3, r3, #16
 80010d2:	0c36      	lsrs	r6, r6, #16
 80010d4:	199e      	adds	r6, r3, r6
 80010d6:	4281      	cmp	r1, r0
 80010d8:	d200      	bcs.n	80010dc <__aeabi_ddiv+0x338>
 80010da:	e09c      	b.n	8001216 <__aeabi_ddiv+0x472>
 80010dc:	d100      	bne.n	80010e0 <__aeabi_ddiv+0x33c>
 80010de:	e097      	b.n	8001210 <__aeabi_ddiv+0x46c>
 80010e0:	1bae      	subs	r6, r5, r6
 80010e2:	1a09      	subs	r1, r1, r0
 80010e4:	42b5      	cmp	r5, r6
 80010e6:	4180      	sbcs	r0, r0
 80010e8:	4240      	negs	r0, r0
 80010ea:	1a08      	subs	r0, r1, r0
 80010ec:	4284      	cmp	r4, r0
 80010ee:	d100      	bne.n	80010f2 <__aeabi_ddiv+0x34e>
 80010f0:	e111      	b.n	8001316 <__aeabi_ddiv+0x572>
 80010f2:	4649      	mov	r1, r9
 80010f4:	f7ff f8aa 	bl	800024c <__aeabi_uidivmod>
 80010f8:	9a01      	ldr	r2, [sp, #4]
 80010fa:	040b      	lsls	r3, r1, #16
 80010fc:	4342      	muls	r2, r0
 80010fe:	0c31      	lsrs	r1, r6, #16
 8001100:	0005      	movs	r5, r0
 8001102:	4319      	orrs	r1, r3
 8001104:	428a      	cmp	r2, r1
 8001106:	d907      	bls.n	8001118 <__aeabi_ddiv+0x374>
 8001108:	1909      	adds	r1, r1, r4
 800110a:	3d01      	subs	r5, #1
 800110c:	428c      	cmp	r4, r1
 800110e:	d803      	bhi.n	8001118 <__aeabi_ddiv+0x374>
 8001110:	428a      	cmp	r2, r1
 8001112:	d901      	bls.n	8001118 <__aeabi_ddiv+0x374>
 8001114:	1e85      	subs	r5, r0, #2
 8001116:	1909      	adds	r1, r1, r4
 8001118:	1a88      	subs	r0, r1, r2
 800111a:	4649      	mov	r1, r9
 800111c:	f7ff f896 	bl	800024c <__aeabi_uidivmod>
 8001120:	0409      	lsls	r1, r1, #16
 8001122:	468c      	mov	ip, r1
 8001124:	0431      	lsls	r1, r6, #16
 8001126:	4666      	mov	r6, ip
 8001128:	9a01      	ldr	r2, [sp, #4]
 800112a:	0c09      	lsrs	r1, r1, #16
 800112c:	4342      	muls	r2, r0
 800112e:	0003      	movs	r3, r0
 8001130:	4331      	orrs	r1, r6
 8001132:	428a      	cmp	r2, r1
 8001134:	d907      	bls.n	8001146 <__aeabi_ddiv+0x3a2>
 8001136:	1909      	adds	r1, r1, r4
 8001138:	3b01      	subs	r3, #1
 800113a:	428c      	cmp	r4, r1
 800113c:	d803      	bhi.n	8001146 <__aeabi_ddiv+0x3a2>
 800113e:	428a      	cmp	r2, r1
 8001140:	d901      	bls.n	8001146 <__aeabi_ddiv+0x3a2>
 8001142:	1e83      	subs	r3, r0, #2
 8001144:	1909      	adds	r1, r1, r4
 8001146:	9e03      	ldr	r6, [sp, #12]
 8001148:	1a89      	subs	r1, r1, r2
 800114a:	0032      	movs	r2, r6
 800114c:	042d      	lsls	r5, r5, #16
 800114e:	431d      	orrs	r5, r3
 8001150:	9f02      	ldr	r7, [sp, #8]
 8001152:	042b      	lsls	r3, r5, #16
 8001154:	0c1b      	lsrs	r3, r3, #16
 8001156:	435a      	muls	r2, r3
 8001158:	437b      	muls	r3, r7
 800115a:	469c      	mov	ip, r3
 800115c:	0c28      	lsrs	r0, r5, #16
 800115e:	4346      	muls	r6, r0
 8001160:	0c13      	lsrs	r3, r2, #16
 8001162:	44b4      	add	ip, r6
 8001164:	4463      	add	r3, ip
 8001166:	4378      	muls	r0, r7
 8001168:	429e      	cmp	r6, r3
 800116a:	d903      	bls.n	8001174 <__aeabi_ddiv+0x3d0>
 800116c:	2680      	movs	r6, #128	; 0x80
 800116e:	0276      	lsls	r6, r6, #9
 8001170:	46b4      	mov	ip, r6
 8001172:	4460      	add	r0, ip
 8001174:	0c1e      	lsrs	r6, r3, #16
 8001176:	0412      	lsls	r2, r2, #16
 8001178:	041b      	lsls	r3, r3, #16
 800117a:	0c12      	lsrs	r2, r2, #16
 800117c:	1830      	adds	r0, r6, r0
 800117e:	189b      	adds	r3, r3, r2
 8001180:	4281      	cmp	r1, r0
 8001182:	d306      	bcc.n	8001192 <__aeabi_ddiv+0x3ee>
 8001184:	d002      	beq.n	800118c <__aeabi_ddiv+0x3e8>
 8001186:	2301      	movs	r3, #1
 8001188:	431d      	orrs	r5, r3
 800118a:	e6ce      	b.n	8000f2a <__aeabi_ddiv+0x186>
 800118c:	2b00      	cmp	r3, #0
 800118e:	d100      	bne.n	8001192 <__aeabi_ddiv+0x3ee>
 8001190:	e6cb      	b.n	8000f2a <__aeabi_ddiv+0x186>
 8001192:	1861      	adds	r1, r4, r1
 8001194:	1e6e      	subs	r6, r5, #1
 8001196:	42a1      	cmp	r1, r4
 8001198:	d200      	bcs.n	800119c <__aeabi_ddiv+0x3f8>
 800119a:	e0a4      	b.n	80012e6 <__aeabi_ddiv+0x542>
 800119c:	4281      	cmp	r1, r0
 800119e:	d200      	bcs.n	80011a2 <__aeabi_ddiv+0x3fe>
 80011a0:	e0c9      	b.n	8001336 <__aeabi_ddiv+0x592>
 80011a2:	d100      	bne.n	80011a6 <__aeabi_ddiv+0x402>
 80011a4:	e0d9      	b.n	800135a <__aeabi_ddiv+0x5b6>
 80011a6:	0035      	movs	r5, r6
 80011a8:	e7ed      	b.n	8001186 <__aeabi_ddiv+0x3e2>
 80011aa:	2501      	movs	r5, #1
 80011ac:	426d      	negs	r5, r5
 80011ae:	2101      	movs	r1, #1
 80011b0:	1a89      	subs	r1, r1, r2
 80011b2:	2938      	cmp	r1, #56	; 0x38
 80011b4:	dd00      	ble.n	80011b8 <__aeabi_ddiv+0x414>
 80011b6:	e64c      	b.n	8000e52 <__aeabi_ddiv+0xae>
 80011b8:	291f      	cmp	r1, #31
 80011ba:	dc00      	bgt.n	80011be <__aeabi_ddiv+0x41a>
 80011bc:	e07f      	b.n	80012be <__aeabi_ddiv+0x51a>
 80011be:	231f      	movs	r3, #31
 80011c0:	425b      	negs	r3, r3
 80011c2:	1a9a      	subs	r2, r3, r2
 80011c4:	4643      	mov	r3, r8
 80011c6:	40d3      	lsrs	r3, r2
 80011c8:	2920      	cmp	r1, #32
 80011ca:	d004      	beq.n	80011d6 <__aeabi_ddiv+0x432>
 80011cc:	4644      	mov	r4, r8
 80011ce:	4a65      	ldr	r2, [pc, #404]	; (8001364 <__aeabi_ddiv+0x5c0>)
 80011d0:	445a      	add	r2, fp
 80011d2:	4094      	lsls	r4, r2
 80011d4:	4325      	orrs	r5, r4
 80011d6:	1e6a      	subs	r2, r5, #1
 80011d8:	4195      	sbcs	r5, r2
 80011da:	2207      	movs	r2, #7
 80011dc:	432b      	orrs	r3, r5
 80011de:	0015      	movs	r5, r2
 80011e0:	2400      	movs	r4, #0
 80011e2:	401d      	ands	r5, r3
 80011e4:	421a      	tst	r2, r3
 80011e6:	d100      	bne.n	80011ea <__aeabi_ddiv+0x446>
 80011e8:	e0a1      	b.n	800132e <__aeabi_ddiv+0x58a>
 80011ea:	220f      	movs	r2, #15
 80011ec:	2400      	movs	r4, #0
 80011ee:	401a      	ands	r2, r3
 80011f0:	2a04      	cmp	r2, #4
 80011f2:	d100      	bne.n	80011f6 <__aeabi_ddiv+0x452>
 80011f4:	e098      	b.n	8001328 <__aeabi_ddiv+0x584>
 80011f6:	1d1a      	adds	r2, r3, #4
 80011f8:	429a      	cmp	r2, r3
 80011fa:	419b      	sbcs	r3, r3
 80011fc:	425b      	negs	r3, r3
 80011fe:	18e4      	adds	r4, r4, r3
 8001200:	0013      	movs	r3, r2
 8001202:	0222      	lsls	r2, r4, #8
 8001204:	d400      	bmi.n	8001208 <__aeabi_ddiv+0x464>
 8001206:	e08f      	b.n	8001328 <__aeabi_ddiv+0x584>
 8001208:	2301      	movs	r3, #1
 800120a:	2400      	movs	r4, #0
 800120c:	2500      	movs	r5, #0
 800120e:	e623      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8001210:	42b5      	cmp	r5, r6
 8001212:	d300      	bcc.n	8001216 <__aeabi_ddiv+0x472>
 8001214:	e764      	b.n	80010e0 <__aeabi_ddiv+0x33c>
 8001216:	4643      	mov	r3, r8
 8001218:	1e5a      	subs	r2, r3, #1
 800121a:	9b00      	ldr	r3, [sp, #0]
 800121c:	469c      	mov	ip, r3
 800121e:	4465      	add	r5, ip
 8001220:	001f      	movs	r7, r3
 8001222:	429d      	cmp	r5, r3
 8001224:	419b      	sbcs	r3, r3
 8001226:	425b      	negs	r3, r3
 8001228:	191b      	adds	r3, r3, r4
 800122a:	18c9      	adds	r1, r1, r3
 800122c:	428c      	cmp	r4, r1
 800122e:	d23a      	bcs.n	80012a6 <__aeabi_ddiv+0x502>
 8001230:	4288      	cmp	r0, r1
 8001232:	d863      	bhi.n	80012fc <__aeabi_ddiv+0x558>
 8001234:	d060      	beq.n	80012f8 <__aeabi_ddiv+0x554>
 8001236:	4690      	mov	r8, r2
 8001238:	e752      	b.n	80010e0 <__aeabi_ddiv+0x33c>
 800123a:	42aa      	cmp	r2, r5
 800123c:	d900      	bls.n	8001240 <__aeabi_ddiv+0x49c>
 800123e:	e6ea      	b.n	8001016 <__aeabi_ddiv+0x272>
 8001240:	4643      	mov	r3, r8
 8001242:	07de      	lsls	r6, r3, #31
 8001244:	0858      	lsrs	r0, r3, #1
 8001246:	086b      	lsrs	r3, r5, #1
 8001248:	431e      	orrs	r6, r3
 800124a:	07ed      	lsls	r5, r5, #31
 800124c:	e6ea      	b.n	8001024 <__aeabi_ddiv+0x280>
 800124e:	4648      	mov	r0, r9
 8001250:	f001 f856 	bl	8002300 <__clzsi2>
 8001254:	0001      	movs	r1, r0
 8001256:	0002      	movs	r2, r0
 8001258:	3115      	adds	r1, #21
 800125a:	3220      	adds	r2, #32
 800125c:	291c      	cmp	r1, #28
 800125e:	dc00      	bgt.n	8001262 <__aeabi_ddiv+0x4be>
 8001260:	e61a      	b.n	8000e98 <__aeabi_ddiv+0xf4>
 8001262:	464b      	mov	r3, r9
 8001264:	3808      	subs	r0, #8
 8001266:	4083      	lsls	r3, r0
 8001268:	2500      	movs	r5, #0
 800126a:	4698      	mov	r8, r3
 800126c:	e620      	b.n	8000eb0 <__aeabi_ddiv+0x10c>
 800126e:	f001 f847 	bl	8002300 <__clzsi2>
 8001272:	0003      	movs	r3, r0
 8001274:	001a      	movs	r2, r3
 8001276:	3215      	adds	r2, #21
 8001278:	3020      	adds	r0, #32
 800127a:	2a1c      	cmp	r2, #28
 800127c:	dc00      	bgt.n	8001280 <__aeabi_ddiv+0x4dc>
 800127e:	e630      	b.n	8000ee2 <__aeabi_ddiv+0x13e>
 8001280:	4654      	mov	r4, sl
 8001282:	3b08      	subs	r3, #8
 8001284:	2200      	movs	r2, #0
 8001286:	409c      	lsls	r4, r3
 8001288:	e635      	b.n	8000ef6 <__aeabi_ddiv+0x152>
 800128a:	230f      	movs	r3, #15
 800128c:	402b      	ands	r3, r5
 800128e:	2b04      	cmp	r3, #4
 8001290:	d100      	bne.n	8001294 <__aeabi_ddiv+0x4f0>
 8001292:	e652      	b.n	8000f3a <__aeabi_ddiv+0x196>
 8001294:	2305      	movs	r3, #5
 8001296:	425b      	negs	r3, r3
 8001298:	42ab      	cmp	r3, r5
 800129a:	419b      	sbcs	r3, r3
 800129c:	3504      	adds	r5, #4
 800129e:	425b      	negs	r3, r3
 80012a0:	08ed      	lsrs	r5, r5, #3
 80012a2:	4498      	add	r8, r3
 80012a4:	e64a      	b.n	8000f3c <__aeabi_ddiv+0x198>
 80012a6:	428c      	cmp	r4, r1
 80012a8:	d1c5      	bne.n	8001236 <__aeabi_ddiv+0x492>
 80012aa:	42af      	cmp	r7, r5
 80012ac:	d9c0      	bls.n	8001230 <__aeabi_ddiv+0x48c>
 80012ae:	4690      	mov	r8, r2
 80012b0:	e716      	b.n	80010e0 <__aeabi_ddiv+0x33c>
 80012b2:	428a      	cmp	r2, r1
 80012b4:	d800      	bhi.n	80012b8 <__aeabi_ddiv+0x514>
 80012b6:	e6ea      	b.n	800108e <__aeabi_ddiv+0x2ea>
 80012b8:	1e83      	subs	r3, r0, #2
 80012ba:	1909      	adds	r1, r1, r4
 80012bc:	e6e7      	b.n	800108e <__aeabi_ddiv+0x2ea>
 80012be:	4a2a      	ldr	r2, [pc, #168]	; (8001368 <__aeabi_ddiv+0x5c4>)
 80012c0:	0028      	movs	r0, r5
 80012c2:	445a      	add	r2, fp
 80012c4:	4643      	mov	r3, r8
 80012c6:	4095      	lsls	r5, r2
 80012c8:	4093      	lsls	r3, r2
 80012ca:	40c8      	lsrs	r0, r1
 80012cc:	1e6a      	subs	r2, r5, #1
 80012ce:	4195      	sbcs	r5, r2
 80012d0:	4644      	mov	r4, r8
 80012d2:	4303      	orrs	r3, r0
 80012d4:	432b      	orrs	r3, r5
 80012d6:	40cc      	lsrs	r4, r1
 80012d8:	075a      	lsls	r2, r3, #29
 80012da:	d092      	beq.n	8001202 <__aeabi_ddiv+0x45e>
 80012dc:	220f      	movs	r2, #15
 80012de:	401a      	ands	r2, r3
 80012e0:	2a04      	cmp	r2, #4
 80012e2:	d188      	bne.n	80011f6 <__aeabi_ddiv+0x452>
 80012e4:	e78d      	b.n	8001202 <__aeabi_ddiv+0x45e>
 80012e6:	0035      	movs	r5, r6
 80012e8:	4281      	cmp	r1, r0
 80012ea:	d000      	beq.n	80012ee <__aeabi_ddiv+0x54a>
 80012ec:	e74b      	b.n	8001186 <__aeabi_ddiv+0x3e2>
 80012ee:	9a00      	ldr	r2, [sp, #0]
 80012f0:	4293      	cmp	r3, r2
 80012f2:	d000      	beq.n	80012f6 <__aeabi_ddiv+0x552>
 80012f4:	e747      	b.n	8001186 <__aeabi_ddiv+0x3e2>
 80012f6:	e618      	b.n	8000f2a <__aeabi_ddiv+0x186>
 80012f8:	42ae      	cmp	r6, r5
 80012fa:	d99c      	bls.n	8001236 <__aeabi_ddiv+0x492>
 80012fc:	2302      	movs	r3, #2
 80012fe:	425b      	negs	r3, r3
 8001300:	469c      	mov	ip, r3
 8001302:	9b00      	ldr	r3, [sp, #0]
 8001304:	44e0      	add	r8, ip
 8001306:	469c      	mov	ip, r3
 8001308:	4465      	add	r5, ip
 800130a:	429d      	cmp	r5, r3
 800130c:	419b      	sbcs	r3, r3
 800130e:	425b      	negs	r3, r3
 8001310:	191b      	adds	r3, r3, r4
 8001312:	18c9      	adds	r1, r1, r3
 8001314:	e6e4      	b.n	80010e0 <__aeabi_ddiv+0x33c>
 8001316:	4a15      	ldr	r2, [pc, #84]	; (800136c <__aeabi_ddiv+0x5c8>)
 8001318:	445a      	add	r2, fp
 800131a:	2a00      	cmp	r2, #0
 800131c:	dc00      	bgt.n	8001320 <__aeabi_ddiv+0x57c>
 800131e:	e744      	b.n	80011aa <__aeabi_ddiv+0x406>
 8001320:	2301      	movs	r3, #1
 8001322:	2500      	movs	r5, #0
 8001324:	4498      	add	r8, r3
 8001326:	e609      	b.n	8000f3c <__aeabi_ddiv+0x198>
 8001328:	0765      	lsls	r5, r4, #29
 800132a:	0264      	lsls	r4, r4, #9
 800132c:	0b24      	lsrs	r4, r4, #12
 800132e:	08db      	lsrs	r3, r3, #3
 8001330:	431d      	orrs	r5, r3
 8001332:	2300      	movs	r3, #0
 8001334:	e590      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 8001336:	9e00      	ldr	r6, [sp, #0]
 8001338:	3d02      	subs	r5, #2
 800133a:	0072      	lsls	r2, r6, #1
 800133c:	42b2      	cmp	r2, r6
 800133e:	41bf      	sbcs	r7, r7
 8001340:	427f      	negs	r7, r7
 8001342:	193c      	adds	r4, r7, r4
 8001344:	1909      	adds	r1, r1, r4
 8001346:	9200      	str	r2, [sp, #0]
 8001348:	e7ce      	b.n	80012e8 <__aeabi_ddiv+0x544>
 800134a:	2480      	movs	r4, #128	; 0x80
 800134c:	4643      	mov	r3, r8
 800134e:	0324      	lsls	r4, r4, #12
 8001350:	431c      	orrs	r4, r3
 8001352:	0324      	lsls	r4, r4, #12
 8001354:	4b06      	ldr	r3, [pc, #24]	; (8001370 <__aeabi_ddiv+0x5cc>)
 8001356:	0b24      	lsrs	r4, r4, #12
 8001358:	e57e      	b.n	8000e58 <__aeabi_ddiv+0xb4>
 800135a:	9a00      	ldr	r2, [sp, #0]
 800135c:	429a      	cmp	r2, r3
 800135e:	d3ea      	bcc.n	8001336 <__aeabi_ddiv+0x592>
 8001360:	0035      	movs	r5, r6
 8001362:	e7c4      	b.n	80012ee <__aeabi_ddiv+0x54a>
 8001364:	0000043e 	.word	0x0000043e
 8001368:	0000041e 	.word	0x0000041e
 800136c:	000003ff 	.word	0x000003ff
 8001370:	000007ff 	.word	0x000007ff

08001374 <__eqdf2>:
 8001374:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001376:	464f      	mov	r7, r9
 8001378:	4646      	mov	r6, r8
 800137a:	46d6      	mov	lr, sl
 800137c:	4694      	mov	ip, r2
 800137e:	4691      	mov	r9, r2
 8001380:	031a      	lsls	r2, r3, #12
 8001382:	0b12      	lsrs	r2, r2, #12
 8001384:	4d18      	ldr	r5, [pc, #96]	; (80013e8 <__eqdf2+0x74>)
 8001386:	b5c0      	push	{r6, r7, lr}
 8001388:	004c      	lsls	r4, r1, #1
 800138a:	030f      	lsls	r7, r1, #12
 800138c:	4692      	mov	sl, r2
 800138e:	005a      	lsls	r2, r3, #1
 8001390:	0006      	movs	r6, r0
 8001392:	4680      	mov	r8, r0
 8001394:	0b3f      	lsrs	r7, r7, #12
 8001396:	2001      	movs	r0, #1
 8001398:	0d64      	lsrs	r4, r4, #21
 800139a:	0fc9      	lsrs	r1, r1, #31
 800139c:	0d52      	lsrs	r2, r2, #21
 800139e:	0fdb      	lsrs	r3, r3, #31
 80013a0:	42ac      	cmp	r4, r5
 80013a2:	d00a      	beq.n	80013ba <__eqdf2+0x46>
 80013a4:	42aa      	cmp	r2, r5
 80013a6:	d003      	beq.n	80013b0 <__eqdf2+0x3c>
 80013a8:	4294      	cmp	r4, r2
 80013aa:	d101      	bne.n	80013b0 <__eqdf2+0x3c>
 80013ac:	4557      	cmp	r7, sl
 80013ae:	d00d      	beq.n	80013cc <__eqdf2+0x58>
 80013b0:	bce0      	pop	{r5, r6, r7}
 80013b2:	46ba      	mov	sl, r7
 80013b4:	46b1      	mov	r9, r6
 80013b6:	46a8      	mov	r8, r5
 80013b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013ba:	003d      	movs	r5, r7
 80013bc:	4335      	orrs	r5, r6
 80013be:	d1f7      	bne.n	80013b0 <__eqdf2+0x3c>
 80013c0:	42a2      	cmp	r2, r4
 80013c2:	d1f5      	bne.n	80013b0 <__eqdf2+0x3c>
 80013c4:	4652      	mov	r2, sl
 80013c6:	4665      	mov	r5, ip
 80013c8:	432a      	orrs	r2, r5
 80013ca:	d1f1      	bne.n	80013b0 <__eqdf2+0x3c>
 80013cc:	2001      	movs	r0, #1
 80013ce:	45c8      	cmp	r8, r9
 80013d0:	d1ee      	bne.n	80013b0 <__eqdf2+0x3c>
 80013d2:	4299      	cmp	r1, r3
 80013d4:	d006      	beq.n	80013e4 <__eqdf2+0x70>
 80013d6:	2c00      	cmp	r4, #0
 80013d8:	d1ea      	bne.n	80013b0 <__eqdf2+0x3c>
 80013da:	433e      	orrs	r6, r7
 80013dc:	0030      	movs	r0, r6
 80013de:	1e46      	subs	r6, r0, #1
 80013e0:	41b0      	sbcs	r0, r6
 80013e2:	e7e5      	b.n	80013b0 <__eqdf2+0x3c>
 80013e4:	2000      	movs	r0, #0
 80013e6:	e7e3      	b.n	80013b0 <__eqdf2+0x3c>
 80013e8:	000007ff 	.word	0x000007ff

080013ec <__gedf2>:
 80013ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013ee:	464e      	mov	r6, r9
 80013f0:	4645      	mov	r5, r8
 80013f2:	4657      	mov	r7, sl
 80013f4:	46de      	mov	lr, fp
 80013f6:	0004      	movs	r4, r0
 80013f8:	0018      	movs	r0, r3
 80013fa:	b5e0      	push	{r5, r6, r7, lr}
 80013fc:	0016      	movs	r6, r2
 80013fe:	031b      	lsls	r3, r3, #12
 8001400:	0b1b      	lsrs	r3, r3, #12
 8001402:	4d32      	ldr	r5, [pc, #200]	; (80014cc <__gedf2+0xe0>)
 8001404:	030f      	lsls	r7, r1, #12
 8001406:	004a      	lsls	r2, r1, #1
 8001408:	4699      	mov	r9, r3
 800140a:	0043      	lsls	r3, r0, #1
 800140c:	46a4      	mov	ip, r4
 800140e:	46b0      	mov	r8, r6
 8001410:	0b3f      	lsrs	r7, r7, #12
 8001412:	0d52      	lsrs	r2, r2, #21
 8001414:	0fc9      	lsrs	r1, r1, #31
 8001416:	0d5b      	lsrs	r3, r3, #21
 8001418:	0fc0      	lsrs	r0, r0, #31
 800141a:	42aa      	cmp	r2, r5
 800141c:	d029      	beq.n	8001472 <__gedf2+0x86>
 800141e:	42ab      	cmp	r3, r5
 8001420:	d018      	beq.n	8001454 <__gedf2+0x68>
 8001422:	2a00      	cmp	r2, #0
 8001424:	d12a      	bne.n	800147c <__gedf2+0x90>
 8001426:	433c      	orrs	r4, r7
 8001428:	46a3      	mov	fp, r4
 800142a:	4265      	negs	r5, r4
 800142c:	4165      	adcs	r5, r4
 800142e:	2b00      	cmp	r3, #0
 8001430:	d102      	bne.n	8001438 <__gedf2+0x4c>
 8001432:	464c      	mov	r4, r9
 8001434:	4326      	orrs	r6, r4
 8001436:	d027      	beq.n	8001488 <__gedf2+0x9c>
 8001438:	2d00      	cmp	r5, #0
 800143a:	d115      	bne.n	8001468 <__gedf2+0x7c>
 800143c:	4281      	cmp	r1, r0
 800143e:	d028      	beq.n	8001492 <__gedf2+0xa6>
 8001440:	2002      	movs	r0, #2
 8001442:	3901      	subs	r1, #1
 8001444:	4008      	ands	r0, r1
 8001446:	3801      	subs	r0, #1
 8001448:	bcf0      	pop	{r4, r5, r6, r7}
 800144a:	46bb      	mov	fp, r7
 800144c:	46b2      	mov	sl, r6
 800144e:	46a9      	mov	r9, r5
 8001450:	46a0      	mov	r8, r4
 8001452:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001454:	464d      	mov	r5, r9
 8001456:	432e      	orrs	r6, r5
 8001458:	d12f      	bne.n	80014ba <__gedf2+0xce>
 800145a:	2a00      	cmp	r2, #0
 800145c:	d1ee      	bne.n	800143c <__gedf2+0x50>
 800145e:	433c      	orrs	r4, r7
 8001460:	4265      	negs	r5, r4
 8001462:	4165      	adcs	r5, r4
 8001464:	2d00      	cmp	r5, #0
 8001466:	d0e9      	beq.n	800143c <__gedf2+0x50>
 8001468:	2800      	cmp	r0, #0
 800146a:	d1ed      	bne.n	8001448 <__gedf2+0x5c>
 800146c:	2001      	movs	r0, #1
 800146e:	4240      	negs	r0, r0
 8001470:	e7ea      	b.n	8001448 <__gedf2+0x5c>
 8001472:	003d      	movs	r5, r7
 8001474:	4325      	orrs	r5, r4
 8001476:	d120      	bne.n	80014ba <__gedf2+0xce>
 8001478:	4293      	cmp	r3, r2
 800147a:	d0eb      	beq.n	8001454 <__gedf2+0x68>
 800147c:	2b00      	cmp	r3, #0
 800147e:	d1dd      	bne.n	800143c <__gedf2+0x50>
 8001480:	464c      	mov	r4, r9
 8001482:	4326      	orrs	r6, r4
 8001484:	d1da      	bne.n	800143c <__gedf2+0x50>
 8001486:	e7db      	b.n	8001440 <__gedf2+0x54>
 8001488:	465b      	mov	r3, fp
 800148a:	2000      	movs	r0, #0
 800148c:	2b00      	cmp	r3, #0
 800148e:	d0db      	beq.n	8001448 <__gedf2+0x5c>
 8001490:	e7d6      	b.n	8001440 <__gedf2+0x54>
 8001492:	429a      	cmp	r2, r3
 8001494:	dc0a      	bgt.n	80014ac <__gedf2+0xc0>
 8001496:	dbe7      	blt.n	8001468 <__gedf2+0x7c>
 8001498:	454f      	cmp	r7, r9
 800149a:	d8d1      	bhi.n	8001440 <__gedf2+0x54>
 800149c:	d010      	beq.n	80014c0 <__gedf2+0xd4>
 800149e:	2000      	movs	r0, #0
 80014a0:	454f      	cmp	r7, r9
 80014a2:	d2d1      	bcs.n	8001448 <__gedf2+0x5c>
 80014a4:	2900      	cmp	r1, #0
 80014a6:	d0e1      	beq.n	800146c <__gedf2+0x80>
 80014a8:	0008      	movs	r0, r1
 80014aa:	e7cd      	b.n	8001448 <__gedf2+0x5c>
 80014ac:	4243      	negs	r3, r0
 80014ae:	4158      	adcs	r0, r3
 80014b0:	2302      	movs	r3, #2
 80014b2:	4240      	negs	r0, r0
 80014b4:	4018      	ands	r0, r3
 80014b6:	3801      	subs	r0, #1
 80014b8:	e7c6      	b.n	8001448 <__gedf2+0x5c>
 80014ba:	2002      	movs	r0, #2
 80014bc:	4240      	negs	r0, r0
 80014be:	e7c3      	b.n	8001448 <__gedf2+0x5c>
 80014c0:	45c4      	cmp	ip, r8
 80014c2:	d8bd      	bhi.n	8001440 <__gedf2+0x54>
 80014c4:	2000      	movs	r0, #0
 80014c6:	45c4      	cmp	ip, r8
 80014c8:	d2be      	bcs.n	8001448 <__gedf2+0x5c>
 80014ca:	e7eb      	b.n	80014a4 <__gedf2+0xb8>
 80014cc:	000007ff 	.word	0x000007ff

080014d0 <__ledf2>:
 80014d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014d2:	464e      	mov	r6, r9
 80014d4:	4645      	mov	r5, r8
 80014d6:	4657      	mov	r7, sl
 80014d8:	46de      	mov	lr, fp
 80014da:	0004      	movs	r4, r0
 80014dc:	0018      	movs	r0, r3
 80014de:	b5e0      	push	{r5, r6, r7, lr}
 80014e0:	0016      	movs	r6, r2
 80014e2:	031b      	lsls	r3, r3, #12
 80014e4:	0b1b      	lsrs	r3, r3, #12
 80014e6:	4d31      	ldr	r5, [pc, #196]	; (80015ac <__ledf2+0xdc>)
 80014e8:	030f      	lsls	r7, r1, #12
 80014ea:	004a      	lsls	r2, r1, #1
 80014ec:	4699      	mov	r9, r3
 80014ee:	0043      	lsls	r3, r0, #1
 80014f0:	46a4      	mov	ip, r4
 80014f2:	46b0      	mov	r8, r6
 80014f4:	0b3f      	lsrs	r7, r7, #12
 80014f6:	0d52      	lsrs	r2, r2, #21
 80014f8:	0fc9      	lsrs	r1, r1, #31
 80014fa:	0d5b      	lsrs	r3, r3, #21
 80014fc:	0fc0      	lsrs	r0, r0, #31
 80014fe:	42aa      	cmp	r2, r5
 8001500:	d011      	beq.n	8001526 <__ledf2+0x56>
 8001502:	42ab      	cmp	r3, r5
 8001504:	d014      	beq.n	8001530 <__ledf2+0x60>
 8001506:	2a00      	cmp	r2, #0
 8001508:	d12f      	bne.n	800156a <__ledf2+0x9a>
 800150a:	433c      	orrs	r4, r7
 800150c:	46a3      	mov	fp, r4
 800150e:	4265      	negs	r5, r4
 8001510:	4165      	adcs	r5, r4
 8001512:	2b00      	cmp	r3, #0
 8001514:	d114      	bne.n	8001540 <__ledf2+0x70>
 8001516:	464c      	mov	r4, r9
 8001518:	4326      	orrs	r6, r4
 800151a:	d111      	bne.n	8001540 <__ledf2+0x70>
 800151c:	465b      	mov	r3, fp
 800151e:	2000      	movs	r0, #0
 8001520:	2b00      	cmp	r3, #0
 8001522:	d017      	beq.n	8001554 <__ledf2+0x84>
 8001524:	e010      	b.n	8001548 <__ledf2+0x78>
 8001526:	003d      	movs	r5, r7
 8001528:	4325      	orrs	r5, r4
 800152a:	d112      	bne.n	8001552 <__ledf2+0x82>
 800152c:	4293      	cmp	r3, r2
 800152e:	d11c      	bne.n	800156a <__ledf2+0x9a>
 8001530:	464d      	mov	r5, r9
 8001532:	432e      	orrs	r6, r5
 8001534:	d10d      	bne.n	8001552 <__ledf2+0x82>
 8001536:	2a00      	cmp	r2, #0
 8001538:	d104      	bne.n	8001544 <__ledf2+0x74>
 800153a:	433c      	orrs	r4, r7
 800153c:	4265      	negs	r5, r4
 800153e:	4165      	adcs	r5, r4
 8001540:	2d00      	cmp	r5, #0
 8001542:	d10d      	bne.n	8001560 <__ledf2+0x90>
 8001544:	4281      	cmp	r1, r0
 8001546:	d016      	beq.n	8001576 <__ledf2+0xa6>
 8001548:	2002      	movs	r0, #2
 800154a:	3901      	subs	r1, #1
 800154c:	4008      	ands	r0, r1
 800154e:	3801      	subs	r0, #1
 8001550:	e000      	b.n	8001554 <__ledf2+0x84>
 8001552:	2002      	movs	r0, #2
 8001554:	bcf0      	pop	{r4, r5, r6, r7}
 8001556:	46bb      	mov	fp, r7
 8001558:	46b2      	mov	sl, r6
 800155a:	46a9      	mov	r9, r5
 800155c:	46a0      	mov	r8, r4
 800155e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001560:	2800      	cmp	r0, #0
 8001562:	d1f7      	bne.n	8001554 <__ledf2+0x84>
 8001564:	2001      	movs	r0, #1
 8001566:	4240      	negs	r0, r0
 8001568:	e7f4      	b.n	8001554 <__ledf2+0x84>
 800156a:	2b00      	cmp	r3, #0
 800156c:	d1ea      	bne.n	8001544 <__ledf2+0x74>
 800156e:	464c      	mov	r4, r9
 8001570:	4326      	orrs	r6, r4
 8001572:	d1e7      	bne.n	8001544 <__ledf2+0x74>
 8001574:	e7e8      	b.n	8001548 <__ledf2+0x78>
 8001576:	429a      	cmp	r2, r3
 8001578:	dd06      	ble.n	8001588 <__ledf2+0xb8>
 800157a:	4243      	negs	r3, r0
 800157c:	4158      	adcs	r0, r3
 800157e:	2302      	movs	r3, #2
 8001580:	4240      	negs	r0, r0
 8001582:	4018      	ands	r0, r3
 8001584:	3801      	subs	r0, #1
 8001586:	e7e5      	b.n	8001554 <__ledf2+0x84>
 8001588:	429a      	cmp	r2, r3
 800158a:	dbe9      	blt.n	8001560 <__ledf2+0x90>
 800158c:	454f      	cmp	r7, r9
 800158e:	d8db      	bhi.n	8001548 <__ledf2+0x78>
 8001590:	d006      	beq.n	80015a0 <__ledf2+0xd0>
 8001592:	2000      	movs	r0, #0
 8001594:	454f      	cmp	r7, r9
 8001596:	d2dd      	bcs.n	8001554 <__ledf2+0x84>
 8001598:	2900      	cmp	r1, #0
 800159a:	d0e3      	beq.n	8001564 <__ledf2+0x94>
 800159c:	0008      	movs	r0, r1
 800159e:	e7d9      	b.n	8001554 <__ledf2+0x84>
 80015a0:	45c4      	cmp	ip, r8
 80015a2:	d8d1      	bhi.n	8001548 <__ledf2+0x78>
 80015a4:	2000      	movs	r0, #0
 80015a6:	45c4      	cmp	ip, r8
 80015a8:	d2d4      	bcs.n	8001554 <__ledf2+0x84>
 80015aa:	e7f5      	b.n	8001598 <__ledf2+0xc8>
 80015ac:	000007ff 	.word	0x000007ff

080015b0 <__aeabi_dmul>:
 80015b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015b2:	4657      	mov	r7, sl
 80015b4:	464e      	mov	r6, r9
 80015b6:	4645      	mov	r5, r8
 80015b8:	46de      	mov	lr, fp
 80015ba:	b5e0      	push	{r5, r6, r7, lr}
 80015bc:	4698      	mov	r8, r3
 80015be:	030c      	lsls	r4, r1, #12
 80015c0:	004b      	lsls	r3, r1, #1
 80015c2:	0006      	movs	r6, r0
 80015c4:	4692      	mov	sl, r2
 80015c6:	b087      	sub	sp, #28
 80015c8:	0b24      	lsrs	r4, r4, #12
 80015ca:	0d5b      	lsrs	r3, r3, #21
 80015cc:	0fcf      	lsrs	r7, r1, #31
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d06c      	beq.n	80016ac <__aeabi_dmul+0xfc>
 80015d2:	4add      	ldr	r2, [pc, #884]	; (8001948 <__aeabi_dmul+0x398>)
 80015d4:	4293      	cmp	r3, r2
 80015d6:	d100      	bne.n	80015da <__aeabi_dmul+0x2a>
 80015d8:	e086      	b.n	80016e8 <__aeabi_dmul+0x138>
 80015da:	0f42      	lsrs	r2, r0, #29
 80015dc:	00e4      	lsls	r4, r4, #3
 80015de:	4314      	orrs	r4, r2
 80015e0:	2280      	movs	r2, #128	; 0x80
 80015e2:	0412      	lsls	r2, r2, #16
 80015e4:	4314      	orrs	r4, r2
 80015e6:	4ad9      	ldr	r2, [pc, #868]	; (800194c <__aeabi_dmul+0x39c>)
 80015e8:	00c5      	lsls	r5, r0, #3
 80015ea:	4694      	mov	ip, r2
 80015ec:	4463      	add	r3, ip
 80015ee:	9300      	str	r3, [sp, #0]
 80015f0:	2300      	movs	r3, #0
 80015f2:	4699      	mov	r9, r3
 80015f4:	469b      	mov	fp, r3
 80015f6:	4643      	mov	r3, r8
 80015f8:	4642      	mov	r2, r8
 80015fa:	031e      	lsls	r6, r3, #12
 80015fc:	0fd2      	lsrs	r2, r2, #31
 80015fe:	005b      	lsls	r3, r3, #1
 8001600:	4650      	mov	r0, sl
 8001602:	4690      	mov	r8, r2
 8001604:	0b36      	lsrs	r6, r6, #12
 8001606:	0d5b      	lsrs	r3, r3, #21
 8001608:	d100      	bne.n	800160c <__aeabi_dmul+0x5c>
 800160a:	e078      	b.n	80016fe <__aeabi_dmul+0x14e>
 800160c:	4ace      	ldr	r2, [pc, #824]	; (8001948 <__aeabi_dmul+0x398>)
 800160e:	4293      	cmp	r3, r2
 8001610:	d01d      	beq.n	800164e <__aeabi_dmul+0x9e>
 8001612:	49ce      	ldr	r1, [pc, #824]	; (800194c <__aeabi_dmul+0x39c>)
 8001614:	0f42      	lsrs	r2, r0, #29
 8001616:	468c      	mov	ip, r1
 8001618:	9900      	ldr	r1, [sp, #0]
 800161a:	4463      	add	r3, ip
 800161c:	00f6      	lsls	r6, r6, #3
 800161e:	468c      	mov	ip, r1
 8001620:	4316      	orrs	r6, r2
 8001622:	2280      	movs	r2, #128	; 0x80
 8001624:	449c      	add	ip, r3
 8001626:	0412      	lsls	r2, r2, #16
 8001628:	4663      	mov	r3, ip
 800162a:	4316      	orrs	r6, r2
 800162c:	00c2      	lsls	r2, r0, #3
 800162e:	2000      	movs	r0, #0
 8001630:	9300      	str	r3, [sp, #0]
 8001632:	9900      	ldr	r1, [sp, #0]
 8001634:	4643      	mov	r3, r8
 8001636:	3101      	adds	r1, #1
 8001638:	468c      	mov	ip, r1
 800163a:	4649      	mov	r1, r9
 800163c:	407b      	eors	r3, r7
 800163e:	9301      	str	r3, [sp, #4]
 8001640:	290f      	cmp	r1, #15
 8001642:	d900      	bls.n	8001646 <__aeabi_dmul+0x96>
 8001644:	e07e      	b.n	8001744 <__aeabi_dmul+0x194>
 8001646:	4bc2      	ldr	r3, [pc, #776]	; (8001950 <__aeabi_dmul+0x3a0>)
 8001648:	0089      	lsls	r1, r1, #2
 800164a:	5859      	ldr	r1, [r3, r1]
 800164c:	468f      	mov	pc, r1
 800164e:	4652      	mov	r2, sl
 8001650:	9b00      	ldr	r3, [sp, #0]
 8001652:	4332      	orrs	r2, r6
 8001654:	d000      	beq.n	8001658 <__aeabi_dmul+0xa8>
 8001656:	e156      	b.n	8001906 <__aeabi_dmul+0x356>
 8001658:	49bb      	ldr	r1, [pc, #748]	; (8001948 <__aeabi_dmul+0x398>)
 800165a:	2600      	movs	r6, #0
 800165c:	468c      	mov	ip, r1
 800165e:	4463      	add	r3, ip
 8001660:	4649      	mov	r1, r9
 8001662:	9300      	str	r3, [sp, #0]
 8001664:	2302      	movs	r3, #2
 8001666:	4319      	orrs	r1, r3
 8001668:	4689      	mov	r9, r1
 800166a:	2002      	movs	r0, #2
 800166c:	e7e1      	b.n	8001632 <__aeabi_dmul+0x82>
 800166e:	4643      	mov	r3, r8
 8001670:	9301      	str	r3, [sp, #4]
 8001672:	0034      	movs	r4, r6
 8001674:	0015      	movs	r5, r2
 8001676:	4683      	mov	fp, r0
 8001678:	465b      	mov	r3, fp
 800167a:	2b02      	cmp	r3, #2
 800167c:	d05e      	beq.n	800173c <__aeabi_dmul+0x18c>
 800167e:	2b03      	cmp	r3, #3
 8001680:	d100      	bne.n	8001684 <__aeabi_dmul+0xd4>
 8001682:	e1f3      	b.n	8001a6c <__aeabi_dmul+0x4bc>
 8001684:	2b01      	cmp	r3, #1
 8001686:	d000      	beq.n	800168a <__aeabi_dmul+0xda>
 8001688:	e118      	b.n	80018bc <__aeabi_dmul+0x30c>
 800168a:	2200      	movs	r2, #0
 800168c:	2400      	movs	r4, #0
 800168e:	2500      	movs	r5, #0
 8001690:	9b01      	ldr	r3, [sp, #4]
 8001692:	0512      	lsls	r2, r2, #20
 8001694:	4322      	orrs	r2, r4
 8001696:	07db      	lsls	r3, r3, #31
 8001698:	431a      	orrs	r2, r3
 800169a:	0028      	movs	r0, r5
 800169c:	0011      	movs	r1, r2
 800169e:	b007      	add	sp, #28
 80016a0:	bcf0      	pop	{r4, r5, r6, r7}
 80016a2:	46bb      	mov	fp, r7
 80016a4:	46b2      	mov	sl, r6
 80016a6:	46a9      	mov	r9, r5
 80016a8:	46a0      	mov	r8, r4
 80016aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ac:	0025      	movs	r5, r4
 80016ae:	4305      	orrs	r5, r0
 80016b0:	d100      	bne.n	80016b4 <__aeabi_dmul+0x104>
 80016b2:	e141      	b.n	8001938 <__aeabi_dmul+0x388>
 80016b4:	2c00      	cmp	r4, #0
 80016b6:	d100      	bne.n	80016ba <__aeabi_dmul+0x10a>
 80016b8:	e1ad      	b.n	8001a16 <__aeabi_dmul+0x466>
 80016ba:	0020      	movs	r0, r4
 80016bc:	f000 fe20 	bl	8002300 <__clzsi2>
 80016c0:	0001      	movs	r1, r0
 80016c2:	0002      	movs	r2, r0
 80016c4:	390b      	subs	r1, #11
 80016c6:	231d      	movs	r3, #29
 80016c8:	0010      	movs	r0, r2
 80016ca:	1a5b      	subs	r3, r3, r1
 80016cc:	0031      	movs	r1, r6
 80016ce:	0035      	movs	r5, r6
 80016d0:	3808      	subs	r0, #8
 80016d2:	4084      	lsls	r4, r0
 80016d4:	40d9      	lsrs	r1, r3
 80016d6:	4085      	lsls	r5, r0
 80016d8:	430c      	orrs	r4, r1
 80016da:	489e      	ldr	r0, [pc, #632]	; (8001954 <__aeabi_dmul+0x3a4>)
 80016dc:	1a83      	subs	r3, r0, r2
 80016de:	9300      	str	r3, [sp, #0]
 80016e0:	2300      	movs	r3, #0
 80016e2:	4699      	mov	r9, r3
 80016e4:	469b      	mov	fp, r3
 80016e6:	e786      	b.n	80015f6 <__aeabi_dmul+0x46>
 80016e8:	0005      	movs	r5, r0
 80016ea:	4325      	orrs	r5, r4
 80016ec:	d000      	beq.n	80016f0 <__aeabi_dmul+0x140>
 80016ee:	e11c      	b.n	800192a <__aeabi_dmul+0x37a>
 80016f0:	2208      	movs	r2, #8
 80016f2:	9300      	str	r3, [sp, #0]
 80016f4:	2302      	movs	r3, #2
 80016f6:	2400      	movs	r4, #0
 80016f8:	4691      	mov	r9, r2
 80016fa:	469b      	mov	fp, r3
 80016fc:	e77b      	b.n	80015f6 <__aeabi_dmul+0x46>
 80016fe:	4652      	mov	r2, sl
 8001700:	4332      	orrs	r2, r6
 8001702:	d100      	bne.n	8001706 <__aeabi_dmul+0x156>
 8001704:	e10a      	b.n	800191c <__aeabi_dmul+0x36c>
 8001706:	2e00      	cmp	r6, #0
 8001708:	d100      	bne.n	800170c <__aeabi_dmul+0x15c>
 800170a:	e176      	b.n	80019fa <__aeabi_dmul+0x44a>
 800170c:	0030      	movs	r0, r6
 800170e:	f000 fdf7 	bl	8002300 <__clzsi2>
 8001712:	0002      	movs	r2, r0
 8001714:	3a0b      	subs	r2, #11
 8001716:	231d      	movs	r3, #29
 8001718:	0001      	movs	r1, r0
 800171a:	1a9b      	subs	r3, r3, r2
 800171c:	4652      	mov	r2, sl
 800171e:	3908      	subs	r1, #8
 8001720:	40da      	lsrs	r2, r3
 8001722:	408e      	lsls	r6, r1
 8001724:	4316      	orrs	r6, r2
 8001726:	4652      	mov	r2, sl
 8001728:	408a      	lsls	r2, r1
 800172a:	9b00      	ldr	r3, [sp, #0]
 800172c:	4989      	ldr	r1, [pc, #548]	; (8001954 <__aeabi_dmul+0x3a4>)
 800172e:	1a18      	subs	r0, r3, r0
 8001730:	0003      	movs	r3, r0
 8001732:	468c      	mov	ip, r1
 8001734:	4463      	add	r3, ip
 8001736:	2000      	movs	r0, #0
 8001738:	9300      	str	r3, [sp, #0]
 800173a:	e77a      	b.n	8001632 <__aeabi_dmul+0x82>
 800173c:	2400      	movs	r4, #0
 800173e:	2500      	movs	r5, #0
 8001740:	4a81      	ldr	r2, [pc, #516]	; (8001948 <__aeabi_dmul+0x398>)
 8001742:	e7a5      	b.n	8001690 <__aeabi_dmul+0xe0>
 8001744:	0c2f      	lsrs	r7, r5, #16
 8001746:	042d      	lsls	r5, r5, #16
 8001748:	0c2d      	lsrs	r5, r5, #16
 800174a:	002b      	movs	r3, r5
 800174c:	0c11      	lsrs	r1, r2, #16
 800174e:	0412      	lsls	r2, r2, #16
 8001750:	0c12      	lsrs	r2, r2, #16
 8001752:	4353      	muls	r3, r2
 8001754:	4698      	mov	r8, r3
 8001756:	0013      	movs	r3, r2
 8001758:	0028      	movs	r0, r5
 800175a:	437b      	muls	r3, r7
 800175c:	4699      	mov	r9, r3
 800175e:	4348      	muls	r0, r1
 8001760:	4448      	add	r0, r9
 8001762:	4683      	mov	fp, r0
 8001764:	4640      	mov	r0, r8
 8001766:	000b      	movs	r3, r1
 8001768:	0c00      	lsrs	r0, r0, #16
 800176a:	4682      	mov	sl, r0
 800176c:	4658      	mov	r0, fp
 800176e:	437b      	muls	r3, r7
 8001770:	4450      	add	r0, sl
 8001772:	9302      	str	r3, [sp, #8]
 8001774:	4581      	cmp	r9, r0
 8001776:	d906      	bls.n	8001786 <__aeabi_dmul+0x1d6>
 8001778:	469a      	mov	sl, r3
 800177a:	2380      	movs	r3, #128	; 0x80
 800177c:	025b      	lsls	r3, r3, #9
 800177e:	4699      	mov	r9, r3
 8001780:	44ca      	add	sl, r9
 8001782:	4653      	mov	r3, sl
 8001784:	9302      	str	r3, [sp, #8]
 8001786:	0c03      	lsrs	r3, r0, #16
 8001788:	469b      	mov	fp, r3
 800178a:	4643      	mov	r3, r8
 800178c:	041b      	lsls	r3, r3, #16
 800178e:	0400      	lsls	r0, r0, #16
 8001790:	0c1b      	lsrs	r3, r3, #16
 8001792:	4698      	mov	r8, r3
 8001794:	0003      	movs	r3, r0
 8001796:	4443      	add	r3, r8
 8001798:	9304      	str	r3, [sp, #16]
 800179a:	0c33      	lsrs	r3, r6, #16
 800179c:	4699      	mov	r9, r3
 800179e:	002b      	movs	r3, r5
 80017a0:	0436      	lsls	r6, r6, #16
 80017a2:	0c36      	lsrs	r6, r6, #16
 80017a4:	4373      	muls	r3, r6
 80017a6:	4698      	mov	r8, r3
 80017a8:	0033      	movs	r3, r6
 80017aa:	437b      	muls	r3, r7
 80017ac:	469a      	mov	sl, r3
 80017ae:	464b      	mov	r3, r9
 80017b0:	435d      	muls	r5, r3
 80017b2:	435f      	muls	r7, r3
 80017b4:	4643      	mov	r3, r8
 80017b6:	4455      	add	r5, sl
 80017b8:	0c18      	lsrs	r0, r3, #16
 80017ba:	1940      	adds	r0, r0, r5
 80017bc:	4582      	cmp	sl, r0
 80017be:	d903      	bls.n	80017c8 <__aeabi_dmul+0x218>
 80017c0:	2380      	movs	r3, #128	; 0x80
 80017c2:	025b      	lsls	r3, r3, #9
 80017c4:	469a      	mov	sl, r3
 80017c6:	4457      	add	r7, sl
 80017c8:	0c05      	lsrs	r5, r0, #16
 80017ca:	19eb      	adds	r3, r5, r7
 80017cc:	9305      	str	r3, [sp, #20]
 80017ce:	4643      	mov	r3, r8
 80017d0:	041d      	lsls	r5, r3, #16
 80017d2:	0c2d      	lsrs	r5, r5, #16
 80017d4:	0400      	lsls	r0, r0, #16
 80017d6:	1940      	adds	r0, r0, r5
 80017d8:	0c25      	lsrs	r5, r4, #16
 80017da:	0424      	lsls	r4, r4, #16
 80017dc:	0c24      	lsrs	r4, r4, #16
 80017de:	0027      	movs	r7, r4
 80017e0:	4357      	muls	r7, r2
 80017e2:	436a      	muls	r2, r5
 80017e4:	4690      	mov	r8, r2
 80017e6:	002a      	movs	r2, r5
 80017e8:	0c3b      	lsrs	r3, r7, #16
 80017ea:	469a      	mov	sl, r3
 80017ec:	434a      	muls	r2, r1
 80017ee:	4361      	muls	r1, r4
 80017f0:	4441      	add	r1, r8
 80017f2:	4451      	add	r1, sl
 80017f4:	4483      	add	fp, r0
 80017f6:	4588      	cmp	r8, r1
 80017f8:	d903      	bls.n	8001802 <__aeabi_dmul+0x252>
 80017fa:	2380      	movs	r3, #128	; 0x80
 80017fc:	025b      	lsls	r3, r3, #9
 80017fe:	4698      	mov	r8, r3
 8001800:	4442      	add	r2, r8
 8001802:	043f      	lsls	r7, r7, #16
 8001804:	0c0b      	lsrs	r3, r1, #16
 8001806:	0c3f      	lsrs	r7, r7, #16
 8001808:	0409      	lsls	r1, r1, #16
 800180a:	19c9      	adds	r1, r1, r7
 800180c:	0027      	movs	r7, r4
 800180e:	4698      	mov	r8, r3
 8001810:	464b      	mov	r3, r9
 8001812:	4377      	muls	r7, r6
 8001814:	435c      	muls	r4, r3
 8001816:	436e      	muls	r6, r5
 8001818:	435d      	muls	r5, r3
 800181a:	0c3b      	lsrs	r3, r7, #16
 800181c:	4699      	mov	r9, r3
 800181e:	19a4      	adds	r4, r4, r6
 8001820:	444c      	add	r4, r9
 8001822:	4442      	add	r2, r8
 8001824:	9503      	str	r5, [sp, #12]
 8001826:	42a6      	cmp	r6, r4
 8001828:	d904      	bls.n	8001834 <__aeabi_dmul+0x284>
 800182a:	2380      	movs	r3, #128	; 0x80
 800182c:	025b      	lsls	r3, r3, #9
 800182e:	4698      	mov	r8, r3
 8001830:	4445      	add	r5, r8
 8001832:	9503      	str	r5, [sp, #12]
 8001834:	9b02      	ldr	r3, [sp, #8]
 8001836:	043f      	lsls	r7, r7, #16
 8001838:	445b      	add	r3, fp
 800183a:	001e      	movs	r6, r3
 800183c:	4283      	cmp	r3, r0
 800183e:	4180      	sbcs	r0, r0
 8001840:	0423      	lsls	r3, r4, #16
 8001842:	4698      	mov	r8, r3
 8001844:	9b05      	ldr	r3, [sp, #20]
 8001846:	0c3f      	lsrs	r7, r7, #16
 8001848:	4447      	add	r7, r8
 800184a:	4698      	mov	r8, r3
 800184c:	1876      	adds	r6, r6, r1
 800184e:	428e      	cmp	r6, r1
 8001850:	4189      	sbcs	r1, r1
 8001852:	4447      	add	r7, r8
 8001854:	4240      	negs	r0, r0
 8001856:	183d      	adds	r5, r7, r0
 8001858:	46a8      	mov	r8, r5
 800185a:	4693      	mov	fp, r2
 800185c:	4249      	negs	r1, r1
 800185e:	468a      	mov	sl, r1
 8001860:	44c3      	add	fp, r8
 8001862:	429f      	cmp	r7, r3
 8001864:	41bf      	sbcs	r7, r7
 8001866:	4580      	cmp	r8, r0
 8001868:	4180      	sbcs	r0, r0
 800186a:	9b03      	ldr	r3, [sp, #12]
 800186c:	44da      	add	sl, fp
 800186e:	4698      	mov	r8, r3
 8001870:	4653      	mov	r3, sl
 8001872:	4240      	negs	r0, r0
 8001874:	427f      	negs	r7, r7
 8001876:	4307      	orrs	r7, r0
 8001878:	0c24      	lsrs	r4, r4, #16
 800187a:	4593      	cmp	fp, r2
 800187c:	4192      	sbcs	r2, r2
 800187e:	458a      	cmp	sl, r1
 8001880:	4189      	sbcs	r1, r1
 8001882:	193f      	adds	r7, r7, r4
 8001884:	0ddc      	lsrs	r4, r3, #23
 8001886:	9b04      	ldr	r3, [sp, #16]
 8001888:	0275      	lsls	r5, r6, #9
 800188a:	431d      	orrs	r5, r3
 800188c:	1e68      	subs	r0, r5, #1
 800188e:	4185      	sbcs	r5, r0
 8001890:	4653      	mov	r3, sl
 8001892:	4252      	negs	r2, r2
 8001894:	4249      	negs	r1, r1
 8001896:	430a      	orrs	r2, r1
 8001898:	18bf      	adds	r7, r7, r2
 800189a:	4447      	add	r7, r8
 800189c:	0df6      	lsrs	r6, r6, #23
 800189e:	027f      	lsls	r7, r7, #9
 80018a0:	4335      	orrs	r5, r6
 80018a2:	025a      	lsls	r2, r3, #9
 80018a4:	433c      	orrs	r4, r7
 80018a6:	4315      	orrs	r5, r2
 80018a8:	01fb      	lsls	r3, r7, #7
 80018aa:	d400      	bmi.n	80018ae <__aeabi_dmul+0x2fe>
 80018ac:	e0c1      	b.n	8001a32 <__aeabi_dmul+0x482>
 80018ae:	2101      	movs	r1, #1
 80018b0:	086a      	lsrs	r2, r5, #1
 80018b2:	400d      	ands	r5, r1
 80018b4:	4315      	orrs	r5, r2
 80018b6:	07e2      	lsls	r2, r4, #31
 80018b8:	4315      	orrs	r5, r2
 80018ba:	0864      	lsrs	r4, r4, #1
 80018bc:	4926      	ldr	r1, [pc, #152]	; (8001958 <__aeabi_dmul+0x3a8>)
 80018be:	4461      	add	r1, ip
 80018c0:	2900      	cmp	r1, #0
 80018c2:	dd56      	ble.n	8001972 <__aeabi_dmul+0x3c2>
 80018c4:	076b      	lsls	r3, r5, #29
 80018c6:	d009      	beq.n	80018dc <__aeabi_dmul+0x32c>
 80018c8:	220f      	movs	r2, #15
 80018ca:	402a      	ands	r2, r5
 80018cc:	2a04      	cmp	r2, #4
 80018ce:	d005      	beq.n	80018dc <__aeabi_dmul+0x32c>
 80018d0:	1d2a      	adds	r2, r5, #4
 80018d2:	42aa      	cmp	r2, r5
 80018d4:	41ad      	sbcs	r5, r5
 80018d6:	426d      	negs	r5, r5
 80018d8:	1964      	adds	r4, r4, r5
 80018da:	0015      	movs	r5, r2
 80018dc:	01e3      	lsls	r3, r4, #7
 80018de:	d504      	bpl.n	80018ea <__aeabi_dmul+0x33a>
 80018e0:	2180      	movs	r1, #128	; 0x80
 80018e2:	4a1e      	ldr	r2, [pc, #120]	; (800195c <__aeabi_dmul+0x3ac>)
 80018e4:	00c9      	lsls	r1, r1, #3
 80018e6:	4014      	ands	r4, r2
 80018e8:	4461      	add	r1, ip
 80018ea:	4a1d      	ldr	r2, [pc, #116]	; (8001960 <__aeabi_dmul+0x3b0>)
 80018ec:	4291      	cmp	r1, r2
 80018ee:	dd00      	ble.n	80018f2 <__aeabi_dmul+0x342>
 80018f0:	e724      	b.n	800173c <__aeabi_dmul+0x18c>
 80018f2:	0762      	lsls	r2, r4, #29
 80018f4:	08ed      	lsrs	r5, r5, #3
 80018f6:	0264      	lsls	r4, r4, #9
 80018f8:	0549      	lsls	r1, r1, #21
 80018fa:	4315      	orrs	r5, r2
 80018fc:	0b24      	lsrs	r4, r4, #12
 80018fe:	0d4a      	lsrs	r2, r1, #21
 8001900:	e6c6      	b.n	8001690 <__aeabi_dmul+0xe0>
 8001902:	9701      	str	r7, [sp, #4]
 8001904:	e6b8      	b.n	8001678 <__aeabi_dmul+0xc8>
 8001906:	4a10      	ldr	r2, [pc, #64]	; (8001948 <__aeabi_dmul+0x398>)
 8001908:	2003      	movs	r0, #3
 800190a:	4694      	mov	ip, r2
 800190c:	4463      	add	r3, ip
 800190e:	464a      	mov	r2, r9
 8001910:	9300      	str	r3, [sp, #0]
 8001912:	2303      	movs	r3, #3
 8001914:	431a      	orrs	r2, r3
 8001916:	4691      	mov	r9, r2
 8001918:	4652      	mov	r2, sl
 800191a:	e68a      	b.n	8001632 <__aeabi_dmul+0x82>
 800191c:	4649      	mov	r1, r9
 800191e:	2301      	movs	r3, #1
 8001920:	4319      	orrs	r1, r3
 8001922:	4689      	mov	r9, r1
 8001924:	2600      	movs	r6, #0
 8001926:	2001      	movs	r0, #1
 8001928:	e683      	b.n	8001632 <__aeabi_dmul+0x82>
 800192a:	220c      	movs	r2, #12
 800192c:	9300      	str	r3, [sp, #0]
 800192e:	2303      	movs	r3, #3
 8001930:	0005      	movs	r5, r0
 8001932:	4691      	mov	r9, r2
 8001934:	469b      	mov	fp, r3
 8001936:	e65e      	b.n	80015f6 <__aeabi_dmul+0x46>
 8001938:	2304      	movs	r3, #4
 800193a:	4699      	mov	r9, r3
 800193c:	2300      	movs	r3, #0
 800193e:	9300      	str	r3, [sp, #0]
 8001940:	3301      	adds	r3, #1
 8001942:	2400      	movs	r4, #0
 8001944:	469b      	mov	fp, r3
 8001946:	e656      	b.n	80015f6 <__aeabi_dmul+0x46>
 8001948:	000007ff 	.word	0x000007ff
 800194c:	fffffc01 	.word	0xfffffc01
 8001950:	08006f30 	.word	0x08006f30
 8001954:	fffffc0d 	.word	0xfffffc0d
 8001958:	000003ff 	.word	0x000003ff
 800195c:	feffffff 	.word	0xfeffffff
 8001960:	000007fe 	.word	0x000007fe
 8001964:	2300      	movs	r3, #0
 8001966:	2480      	movs	r4, #128	; 0x80
 8001968:	2500      	movs	r5, #0
 800196a:	4a44      	ldr	r2, [pc, #272]	; (8001a7c <__aeabi_dmul+0x4cc>)
 800196c:	9301      	str	r3, [sp, #4]
 800196e:	0324      	lsls	r4, r4, #12
 8001970:	e68e      	b.n	8001690 <__aeabi_dmul+0xe0>
 8001972:	2001      	movs	r0, #1
 8001974:	1a40      	subs	r0, r0, r1
 8001976:	2838      	cmp	r0, #56	; 0x38
 8001978:	dd00      	ble.n	800197c <__aeabi_dmul+0x3cc>
 800197a:	e686      	b.n	800168a <__aeabi_dmul+0xda>
 800197c:	281f      	cmp	r0, #31
 800197e:	dd5b      	ble.n	8001a38 <__aeabi_dmul+0x488>
 8001980:	221f      	movs	r2, #31
 8001982:	0023      	movs	r3, r4
 8001984:	4252      	negs	r2, r2
 8001986:	1a51      	subs	r1, r2, r1
 8001988:	40cb      	lsrs	r3, r1
 800198a:	0019      	movs	r1, r3
 800198c:	2820      	cmp	r0, #32
 800198e:	d003      	beq.n	8001998 <__aeabi_dmul+0x3e8>
 8001990:	4a3b      	ldr	r2, [pc, #236]	; (8001a80 <__aeabi_dmul+0x4d0>)
 8001992:	4462      	add	r2, ip
 8001994:	4094      	lsls	r4, r2
 8001996:	4325      	orrs	r5, r4
 8001998:	1e6a      	subs	r2, r5, #1
 800199a:	4195      	sbcs	r5, r2
 800199c:	002a      	movs	r2, r5
 800199e:	430a      	orrs	r2, r1
 80019a0:	2107      	movs	r1, #7
 80019a2:	000d      	movs	r5, r1
 80019a4:	2400      	movs	r4, #0
 80019a6:	4015      	ands	r5, r2
 80019a8:	4211      	tst	r1, r2
 80019aa:	d05b      	beq.n	8001a64 <__aeabi_dmul+0x4b4>
 80019ac:	210f      	movs	r1, #15
 80019ae:	2400      	movs	r4, #0
 80019b0:	4011      	ands	r1, r2
 80019b2:	2904      	cmp	r1, #4
 80019b4:	d053      	beq.n	8001a5e <__aeabi_dmul+0x4ae>
 80019b6:	1d11      	adds	r1, r2, #4
 80019b8:	4291      	cmp	r1, r2
 80019ba:	4192      	sbcs	r2, r2
 80019bc:	4252      	negs	r2, r2
 80019be:	18a4      	adds	r4, r4, r2
 80019c0:	000a      	movs	r2, r1
 80019c2:	0223      	lsls	r3, r4, #8
 80019c4:	d54b      	bpl.n	8001a5e <__aeabi_dmul+0x4ae>
 80019c6:	2201      	movs	r2, #1
 80019c8:	2400      	movs	r4, #0
 80019ca:	2500      	movs	r5, #0
 80019cc:	e660      	b.n	8001690 <__aeabi_dmul+0xe0>
 80019ce:	2380      	movs	r3, #128	; 0x80
 80019d0:	031b      	lsls	r3, r3, #12
 80019d2:	421c      	tst	r4, r3
 80019d4:	d009      	beq.n	80019ea <__aeabi_dmul+0x43a>
 80019d6:	421e      	tst	r6, r3
 80019d8:	d107      	bne.n	80019ea <__aeabi_dmul+0x43a>
 80019da:	4333      	orrs	r3, r6
 80019dc:	031c      	lsls	r4, r3, #12
 80019de:	4643      	mov	r3, r8
 80019e0:	0015      	movs	r5, r2
 80019e2:	0b24      	lsrs	r4, r4, #12
 80019e4:	4a25      	ldr	r2, [pc, #148]	; (8001a7c <__aeabi_dmul+0x4cc>)
 80019e6:	9301      	str	r3, [sp, #4]
 80019e8:	e652      	b.n	8001690 <__aeabi_dmul+0xe0>
 80019ea:	2280      	movs	r2, #128	; 0x80
 80019ec:	0312      	lsls	r2, r2, #12
 80019ee:	4314      	orrs	r4, r2
 80019f0:	0324      	lsls	r4, r4, #12
 80019f2:	4a22      	ldr	r2, [pc, #136]	; (8001a7c <__aeabi_dmul+0x4cc>)
 80019f4:	0b24      	lsrs	r4, r4, #12
 80019f6:	9701      	str	r7, [sp, #4]
 80019f8:	e64a      	b.n	8001690 <__aeabi_dmul+0xe0>
 80019fa:	f000 fc81 	bl	8002300 <__clzsi2>
 80019fe:	0003      	movs	r3, r0
 8001a00:	001a      	movs	r2, r3
 8001a02:	3215      	adds	r2, #21
 8001a04:	3020      	adds	r0, #32
 8001a06:	2a1c      	cmp	r2, #28
 8001a08:	dc00      	bgt.n	8001a0c <__aeabi_dmul+0x45c>
 8001a0a:	e684      	b.n	8001716 <__aeabi_dmul+0x166>
 8001a0c:	4656      	mov	r6, sl
 8001a0e:	3b08      	subs	r3, #8
 8001a10:	2200      	movs	r2, #0
 8001a12:	409e      	lsls	r6, r3
 8001a14:	e689      	b.n	800172a <__aeabi_dmul+0x17a>
 8001a16:	f000 fc73 	bl	8002300 <__clzsi2>
 8001a1a:	0001      	movs	r1, r0
 8001a1c:	0002      	movs	r2, r0
 8001a1e:	3115      	adds	r1, #21
 8001a20:	3220      	adds	r2, #32
 8001a22:	291c      	cmp	r1, #28
 8001a24:	dc00      	bgt.n	8001a28 <__aeabi_dmul+0x478>
 8001a26:	e64e      	b.n	80016c6 <__aeabi_dmul+0x116>
 8001a28:	0034      	movs	r4, r6
 8001a2a:	3808      	subs	r0, #8
 8001a2c:	2500      	movs	r5, #0
 8001a2e:	4084      	lsls	r4, r0
 8001a30:	e653      	b.n	80016da <__aeabi_dmul+0x12a>
 8001a32:	9b00      	ldr	r3, [sp, #0]
 8001a34:	469c      	mov	ip, r3
 8001a36:	e741      	b.n	80018bc <__aeabi_dmul+0x30c>
 8001a38:	4912      	ldr	r1, [pc, #72]	; (8001a84 <__aeabi_dmul+0x4d4>)
 8001a3a:	0022      	movs	r2, r4
 8001a3c:	4461      	add	r1, ip
 8001a3e:	002e      	movs	r6, r5
 8001a40:	408d      	lsls	r5, r1
 8001a42:	408a      	lsls	r2, r1
 8001a44:	40c6      	lsrs	r6, r0
 8001a46:	1e69      	subs	r1, r5, #1
 8001a48:	418d      	sbcs	r5, r1
 8001a4a:	4332      	orrs	r2, r6
 8001a4c:	432a      	orrs	r2, r5
 8001a4e:	40c4      	lsrs	r4, r0
 8001a50:	0753      	lsls	r3, r2, #29
 8001a52:	d0b6      	beq.n	80019c2 <__aeabi_dmul+0x412>
 8001a54:	210f      	movs	r1, #15
 8001a56:	4011      	ands	r1, r2
 8001a58:	2904      	cmp	r1, #4
 8001a5a:	d1ac      	bne.n	80019b6 <__aeabi_dmul+0x406>
 8001a5c:	e7b1      	b.n	80019c2 <__aeabi_dmul+0x412>
 8001a5e:	0765      	lsls	r5, r4, #29
 8001a60:	0264      	lsls	r4, r4, #9
 8001a62:	0b24      	lsrs	r4, r4, #12
 8001a64:	08d2      	lsrs	r2, r2, #3
 8001a66:	4315      	orrs	r5, r2
 8001a68:	2200      	movs	r2, #0
 8001a6a:	e611      	b.n	8001690 <__aeabi_dmul+0xe0>
 8001a6c:	2280      	movs	r2, #128	; 0x80
 8001a6e:	0312      	lsls	r2, r2, #12
 8001a70:	4314      	orrs	r4, r2
 8001a72:	0324      	lsls	r4, r4, #12
 8001a74:	4a01      	ldr	r2, [pc, #4]	; (8001a7c <__aeabi_dmul+0x4cc>)
 8001a76:	0b24      	lsrs	r4, r4, #12
 8001a78:	e60a      	b.n	8001690 <__aeabi_dmul+0xe0>
 8001a7a:	46c0      	nop			; (mov r8, r8)
 8001a7c:	000007ff 	.word	0x000007ff
 8001a80:	0000043e 	.word	0x0000043e
 8001a84:	0000041e 	.word	0x0000041e

08001a88 <__aeabi_dsub>:
 8001a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a8a:	4657      	mov	r7, sl
 8001a8c:	464e      	mov	r6, r9
 8001a8e:	4645      	mov	r5, r8
 8001a90:	46de      	mov	lr, fp
 8001a92:	0004      	movs	r4, r0
 8001a94:	b5e0      	push	{r5, r6, r7, lr}
 8001a96:	001f      	movs	r7, r3
 8001a98:	0010      	movs	r0, r2
 8001a9a:	030b      	lsls	r3, r1, #12
 8001a9c:	0f62      	lsrs	r2, r4, #29
 8001a9e:	004e      	lsls	r6, r1, #1
 8001aa0:	0fcd      	lsrs	r5, r1, #31
 8001aa2:	0a5b      	lsrs	r3, r3, #9
 8001aa4:	0339      	lsls	r1, r7, #12
 8001aa6:	4313      	orrs	r3, r2
 8001aa8:	0a49      	lsrs	r1, r1, #9
 8001aaa:	00e2      	lsls	r2, r4, #3
 8001aac:	0f44      	lsrs	r4, r0, #29
 8001aae:	4321      	orrs	r1, r4
 8001ab0:	4cc2      	ldr	r4, [pc, #776]	; (8001dbc <__aeabi_dsub+0x334>)
 8001ab2:	4691      	mov	r9, r2
 8001ab4:	4692      	mov	sl, r2
 8001ab6:	00c0      	lsls	r0, r0, #3
 8001ab8:	007a      	lsls	r2, r7, #1
 8001aba:	4680      	mov	r8, r0
 8001abc:	0d76      	lsrs	r6, r6, #21
 8001abe:	0d52      	lsrs	r2, r2, #21
 8001ac0:	0fff      	lsrs	r7, r7, #31
 8001ac2:	42a2      	cmp	r2, r4
 8001ac4:	d100      	bne.n	8001ac8 <__aeabi_dsub+0x40>
 8001ac6:	e0b4      	b.n	8001c32 <__aeabi_dsub+0x1aa>
 8001ac8:	2401      	movs	r4, #1
 8001aca:	4067      	eors	r7, r4
 8001acc:	46bb      	mov	fp, r7
 8001ace:	42bd      	cmp	r5, r7
 8001ad0:	d100      	bne.n	8001ad4 <__aeabi_dsub+0x4c>
 8001ad2:	e088      	b.n	8001be6 <__aeabi_dsub+0x15e>
 8001ad4:	1ab4      	subs	r4, r6, r2
 8001ad6:	46a4      	mov	ip, r4
 8001ad8:	2c00      	cmp	r4, #0
 8001ada:	dc00      	bgt.n	8001ade <__aeabi_dsub+0x56>
 8001adc:	e0b2      	b.n	8001c44 <__aeabi_dsub+0x1bc>
 8001ade:	2a00      	cmp	r2, #0
 8001ae0:	d100      	bne.n	8001ae4 <__aeabi_dsub+0x5c>
 8001ae2:	e0c5      	b.n	8001c70 <__aeabi_dsub+0x1e8>
 8001ae4:	4ab5      	ldr	r2, [pc, #724]	; (8001dbc <__aeabi_dsub+0x334>)
 8001ae6:	4296      	cmp	r6, r2
 8001ae8:	d100      	bne.n	8001aec <__aeabi_dsub+0x64>
 8001aea:	e28b      	b.n	8002004 <__aeabi_dsub+0x57c>
 8001aec:	2280      	movs	r2, #128	; 0x80
 8001aee:	0412      	lsls	r2, r2, #16
 8001af0:	4311      	orrs	r1, r2
 8001af2:	4662      	mov	r2, ip
 8001af4:	2a38      	cmp	r2, #56	; 0x38
 8001af6:	dd00      	ble.n	8001afa <__aeabi_dsub+0x72>
 8001af8:	e1a1      	b.n	8001e3e <__aeabi_dsub+0x3b6>
 8001afa:	2a1f      	cmp	r2, #31
 8001afc:	dd00      	ble.n	8001b00 <__aeabi_dsub+0x78>
 8001afe:	e216      	b.n	8001f2e <__aeabi_dsub+0x4a6>
 8001b00:	2720      	movs	r7, #32
 8001b02:	000c      	movs	r4, r1
 8001b04:	1abf      	subs	r7, r7, r2
 8001b06:	40bc      	lsls	r4, r7
 8001b08:	0002      	movs	r2, r0
 8001b0a:	46a0      	mov	r8, r4
 8001b0c:	4664      	mov	r4, ip
 8001b0e:	40b8      	lsls	r0, r7
 8001b10:	40e2      	lsrs	r2, r4
 8001b12:	4644      	mov	r4, r8
 8001b14:	4314      	orrs	r4, r2
 8001b16:	0002      	movs	r2, r0
 8001b18:	1e50      	subs	r0, r2, #1
 8001b1a:	4182      	sbcs	r2, r0
 8001b1c:	4660      	mov	r0, ip
 8001b1e:	40c1      	lsrs	r1, r0
 8001b20:	4322      	orrs	r2, r4
 8001b22:	1a5b      	subs	r3, r3, r1
 8001b24:	4649      	mov	r1, r9
 8001b26:	1a8c      	subs	r4, r1, r2
 8001b28:	45a1      	cmp	r9, r4
 8001b2a:	4192      	sbcs	r2, r2
 8001b2c:	4252      	negs	r2, r2
 8001b2e:	1a9b      	subs	r3, r3, r2
 8001b30:	4698      	mov	r8, r3
 8001b32:	4643      	mov	r3, r8
 8001b34:	021b      	lsls	r3, r3, #8
 8001b36:	d400      	bmi.n	8001b3a <__aeabi_dsub+0xb2>
 8001b38:	e117      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8001b3a:	4643      	mov	r3, r8
 8001b3c:	025b      	lsls	r3, r3, #9
 8001b3e:	0a5b      	lsrs	r3, r3, #9
 8001b40:	4698      	mov	r8, r3
 8001b42:	4643      	mov	r3, r8
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d100      	bne.n	8001b4a <__aeabi_dsub+0xc2>
 8001b48:	e16c      	b.n	8001e24 <__aeabi_dsub+0x39c>
 8001b4a:	4640      	mov	r0, r8
 8001b4c:	f000 fbd8 	bl	8002300 <__clzsi2>
 8001b50:	0002      	movs	r2, r0
 8001b52:	3a08      	subs	r2, #8
 8001b54:	2120      	movs	r1, #32
 8001b56:	0020      	movs	r0, r4
 8001b58:	4643      	mov	r3, r8
 8001b5a:	1a89      	subs	r1, r1, r2
 8001b5c:	4093      	lsls	r3, r2
 8001b5e:	40c8      	lsrs	r0, r1
 8001b60:	4094      	lsls	r4, r2
 8001b62:	4303      	orrs	r3, r0
 8001b64:	4296      	cmp	r6, r2
 8001b66:	dd00      	ble.n	8001b6a <__aeabi_dsub+0xe2>
 8001b68:	e157      	b.n	8001e1a <__aeabi_dsub+0x392>
 8001b6a:	1b96      	subs	r6, r2, r6
 8001b6c:	1c71      	adds	r1, r6, #1
 8001b6e:	291f      	cmp	r1, #31
 8001b70:	dd00      	ble.n	8001b74 <__aeabi_dsub+0xec>
 8001b72:	e1cb      	b.n	8001f0c <__aeabi_dsub+0x484>
 8001b74:	2220      	movs	r2, #32
 8001b76:	0018      	movs	r0, r3
 8001b78:	0026      	movs	r6, r4
 8001b7a:	1a52      	subs	r2, r2, r1
 8001b7c:	4094      	lsls	r4, r2
 8001b7e:	4090      	lsls	r0, r2
 8001b80:	40ce      	lsrs	r6, r1
 8001b82:	40cb      	lsrs	r3, r1
 8001b84:	1e62      	subs	r2, r4, #1
 8001b86:	4194      	sbcs	r4, r2
 8001b88:	4330      	orrs	r0, r6
 8001b8a:	4698      	mov	r8, r3
 8001b8c:	2600      	movs	r6, #0
 8001b8e:	4304      	orrs	r4, r0
 8001b90:	0763      	lsls	r3, r4, #29
 8001b92:	d009      	beq.n	8001ba8 <__aeabi_dsub+0x120>
 8001b94:	230f      	movs	r3, #15
 8001b96:	4023      	ands	r3, r4
 8001b98:	2b04      	cmp	r3, #4
 8001b9a:	d005      	beq.n	8001ba8 <__aeabi_dsub+0x120>
 8001b9c:	1d23      	adds	r3, r4, #4
 8001b9e:	42a3      	cmp	r3, r4
 8001ba0:	41a4      	sbcs	r4, r4
 8001ba2:	4264      	negs	r4, r4
 8001ba4:	44a0      	add	r8, r4
 8001ba6:	001c      	movs	r4, r3
 8001ba8:	4643      	mov	r3, r8
 8001baa:	021b      	lsls	r3, r3, #8
 8001bac:	d400      	bmi.n	8001bb0 <__aeabi_dsub+0x128>
 8001bae:	e0df      	b.n	8001d70 <__aeabi_dsub+0x2e8>
 8001bb0:	4b82      	ldr	r3, [pc, #520]	; (8001dbc <__aeabi_dsub+0x334>)
 8001bb2:	3601      	adds	r6, #1
 8001bb4:	429e      	cmp	r6, r3
 8001bb6:	d100      	bne.n	8001bba <__aeabi_dsub+0x132>
 8001bb8:	e0fb      	b.n	8001db2 <__aeabi_dsub+0x32a>
 8001bba:	4642      	mov	r2, r8
 8001bbc:	4b80      	ldr	r3, [pc, #512]	; (8001dc0 <__aeabi_dsub+0x338>)
 8001bbe:	08e4      	lsrs	r4, r4, #3
 8001bc0:	401a      	ands	r2, r3
 8001bc2:	0013      	movs	r3, r2
 8001bc4:	0571      	lsls	r1, r6, #21
 8001bc6:	0752      	lsls	r2, r2, #29
 8001bc8:	025b      	lsls	r3, r3, #9
 8001bca:	4322      	orrs	r2, r4
 8001bcc:	0b1b      	lsrs	r3, r3, #12
 8001bce:	0d49      	lsrs	r1, r1, #21
 8001bd0:	0509      	lsls	r1, r1, #20
 8001bd2:	07ed      	lsls	r5, r5, #31
 8001bd4:	4319      	orrs	r1, r3
 8001bd6:	4329      	orrs	r1, r5
 8001bd8:	0010      	movs	r0, r2
 8001bda:	bcf0      	pop	{r4, r5, r6, r7}
 8001bdc:	46bb      	mov	fp, r7
 8001bde:	46b2      	mov	sl, r6
 8001be0:	46a9      	mov	r9, r5
 8001be2:	46a0      	mov	r8, r4
 8001be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001be6:	1ab4      	subs	r4, r6, r2
 8001be8:	46a4      	mov	ip, r4
 8001bea:	2c00      	cmp	r4, #0
 8001bec:	dd58      	ble.n	8001ca0 <__aeabi_dsub+0x218>
 8001bee:	2a00      	cmp	r2, #0
 8001bf0:	d100      	bne.n	8001bf4 <__aeabi_dsub+0x16c>
 8001bf2:	e09e      	b.n	8001d32 <__aeabi_dsub+0x2aa>
 8001bf4:	4a71      	ldr	r2, [pc, #452]	; (8001dbc <__aeabi_dsub+0x334>)
 8001bf6:	4296      	cmp	r6, r2
 8001bf8:	d100      	bne.n	8001bfc <__aeabi_dsub+0x174>
 8001bfa:	e13b      	b.n	8001e74 <__aeabi_dsub+0x3ec>
 8001bfc:	2280      	movs	r2, #128	; 0x80
 8001bfe:	0412      	lsls	r2, r2, #16
 8001c00:	4311      	orrs	r1, r2
 8001c02:	4662      	mov	r2, ip
 8001c04:	2a38      	cmp	r2, #56	; 0x38
 8001c06:	dd00      	ble.n	8001c0a <__aeabi_dsub+0x182>
 8001c08:	e0c1      	b.n	8001d8e <__aeabi_dsub+0x306>
 8001c0a:	2a1f      	cmp	r2, #31
 8001c0c:	dc00      	bgt.n	8001c10 <__aeabi_dsub+0x188>
 8001c0e:	e1bb      	b.n	8001f88 <__aeabi_dsub+0x500>
 8001c10:	000c      	movs	r4, r1
 8001c12:	3a20      	subs	r2, #32
 8001c14:	40d4      	lsrs	r4, r2
 8001c16:	0022      	movs	r2, r4
 8001c18:	4664      	mov	r4, ip
 8001c1a:	2c20      	cmp	r4, #32
 8001c1c:	d004      	beq.n	8001c28 <__aeabi_dsub+0x1a0>
 8001c1e:	2740      	movs	r7, #64	; 0x40
 8001c20:	1b3f      	subs	r7, r7, r4
 8001c22:	40b9      	lsls	r1, r7
 8001c24:	4308      	orrs	r0, r1
 8001c26:	4680      	mov	r8, r0
 8001c28:	4644      	mov	r4, r8
 8001c2a:	1e61      	subs	r1, r4, #1
 8001c2c:	418c      	sbcs	r4, r1
 8001c2e:	4314      	orrs	r4, r2
 8001c30:	e0b1      	b.n	8001d96 <__aeabi_dsub+0x30e>
 8001c32:	000c      	movs	r4, r1
 8001c34:	4304      	orrs	r4, r0
 8001c36:	d02a      	beq.n	8001c8e <__aeabi_dsub+0x206>
 8001c38:	46bb      	mov	fp, r7
 8001c3a:	42bd      	cmp	r5, r7
 8001c3c:	d02d      	beq.n	8001c9a <__aeabi_dsub+0x212>
 8001c3e:	4c61      	ldr	r4, [pc, #388]	; (8001dc4 <__aeabi_dsub+0x33c>)
 8001c40:	46a4      	mov	ip, r4
 8001c42:	44b4      	add	ip, r6
 8001c44:	4664      	mov	r4, ip
 8001c46:	2c00      	cmp	r4, #0
 8001c48:	d05c      	beq.n	8001d04 <__aeabi_dsub+0x27c>
 8001c4a:	1b94      	subs	r4, r2, r6
 8001c4c:	46a4      	mov	ip, r4
 8001c4e:	2e00      	cmp	r6, #0
 8001c50:	d000      	beq.n	8001c54 <__aeabi_dsub+0x1cc>
 8001c52:	e115      	b.n	8001e80 <__aeabi_dsub+0x3f8>
 8001c54:	464d      	mov	r5, r9
 8001c56:	431d      	orrs	r5, r3
 8001c58:	d100      	bne.n	8001c5c <__aeabi_dsub+0x1d4>
 8001c5a:	e1c3      	b.n	8001fe4 <__aeabi_dsub+0x55c>
 8001c5c:	1e65      	subs	r5, r4, #1
 8001c5e:	2c01      	cmp	r4, #1
 8001c60:	d100      	bne.n	8001c64 <__aeabi_dsub+0x1dc>
 8001c62:	e20c      	b.n	800207e <__aeabi_dsub+0x5f6>
 8001c64:	4e55      	ldr	r6, [pc, #340]	; (8001dbc <__aeabi_dsub+0x334>)
 8001c66:	42b4      	cmp	r4, r6
 8001c68:	d100      	bne.n	8001c6c <__aeabi_dsub+0x1e4>
 8001c6a:	e1f8      	b.n	800205e <__aeabi_dsub+0x5d6>
 8001c6c:	46ac      	mov	ip, r5
 8001c6e:	e10e      	b.n	8001e8e <__aeabi_dsub+0x406>
 8001c70:	000a      	movs	r2, r1
 8001c72:	4302      	orrs	r2, r0
 8001c74:	d100      	bne.n	8001c78 <__aeabi_dsub+0x1f0>
 8001c76:	e136      	b.n	8001ee6 <__aeabi_dsub+0x45e>
 8001c78:	0022      	movs	r2, r4
 8001c7a:	3a01      	subs	r2, #1
 8001c7c:	2c01      	cmp	r4, #1
 8001c7e:	d100      	bne.n	8001c82 <__aeabi_dsub+0x1fa>
 8001c80:	e1c6      	b.n	8002010 <__aeabi_dsub+0x588>
 8001c82:	4c4e      	ldr	r4, [pc, #312]	; (8001dbc <__aeabi_dsub+0x334>)
 8001c84:	45a4      	cmp	ip, r4
 8001c86:	d100      	bne.n	8001c8a <__aeabi_dsub+0x202>
 8001c88:	e0f4      	b.n	8001e74 <__aeabi_dsub+0x3ec>
 8001c8a:	4694      	mov	ip, r2
 8001c8c:	e731      	b.n	8001af2 <__aeabi_dsub+0x6a>
 8001c8e:	2401      	movs	r4, #1
 8001c90:	4067      	eors	r7, r4
 8001c92:	46bb      	mov	fp, r7
 8001c94:	42bd      	cmp	r5, r7
 8001c96:	d000      	beq.n	8001c9a <__aeabi_dsub+0x212>
 8001c98:	e71c      	b.n	8001ad4 <__aeabi_dsub+0x4c>
 8001c9a:	4c4a      	ldr	r4, [pc, #296]	; (8001dc4 <__aeabi_dsub+0x33c>)
 8001c9c:	46a4      	mov	ip, r4
 8001c9e:	44b4      	add	ip, r6
 8001ca0:	4664      	mov	r4, ip
 8001ca2:	2c00      	cmp	r4, #0
 8001ca4:	d100      	bne.n	8001ca8 <__aeabi_dsub+0x220>
 8001ca6:	e0cf      	b.n	8001e48 <__aeabi_dsub+0x3c0>
 8001ca8:	1b94      	subs	r4, r2, r6
 8001caa:	46a4      	mov	ip, r4
 8001cac:	2e00      	cmp	r6, #0
 8001cae:	d100      	bne.n	8001cb2 <__aeabi_dsub+0x22a>
 8001cb0:	e15c      	b.n	8001f6c <__aeabi_dsub+0x4e4>
 8001cb2:	4e42      	ldr	r6, [pc, #264]	; (8001dbc <__aeabi_dsub+0x334>)
 8001cb4:	42b2      	cmp	r2, r6
 8001cb6:	d100      	bne.n	8001cba <__aeabi_dsub+0x232>
 8001cb8:	e1ec      	b.n	8002094 <__aeabi_dsub+0x60c>
 8001cba:	2680      	movs	r6, #128	; 0x80
 8001cbc:	0436      	lsls	r6, r6, #16
 8001cbe:	4333      	orrs	r3, r6
 8001cc0:	4664      	mov	r4, ip
 8001cc2:	2c38      	cmp	r4, #56	; 0x38
 8001cc4:	dd00      	ble.n	8001cc8 <__aeabi_dsub+0x240>
 8001cc6:	e1b3      	b.n	8002030 <__aeabi_dsub+0x5a8>
 8001cc8:	2c1f      	cmp	r4, #31
 8001cca:	dd00      	ble.n	8001cce <__aeabi_dsub+0x246>
 8001ccc:	e238      	b.n	8002140 <__aeabi_dsub+0x6b8>
 8001cce:	2620      	movs	r6, #32
 8001cd0:	1b36      	subs	r6, r6, r4
 8001cd2:	001c      	movs	r4, r3
 8001cd4:	40b4      	lsls	r4, r6
 8001cd6:	464f      	mov	r7, r9
 8001cd8:	46a0      	mov	r8, r4
 8001cda:	4664      	mov	r4, ip
 8001cdc:	40e7      	lsrs	r7, r4
 8001cde:	4644      	mov	r4, r8
 8001ce0:	433c      	orrs	r4, r7
 8001ce2:	464f      	mov	r7, r9
 8001ce4:	40b7      	lsls	r7, r6
 8001ce6:	003e      	movs	r6, r7
 8001ce8:	1e77      	subs	r7, r6, #1
 8001cea:	41be      	sbcs	r6, r7
 8001cec:	4334      	orrs	r4, r6
 8001cee:	4666      	mov	r6, ip
 8001cf0:	40f3      	lsrs	r3, r6
 8001cf2:	18c9      	adds	r1, r1, r3
 8001cf4:	1824      	adds	r4, r4, r0
 8001cf6:	4284      	cmp	r4, r0
 8001cf8:	419b      	sbcs	r3, r3
 8001cfa:	425b      	negs	r3, r3
 8001cfc:	4698      	mov	r8, r3
 8001cfe:	0016      	movs	r6, r2
 8001d00:	4488      	add	r8, r1
 8001d02:	e04e      	b.n	8001da2 <__aeabi_dsub+0x31a>
 8001d04:	4a30      	ldr	r2, [pc, #192]	; (8001dc8 <__aeabi_dsub+0x340>)
 8001d06:	1c74      	adds	r4, r6, #1
 8001d08:	4214      	tst	r4, r2
 8001d0a:	d000      	beq.n	8001d0e <__aeabi_dsub+0x286>
 8001d0c:	e0d6      	b.n	8001ebc <__aeabi_dsub+0x434>
 8001d0e:	464a      	mov	r2, r9
 8001d10:	431a      	orrs	r2, r3
 8001d12:	2e00      	cmp	r6, #0
 8001d14:	d000      	beq.n	8001d18 <__aeabi_dsub+0x290>
 8001d16:	e15b      	b.n	8001fd0 <__aeabi_dsub+0x548>
 8001d18:	2a00      	cmp	r2, #0
 8001d1a:	d100      	bne.n	8001d1e <__aeabi_dsub+0x296>
 8001d1c:	e1a5      	b.n	800206a <__aeabi_dsub+0x5e2>
 8001d1e:	000a      	movs	r2, r1
 8001d20:	4302      	orrs	r2, r0
 8001d22:	d000      	beq.n	8001d26 <__aeabi_dsub+0x29e>
 8001d24:	e1bb      	b.n	800209e <__aeabi_dsub+0x616>
 8001d26:	464a      	mov	r2, r9
 8001d28:	0759      	lsls	r1, r3, #29
 8001d2a:	08d2      	lsrs	r2, r2, #3
 8001d2c:	430a      	orrs	r2, r1
 8001d2e:	08db      	lsrs	r3, r3, #3
 8001d30:	e027      	b.n	8001d82 <__aeabi_dsub+0x2fa>
 8001d32:	000a      	movs	r2, r1
 8001d34:	4302      	orrs	r2, r0
 8001d36:	d100      	bne.n	8001d3a <__aeabi_dsub+0x2b2>
 8001d38:	e174      	b.n	8002024 <__aeabi_dsub+0x59c>
 8001d3a:	0022      	movs	r2, r4
 8001d3c:	3a01      	subs	r2, #1
 8001d3e:	2c01      	cmp	r4, #1
 8001d40:	d005      	beq.n	8001d4e <__aeabi_dsub+0x2c6>
 8001d42:	4c1e      	ldr	r4, [pc, #120]	; (8001dbc <__aeabi_dsub+0x334>)
 8001d44:	45a4      	cmp	ip, r4
 8001d46:	d100      	bne.n	8001d4a <__aeabi_dsub+0x2c2>
 8001d48:	e094      	b.n	8001e74 <__aeabi_dsub+0x3ec>
 8001d4a:	4694      	mov	ip, r2
 8001d4c:	e759      	b.n	8001c02 <__aeabi_dsub+0x17a>
 8001d4e:	4448      	add	r0, r9
 8001d50:	4548      	cmp	r0, r9
 8001d52:	4192      	sbcs	r2, r2
 8001d54:	185b      	adds	r3, r3, r1
 8001d56:	4698      	mov	r8, r3
 8001d58:	0004      	movs	r4, r0
 8001d5a:	4252      	negs	r2, r2
 8001d5c:	4490      	add	r8, r2
 8001d5e:	4643      	mov	r3, r8
 8001d60:	2602      	movs	r6, #2
 8001d62:	021b      	lsls	r3, r3, #8
 8001d64:	d500      	bpl.n	8001d68 <__aeabi_dsub+0x2e0>
 8001d66:	e0c4      	b.n	8001ef2 <__aeabi_dsub+0x46a>
 8001d68:	3e01      	subs	r6, #1
 8001d6a:	0763      	lsls	r3, r4, #29
 8001d6c:	d000      	beq.n	8001d70 <__aeabi_dsub+0x2e8>
 8001d6e:	e711      	b.n	8001b94 <__aeabi_dsub+0x10c>
 8001d70:	4643      	mov	r3, r8
 8001d72:	46b4      	mov	ip, r6
 8001d74:	0759      	lsls	r1, r3, #29
 8001d76:	08e2      	lsrs	r2, r4, #3
 8001d78:	430a      	orrs	r2, r1
 8001d7a:	08db      	lsrs	r3, r3, #3
 8001d7c:	490f      	ldr	r1, [pc, #60]	; (8001dbc <__aeabi_dsub+0x334>)
 8001d7e:	458c      	cmp	ip, r1
 8001d80:	d040      	beq.n	8001e04 <__aeabi_dsub+0x37c>
 8001d82:	4661      	mov	r1, ip
 8001d84:	031b      	lsls	r3, r3, #12
 8001d86:	0549      	lsls	r1, r1, #21
 8001d88:	0b1b      	lsrs	r3, r3, #12
 8001d8a:	0d49      	lsrs	r1, r1, #21
 8001d8c:	e720      	b.n	8001bd0 <__aeabi_dsub+0x148>
 8001d8e:	4301      	orrs	r1, r0
 8001d90:	000c      	movs	r4, r1
 8001d92:	1e61      	subs	r1, r4, #1
 8001d94:	418c      	sbcs	r4, r1
 8001d96:	444c      	add	r4, r9
 8001d98:	454c      	cmp	r4, r9
 8001d9a:	4192      	sbcs	r2, r2
 8001d9c:	4252      	negs	r2, r2
 8001d9e:	4690      	mov	r8, r2
 8001da0:	4498      	add	r8, r3
 8001da2:	4643      	mov	r3, r8
 8001da4:	021b      	lsls	r3, r3, #8
 8001da6:	d5e0      	bpl.n	8001d6a <__aeabi_dsub+0x2e2>
 8001da8:	4b04      	ldr	r3, [pc, #16]	; (8001dbc <__aeabi_dsub+0x334>)
 8001daa:	3601      	adds	r6, #1
 8001dac:	429e      	cmp	r6, r3
 8001dae:	d000      	beq.n	8001db2 <__aeabi_dsub+0x32a>
 8001db0:	e09f      	b.n	8001ef2 <__aeabi_dsub+0x46a>
 8001db2:	0031      	movs	r1, r6
 8001db4:	2300      	movs	r3, #0
 8001db6:	2200      	movs	r2, #0
 8001db8:	e70a      	b.n	8001bd0 <__aeabi_dsub+0x148>
 8001dba:	46c0      	nop			; (mov r8, r8)
 8001dbc:	000007ff 	.word	0x000007ff
 8001dc0:	ff7fffff 	.word	0xff7fffff
 8001dc4:	fffff801 	.word	0xfffff801
 8001dc8:	000007fe 	.word	0x000007fe
 8001dcc:	2a00      	cmp	r2, #0
 8001dce:	d100      	bne.n	8001dd2 <__aeabi_dsub+0x34a>
 8001dd0:	e160      	b.n	8002094 <__aeabi_dsub+0x60c>
 8001dd2:	000a      	movs	r2, r1
 8001dd4:	4302      	orrs	r2, r0
 8001dd6:	d04d      	beq.n	8001e74 <__aeabi_dsub+0x3ec>
 8001dd8:	464a      	mov	r2, r9
 8001dda:	075c      	lsls	r4, r3, #29
 8001ddc:	08d2      	lsrs	r2, r2, #3
 8001dde:	4322      	orrs	r2, r4
 8001de0:	2480      	movs	r4, #128	; 0x80
 8001de2:	08db      	lsrs	r3, r3, #3
 8001de4:	0324      	lsls	r4, r4, #12
 8001de6:	4223      	tst	r3, r4
 8001de8:	d007      	beq.n	8001dfa <__aeabi_dsub+0x372>
 8001dea:	08ce      	lsrs	r6, r1, #3
 8001dec:	4226      	tst	r6, r4
 8001dee:	d104      	bne.n	8001dfa <__aeabi_dsub+0x372>
 8001df0:	465d      	mov	r5, fp
 8001df2:	0033      	movs	r3, r6
 8001df4:	08c2      	lsrs	r2, r0, #3
 8001df6:	0749      	lsls	r1, r1, #29
 8001df8:	430a      	orrs	r2, r1
 8001dfa:	0f51      	lsrs	r1, r2, #29
 8001dfc:	00d2      	lsls	r2, r2, #3
 8001dfe:	08d2      	lsrs	r2, r2, #3
 8001e00:	0749      	lsls	r1, r1, #29
 8001e02:	430a      	orrs	r2, r1
 8001e04:	0011      	movs	r1, r2
 8001e06:	4319      	orrs	r1, r3
 8001e08:	d100      	bne.n	8001e0c <__aeabi_dsub+0x384>
 8001e0a:	e1c8      	b.n	800219e <__aeabi_dsub+0x716>
 8001e0c:	2180      	movs	r1, #128	; 0x80
 8001e0e:	0309      	lsls	r1, r1, #12
 8001e10:	430b      	orrs	r3, r1
 8001e12:	031b      	lsls	r3, r3, #12
 8001e14:	49d5      	ldr	r1, [pc, #852]	; (800216c <__aeabi_dsub+0x6e4>)
 8001e16:	0b1b      	lsrs	r3, r3, #12
 8001e18:	e6da      	b.n	8001bd0 <__aeabi_dsub+0x148>
 8001e1a:	49d5      	ldr	r1, [pc, #852]	; (8002170 <__aeabi_dsub+0x6e8>)
 8001e1c:	1ab6      	subs	r6, r6, r2
 8001e1e:	400b      	ands	r3, r1
 8001e20:	4698      	mov	r8, r3
 8001e22:	e6b5      	b.n	8001b90 <__aeabi_dsub+0x108>
 8001e24:	0020      	movs	r0, r4
 8001e26:	f000 fa6b 	bl	8002300 <__clzsi2>
 8001e2a:	0002      	movs	r2, r0
 8001e2c:	3218      	adds	r2, #24
 8001e2e:	2a1f      	cmp	r2, #31
 8001e30:	dc00      	bgt.n	8001e34 <__aeabi_dsub+0x3ac>
 8001e32:	e68f      	b.n	8001b54 <__aeabi_dsub+0xcc>
 8001e34:	0023      	movs	r3, r4
 8001e36:	3808      	subs	r0, #8
 8001e38:	4083      	lsls	r3, r0
 8001e3a:	2400      	movs	r4, #0
 8001e3c:	e692      	b.n	8001b64 <__aeabi_dsub+0xdc>
 8001e3e:	4308      	orrs	r0, r1
 8001e40:	0002      	movs	r2, r0
 8001e42:	1e50      	subs	r0, r2, #1
 8001e44:	4182      	sbcs	r2, r0
 8001e46:	e66d      	b.n	8001b24 <__aeabi_dsub+0x9c>
 8001e48:	4cca      	ldr	r4, [pc, #808]	; (8002174 <__aeabi_dsub+0x6ec>)
 8001e4a:	1c72      	adds	r2, r6, #1
 8001e4c:	4222      	tst	r2, r4
 8001e4e:	d000      	beq.n	8001e52 <__aeabi_dsub+0x3ca>
 8001e50:	e0ad      	b.n	8001fae <__aeabi_dsub+0x526>
 8001e52:	464a      	mov	r2, r9
 8001e54:	431a      	orrs	r2, r3
 8001e56:	2e00      	cmp	r6, #0
 8001e58:	d1b8      	bne.n	8001dcc <__aeabi_dsub+0x344>
 8001e5a:	2a00      	cmp	r2, #0
 8001e5c:	d100      	bne.n	8001e60 <__aeabi_dsub+0x3d8>
 8001e5e:	e158      	b.n	8002112 <__aeabi_dsub+0x68a>
 8001e60:	000a      	movs	r2, r1
 8001e62:	4302      	orrs	r2, r0
 8001e64:	d000      	beq.n	8001e68 <__aeabi_dsub+0x3e0>
 8001e66:	e159      	b.n	800211c <__aeabi_dsub+0x694>
 8001e68:	464a      	mov	r2, r9
 8001e6a:	0759      	lsls	r1, r3, #29
 8001e6c:	08d2      	lsrs	r2, r2, #3
 8001e6e:	430a      	orrs	r2, r1
 8001e70:	08db      	lsrs	r3, r3, #3
 8001e72:	e786      	b.n	8001d82 <__aeabi_dsub+0x2fa>
 8001e74:	464a      	mov	r2, r9
 8001e76:	0759      	lsls	r1, r3, #29
 8001e78:	08d2      	lsrs	r2, r2, #3
 8001e7a:	430a      	orrs	r2, r1
 8001e7c:	08db      	lsrs	r3, r3, #3
 8001e7e:	e7c1      	b.n	8001e04 <__aeabi_dsub+0x37c>
 8001e80:	4dba      	ldr	r5, [pc, #744]	; (800216c <__aeabi_dsub+0x6e4>)
 8001e82:	42aa      	cmp	r2, r5
 8001e84:	d100      	bne.n	8001e88 <__aeabi_dsub+0x400>
 8001e86:	e11e      	b.n	80020c6 <__aeabi_dsub+0x63e>
 8001e88:	2580      	movs	r5, #128	; 0x80
 8001e8a:	042d      	lsls	r5, r5, #16
 8001e8c:	432b      	orrs	r3, r5
 8001e8e:	4664      	mov	r4, ip
 8001e90:	2c38      	cmp	r4, #56	; 0x38
 8001e92:	dc5d      	bgt.n	8001f50 <__aeabi_dsub+0x4c8>
 8001e94:	2c1f      	cmp	r4, #31
 8001e96:	dd00      	ble.n	8001e9a <__aeabi_dsub+0x412>
 8001e98:	e0d0      	b.n	800203c <__aeabi_dsub+0x5b4>
 8001e9a:	2520      	movs	r5, #32
 8001e9c:	4667      	mov	r7, ip
 8001e9e:	1b2d      	subs	r5, r5, r4
 8001ea0:	464e      	mov	r6, r9
 8001ea2:	001c      	movs	r4, r3
 8001ea4:	40fe      	lsrs	r6, r7
 8001ea6:	40ac      	lsls	r4, r5
 8001ea8:	4334      	orrs	r4, r6
 8001eaa:	464e      	mov	r6, r9
 8001eac:	40ae      	lsls	r6, r5
 8001eae:	0035      	movs	r5, r6
 8001eb0:	40fb      	lsrs	r3, r7
 8001eb2:	1e6e      	subs	r6, r5, #1
 8001eb4:	41b5      	sbcs	r5, r6
 8001eb6:	1ac9      	subs	r1, r1, r3
 8001eb8:	432c      	orrs	r4, r5
 8001eba:	e04e      	b.n	8001f5a <__aeabi_dsub+0x4d2>
 8001ebc:	464a      	mov	r2, r9
 8001ebe:	1a14      	subs	r4, r2, r0
 8001ec0:	45a1      	cmp	r9, r4
 8001ec2:	4192      	sbcs	r2, r2
 8001ec4:	4252      	negs	r2, r2
 8001ec6:	4690      	mov	r8, r2
 8001ec8:	1a5f      	subs	r7, r3, r1
 8001eca:	003a      	movs	r2, r7
 8001ecc:	4647      	mov	r7, r8
 8001ece:	1bd2      	subs	r2, r2, r7
 8001ed0:	4690      	mov	r8, r2
 8001ed2:	0212      	lsls	r2, r2, #8
 8001ed4:	d500      	bpl.n	8001ed8 <__aeabi_dsub+0x450>
 8001ed6:	e08b      	b.n	8001ff0 <__aeabi_dsub+0x568>
 8001ed8:	4642      	mov	r2, r8
 8001eda:	4322      	orrs	r2, r4
 8001edc:	d000      	beq.n	8001ee0 <__aeabi_dsub+0x458>
 8001ede:	e630      	b.n	8001b42 <__aeabi_dsub+0xba>
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	2500      	movs	r5, #0
 8001ee4:	e74d      	b.n	8001d82 <__aeabi_dsub+0x2fa>
 8001ee6:	464a      	mov	r2, r9
 8001ee8:	0759      	lsls	r1, r3, #29
 8001eea:	08d2      	lsrs	r2, r2, #3
 8001eec:	430a      	orrs	r2, r1
 8001eee:	08db      	lsrs	r3, r3, #3
 8001ef0:	e744      	b.n	8001d7c <__aeabi_dsub+0x2f4>
 8001ef2:	4642      	mov	r2, r8
 8001ef4:	4b9e      	ldr	r3, [pc, #632]	; (8002170 <__aeabi_dsub+0x6e8>)
 8001ef6:	0861      	lsrs	r1, r4, #1
 8001ef8:	401a      	ands	r2, r3
 8001efa:	0013      	movs	r3, r2
 8001efc:	2201      	movs	r2, #1
 8001efe:	4014      	ands	r4, r2
 8001f00:	430c      	orrs	r4, r1
 8001f02:	07da      	lsls	r2, r3, #31
 8001f04:	085b      	lsrs	r3, r3, #1
 8001f06:	4698      	mov	r8, r3
 8001f08:	4314      	orrs	r4, r2
 8001f0a:	e641      	b.n	8001b90 <__aeabi_dsub+0x108>
 8001f0c:	001a      	movs	r2, r3
 8001f0e:	3e1f      	subs	r6, #31
 8001f10:	40f2      	lsrs	r2, r6
 8001f12:	0016      	movs	r6, r2
 8001f14:	2920      	cmp	r1, #32
 8001f16:	d003      	beq.n	8001f20 <__aeabi_dsub+0x498>
 8001f18:	2240      	movs	r2, #64	; 0x40
 8001f1a:	1a51      	subs	r1, r2, r1
 8001f1c:	408b      	lsls	r3, r1
 8001f1e:	431c      	orrs	r4, r3
 8001f20:	1e62      	subs	r2, r4, #1
 8001f22:	4194      	sbcs	r4, r2
 8001f24:	2300      	movs	r3, #0
 8001f26:	4334      	orrs	r4, r6
 8001f28:	4698      	mov	r8, r3
 8001f2a:	2600      	movs	r6, #0
 8001f2c:	e71d      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8001f2e:	000c      	movs	r4, r1
 8001f30:	3a20      	subs	r2, #32
 8001f32:	40d4      	lsrs	r4, r2
 8001f34:	0022      	movs	r2, r4
 8001f36:	4664      	mov	r4, ip
 8001f38:	2c20      	cmp	r4, #32
 8001f3a:	d004      	beq.n	8001f46 <__aeabi_dsub+0x4be>
 8001f3c:	2740      	movs	r7, #64	; 0x40
 8001f3e:	1b3f      	subs	r7, r7, r4
 8001f40:	40b9      	lsls	r1, r7
 8001f42:	4308      	orrs	r0, r1
 8001f44:	4680      	mov	r8, r0
 8001f46:	4644      	mov	r4, r8
 8001f48:	1e61      	subs	r1, r4, #1
 8001f4a:	418c      	sbcs	r4, r1
 8001f4c:	4322      	orrs	r2, r4
 8001f4e:	e5e9      	b.n	8001b24 <__aeabi_dsub+0x9c>
 8001f50:	464c      	mov	r4, r9
 8001f52:	4323      	orrs	r3, r4
 8001f54:	001c      	movs	r4, r3
 8001f56:	1e63      	subs	r3, r4, #1
 8001f58:	419c      	sbcs	r4, r3
 8001f5a:	1b04      	subs	r4, r0, r4
 8001f5c:	42a0      	cmp	r0, r4
 8001f5e:	419b      	sbcs	r3, r3
 8001f60:	425b      	negs	r3, r3
 8001f62:	1acb      	subs	r3, r1, r3
 8001f64:	4698      	mov	r8, r3
 8001f66:	465d      	mov	r5, fp
 8001f68:	0016      	movs	r6, r2
 8001f6a:	e5e2      	b.n	8001b32 <__aeabi_dsub+0xaa>
 8001f6c:	464e      	mov	r6, r9
 8001f6e:	431e      	orrs	r6, r3
 8001f70:	d100      	bne.n	8001f74 <__aeabi_dsub+0x4ec>
 8001f72:	e0ae      	b.n	80020d2 <__aeabi_dsub+0x64a>
 8001f74:	1e66      	subs	r6, r4, #1
 8001f76:	2c01      	cmp	r4, #1
 8001f78:	d100      	bne.n	8001f7c <__aeabi_dsub+0x4f4>
 8001f7a:	e0fd      	b.n	8002178 <__aeabi_dsub+0x6f0>
 8001f7c:	4f7b      	ldr	r7, [pc, #492]	; (800216c <__aeabi_dsub+0x6e4>)
 8001f7e:	42bc      	cmp	r4, r7
 8001f80:	d100      	bne.n	8001f84 <__aeabi_dsub+0x4fc>
 8001f82:	e107      	b.n	8002194 <__aeabi_dsub+0x70c>
 8001f84:	46b4      	mov	ip, r6
 8001f86:	e69b      	b.n	8001cc0 <__aeabi_dsub+0x238>
 8001f88:	4664      	mov	r4, ip
 8001f8a:	2220      	movs	r2, #32
 8001f8c:	1b12      	subs	r2, r2, r4
 8001f8e:	000c      	movs	r4, r1
 8001f90:	4094      	lsls	r4, r2
 8001f92:	0007      	movs	r7, r0
 8001f94:	4090      	lsls	r0, r2
 8001f96:	46a0      	mov	r8, r4
 8001f98:	4664      	mov	r4, ip
 8001f9a:	1e42      	subs	r2, r0, #1
 8001f9c:	4190      	sbcs	r0, r2
 8001f9e:	4662      	mov	r2, ip
 8001fa0:	40e7      	lsrs	r7, r4
 8001fa2:	4644      	mov	r4, r8
 8001fa4:	40d1      	lsrs	r1, r2
 8001fa6:	433c      	orrs	r4, r7
 8001fa8:	4304      	orrs	r4, r0
 8001faa:	185b      	adds	r3, r3, r1
 8001fac:	e6f3      	b.n	8001d96 <__aeabi_dsub+0x30e>
 8001fae:	4c6f      	ldr	r4, [pc, #444]	; (800216c <__aeabi_dsub+0x6e4>)
 8001fb0:	42a2      	cmp	r2, r4
 8001fb2:	d100      	bne.n	8001fb6 <__aeabi_dsub+0x52e>
 8001fb4:	e0d5      	b.n	8002162 <__aeabi_dsub+0x6da>
 8001fb6:	4448      	add	r0, r9
 8001fb8:	185b      	adds	r3, r3, r1
 8001fba:	4548      	cmp	r0, r9
 8001fbc:	4189      	sbcs	r1, r1
 8001fbe:	4249      	negs	r1, r1
 8001fc0:	185b      	adds	r3, r3, r1
 8001fc2:	07dc      	lsls	r4, r3, #31
 8001fc4:	0840      	lsrs	r0, r0, #1
 8001fc6:	085b      	lsrs	r3, r3, #1
 8001fc8:	4698      	mov	r8, r3
 8001fca:	0016      	movs	r6, r2
 8001fcc:	4304      	orrs	r4, r0
 8001fce:	e6cc      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8001fd0:	2a00      	cmp	r2, #0
 8001fd2:	d000      	beq.n	8001fd6 <__aeabi_dsub+0x54e>
 8001fd4:	e082      	b.n	80020dc <__aeabi_dsub+0x654>
 8001fd6:	000a      	movs	r2, r1
 8001fd8:	4302      	orrs	r2, r0
 8001fda:	d140      	bne.n	800205e <__aeabi_dsub+0x5d6>
 8001fdc:	2380      	movs	r3, #128	; 0x80
 8001fde:	2500      	movs	r5, #0
 8001fe0:	031b      	lsls	r3, r3, #12
 8001fe2:	e713      	b.n	8001e0c <__aeabi_dsub+0x384>
 8001fe4:	074b      	lsls	r3, r1, #29
 8001fe6:	08c2      	lsrs	r2, r0, #3
 8001fe8:	431a      	orrs	r2, r3
 8001fea:	465d      	mov	r5, fp
 8001fec:	08cb      	lsrs	r3, r1, #3
 8001fee:	e6c5      	b.n	8001d7c <__aeabi_dsub+0x2f4>
 8001ff0:	464a      	mov	r2, r9
 8001ff2:	1a84      	subs	r4, r0, r2
 8001ff4:	42a0      	cmp	r0, r4
 8001ff6:	4192      	sbcs	r2, r2
 8001ff8:	1acb      	subs	r3, r1, r3
 8001ffa:	4252      	negs	r2, r2
 8001ffc:	1a9b      	subs	r3, r3, r2
 8001ffe:	4698      	mov	r8, r3
 8002000:	465d      	mov	r5, fp
 8002002:	e59e      	b.n	8001b42 <__aeabi_dsub+0xba>
 8002004:	464a      	mov	r2, r9
 8002006:	0759      	lsls	r1, r3, #29
 8002008:	08d2      	lsrs	r2, r2, #3
 800200a:	430a      	orrs	r2, r1
 800200c:	08db      	lsrs	r3, r3, #3
 800200e:	e6f9      	b.n	8001e04 <__aeabi_dsub+0x37c>
 8002010:	464a      	mov	r2, r9
 8002012:	1a14      	subs	r4, r2, r0
 8002014:	45a1      	cmp	r9, r4
 8002016:	4192      	sbcs	r2, r2
 8002018:	1a5b      	subs	r3, r3, r1
 800201a:	4252      	negs	r2, r2
 800201c:	1a9b      	subs	r3, r3, r2
 800201e:	4698      	mov	r8, r3
 8002020:	2601      	movs	r6, #1
 8002022:	e586      	b.n	8001b32 <__aeabi_dsub+0xaa>
 8002024:	464a      	mov	r2, r9
 8002026:	0759      	lsls	r1, r3, #29
 8002028:	08d2      	lsrs	r2, r2, #3
 800202a:	430a      	orrs	r2, r1
 800202c:	08db      	lsrs	r3, r3, #3
 800202e:	e6a5      	b.n	8001d7c <__aeabi_dsub+0x2f4>
 8002030:	464c      	mov	r4, r9
 8002032:	4323      	orrs	r3, r4
 8002034:	001c      	movs	r4, r3
 8002036:	1e63      	subs	r3, r4, #1
 8002038:	419c      	sbcs	r4, r3
 800203a:	e65b      	b.n	8001cf4 <__aeabi_dsub+0x26c>
 800203c:	4665      	mov	r5, ip
 800203e:	001e      	movs	r6, r3
 8002040:	3d20      	subs	r5, #32
 8002042:	40ee      	lsrs	r6, r5
 8002044:	2c20      	cmp	r4, #32
 8002046:	d005      	beq.n	8002054 <__aeabi_dsub+0x5cc>
 8002048:	2540      	movs	r5, #64	; 0x40
 800204a:	1b2d      	subs	r5, r5, r4
 800204c:	40ab      	lsls	r3, r5
 800204e:	464c      	mov	r4, r9
 8002050:	431c      	orrs	r4, r3
 8002052:	46a2      	mov	sl, r4
 8002054:	4654      	mov	r4, sl
 8002056:	1e63      	subs	r3, r4, #1
 8002058:	419c      	sbcs	r4, r3
 800205a:	4334      	orrs	r4, r6
 800205c:	e77d      	b.n	8001f5a <__aeabi_dsub+0x4d2>
 800205e:	074b      	lsls	r3, r1, #29
 8002060:	08c2      	lsrs	r2, r0, #3
 8002062:	431a      	orrs	r2, r3
 8002064:	465d      	mov	r5, fp
 8002066:	08cb      	lsrs	r3, r1, #3
 8002068:	e6cc      	b.n	8001e04 <__aeabi_dsub+0x37c>
 800206a:	000a      	movs	r2, r1
 800206c:	4302      	orrs	r2, r0
 800206e:	d100      	bne.n	8002072 <__aeabi_dsub+0x5ea>
 8002070:	e736      	b.n	8001ee0 <__aeabi_dsub+0x458>
 8002072:	074b      	lsls	r3, r1, #29
 8002074:	08c2      	lsrs	r2, r0, #3
 8002076:	431a      	orrs	r2, r3
 8002078:	465d      	mov	r5, fp
 800207a:	08cb      	lsrs	r3, r1, #3
 800207c:	e681      	b.n	8001d82 <__aeabi_dsub+0x2fa>
 800207e:	464a      	mov	r2, r9
 8002080:	1a84      	subs	r4, r0, r2
 8002082:	42a0      	cmp	r0, r4
 8002084:	4192      	sbcs	r2, r2
 8002086:	1acb      	subs	r3, r1, r3
 8002088:	4252      	negs	r2, r2
 800208a:	1a9b      	subs	r3, r3, r2
 800208c:	4698      	mov	r8, r3
 800208e:	465d      	mov	r5, fp
 8002090:	2601      	movs	r6, #1
 8002092:	e54e      	b.n	8001b32 <__aeabi_dsub+0xaa>
 8002094:	074b      	lsls	r3, r1, #29
 8002096:	08c2      	lsrs	r2, r0, #3
 8002098:	431a      	orrs	r2, r3
 800209a:	08cb      	lsrs	r3, r1, #3
 800209c:	e6b2      	b.n	8001e04 <__aeabi_dsub+0x37c>
 800209e:	464a      	mov	r2, r9
 80020a0:	1a14      	subs	r4, r2, r0
 80020a2:	45a1      	cmp	r9, r4
 80020a4:	4192      	sbcs	r2, r2
 80020a6:	1a5f      	subs	r7, r3, r1
 80020a8:	4252      	negs	r2, r2
 80020aa:	1aba      	subs	r2, r7, r2
 80020ac:	4690      	mov	r8, r2
 80020ae:	0212      	lsls	r2, r2, #8
 80020b0:	d56b      	bpl.n	800218a <__aeabi_dsub+0x702>
 80020b2:	464a      	mov	r2, r9
 80020b4:	1a84      	subs	r4, r0, r2
 80020b6:	42a0      	cmp	r0, r4
 80020b8:	4192      	sbcs	r2, r2
 80020ba:	1acb      	subs	r3, r1, r3
 80020bc:	4252      	negs	r2, r2
 80020be:	1a9b      	subs	r3, r3, r2
 80020c0:	4698      	mov	r8, r3
 80020c2:	465d      	mov	r5, fp
 80020c4:	e564      	b.n	8001b90 <__aeabi_dsub+0x108>
 80020c6:	074b      	lsls	r3, r1, #29
 80020c8:	08c2      	lsrs	r2, r0, #3
 80020ca:	431a      	orrs	r2, r3
 80020cc:	465d      	mov	r5, fp
 80020ce:	08cb      	lsrs	r3, r1, #3
 80020d0:	e698      	b.n	8001e04 <__aeabi_dsub+0x37c>
 80020d2:	074b      	lsls	r3, r1, #29
 80020d4:	08c2      	lsrs	r2, r0, #3
 80020d6:	431a      	orrs	r2, r3
 80020d8:	08cb      	lsrs	r3, r1, #3
 80020da:	e64f      	b.n	8001d7c <__aeabi_dsub+0x2f4>
 80020dc:	000a      	movs	r2, r1
 80020de:	4302      	orrs	r2, r0
 80020e0:	d090      	beq.n	8002004 <__aeabi_dsub+0x57c>
 80020e2:	464a      	mov	r2, r9
 80020e4:	075c      	lsls	r4, r3, #29
 80020e6:	08d2      	lsrs	r2, r2, #3
 80020e8:	4314      	orrs	r4, r2
 80020ea:	2280      	movs	r2, #128	; 0x80
 80020ec:	08db      	lsrs	r3, r3, #3
 80020ee:	0312      	lsls	r2, r2, #12
 80020f0:	4213      	tst	r3, r2
 80020f2:	d008      	beq.n	8002106 <__aeabi_dsub+0x67e>
 80020f4:	08ce      	lsrs	r6, r1, #3
 80020f6:	4216      	tst	r6, r2
 80020f8:	d105      	bne.n	8002106 <__aeabi_dsub+0x67e>
 80020fa:	08c0      	lsrs	r0, r0, #3
 80020fc:	0749      	lsls	r1, r1, #29
 80020fe:	4308      	orrs	r0, r1
 8002100:	0004      	movs	r4, r0
 8002102:	465d      	mov	r5, fp
 8002104:	0033      	movs	r3, r6
 8002106:	0f61      	lsrs	r1, r4, #29
 8002108:	00e2      	lsls	r2, r4, #3
 800210a:	0749      	lsls	r1, r1, #29
 800210c:	08d2      	lsrs	r2, r2, #3
 800210e:	430a      	orrs	r2, r1
 8002110:	e678      	b.n	8001e04 <__aeabi_dsub+0x37c>
 8002112:	074b      	lsls	r3, r1, #29
 8002114:	08c2      	lsrs	r2, r0, #3
 8002116:	431a      	orrs	r2, r3
 8002118:	08cb      	lsrs	r3, r1, #3
 800211a:	e632      	b.n	8001d82 <__aeabi_dsub+0x2fa>
 800211c:	4448      	add	r0, r9
 800211e:	185b      	adds	r3, r3, r1
 8002120:	4548      	cmp	r0, r9
 8002122:	4192      	sbcs	r2, r2
 8002124:	4698      	mov	r8, r3
 8002126:	4252      	negs	r2, r2
 8002128:	4490      	add	r8, r2
 800212a:	4643      	mov	r3, r8
 800212c:	0004      	movs	r4, r0
 800212e:	021b      	lsls	r3, r3, #8
 8002130:	d400      	bmi.n	8002134 <__aeabi_dsub+0x6ac>
 8002132:	e61a      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8002134:	4642      	mov	r2, r8
 8002136:	4b0e      	ldr	r3, [pc, #56]	; (8002170 <__aeabi_dsub+0x6e8>)
 8002138:	2601      	movs	r6, #1
 800213a:	401a      	ands	r2, r3
 800213c:	4690      	mov	r8, r2
 800213e:	e614      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8002140:	4666      	mov	r6, ip
 8002142:	001f      	movs	r7, r3
 8002144:	3e20      	subs	r6, #32
 8002146:	40f7      	lsrs	r7, r6
 8002148:	2c20      	cmp	r4, #32
 800214a:	d005      	beq.n	8002158 <__aeabi_dsub+0x6d0>
 800214c:	2640      	movs	r6, #64	; 0x40
 800214e:	1b36      	subs	r6, r6, r4
 8002150:	40b3      	lsls	r3, r6
 8002152:	464c      	mov	r4, r9
 8002154:	431c      	orrs	r4, r3
 8002156:	46a2      	mov	sl, r4
 8002158:	4654      	mov	r4, sl
 800215a:	1e63      	subs	r3, r4, #1
 800215c:	419c      	sbcs	r4, r3
 800215e:	433c      	orrs	r4, r7
 8002160:	e5c8      	b.n	8001cf4 <__aeabi_dsub+0x26c>
 8002162:	0011      	movs	r1, r2
 8002164:	2300      	movs	r3, #0
 8002166:	2200      	movs	r2, #0
 8002168:	e532      	b.n	8001bd0 <__aeabi_dsub+0x148>
 800216a:	46c0      	nop			; (mov r8, r8)
 800216c:	000007ff 	.word	0x000007ff
 8002170:	ff7fffff 	.word	0xff7fffff
 8002174:	000007fe 	.word	0x000007fe
 8002178:	464a      	mov	r2, r9
 800217a:	1814      	adds	r4, r2, r0
 800217c:	4284      	cmp	r4, r0
 800217e:	4192      	sbcs	r2, r2
 8002180:	185b      	adds	r3, r3, r1
 8002182:	4698      	mov	r8, r3
 8002184:	4252      	negs	r2, r2
 8002186:	4490      	add	r8, r2
 8002188:	e5e9      	b.n	8001d5e <__aeabi_dsub+0x2d6>
 800218a:	4642      	mov	r2, r8
 800218c:	4322      	orrs	r2, r4
 800218e:	d100      	bne.n	8002192 <__aeabi_dsub+0x70a>
 8002190:	e6a6      	b.n	8001ee0 <__aeabi_dsub+0x458>
 8002192:	e5ea      	b.n	8001d6a <__aeabi_dsub+0x2e2>
 8002194:	074b      	lsls	r3, r1, #29
 8002196:	08c2      	lsrs	r2, r0, #3
 8002198:	431a      	orrs	r2, r3
 800219a:	08cb      	lsrs	r3, r1, #3
 800219c:	e632      	b.n	8001e04 <__aeabi_dsub+0x37c>
 800219e:	2200      	movs	r2, #0
 80021a0:	4901      	ldr	r1, [pc, #4]	; (80021a8 <__aeabi_dsub+0x720>)
 80021a2:	0013      	movs	r3, r2
 80021a4:	e514      	b.n	8001bd0 <__aeabi_dsub+0x148>
 80021a6:	46c0      	nop			; (mov r8, r8)
 80021a8:	000007ff 	.word	0x000007ff

080021ac <__aeabi_dcmpun>:
 80021ac:	b570      	push	{r4, r5, r6, lr}
 80021ae:	0005      	movs	r5, r0
 80021b0:	480c      	ldr	r0, [pc, #48]	; (80021e4 <__aeabi_dcmpun+0x38>)
 80021b2:	030c      	lsls	r4, r1, #12
 80021b4:	0016      	movs	r6, r2
 80021b6:	0049      	lsls	r1, r1, #1
 80021b8:	031a      	lsls	r2, r3, #12
 80021ba:	005b      	lsls	r3, r3, #1
 80021bc:	0b24      	lsrs	r4, r4, #12
 80021be:	0d49      	lsrs	r1, r1, #21
 80021c0:	0b12      	lsrs	r2, r2, #12
 80021c2:	0d5b      	lsrs	r3, r3, #21
 80021c4:	4281      	cmp	r1, r0
 80021c6:	d008      	beq.n	80021da <__aeabi_dcmpun+0x2e>
 80021c8:	4906      	ldr	r1, [pc, #24]	; (80021e4 <__aeabi_dcmpun+0x38>)
 80021ca:	2000      	movs	r0, #0
 80021cc:	428b      	cmp	r3, r1
 80021ce:	d103      	bne.n	80021d8 <__aeabi_dcmpun+0x2c>
 80021d0:	4332      	orrs	r2, r6
 80021d2:	0010      	movs	r0, r2
 80021d4:	1e42      	subs	r2, r0, #1
 80021d6:	4190      	sbcs	r0, r2
 80021d8:	bd70      	pop	{r4, r5, r6, pc}
 80021da:	2001      	movs	r0, #1
 80021dc:	432c      	orrs	r4, r5
 80021de:	d1fb      	bne.n	80021d8 <__aeabi_dcmpun+0x2c>
 80021e0:	e7f2      	b.n	80021c8 <__aeabi_dcmpun+0x1c>
 80021e2:	46c0      	nop			; (mov r8, r8)
 80021e4:	000007ff 	.word	0x000007ff

080021e8 <__aeabi_d2iz>:
 80021e8:	000a      	movs	r2, r1
 80021ea:	b530      	push	{r4, r5, lr}
 80021ec:	4c13      	ldr	r4, [pc, #76]	; (800223c <__aeabi_d2iz+0x54>)
 80021ee:	0053      	lsls	r3, r2, #1
 80021f0:	0309      	lsls	r1, r1, #12
 80021f2:	0005      	movs	r5, r0
 80021f4:	0b09      	lsrs	r1, r1, #12
 80021f6:	2000      	movs	r0, #0
 80021f8:	0d5b      	lsrs	r3, r3, #21
 80021fa:	0fd2      	lsrs	r2, r2, #31
 80021fc:	42a3      	cmp	r3, r4
 80021fe:	dd04      	ble.n	800220a <__aeabi_d2iz+0x22>
 8002200:	480f      	ldr	r0, [pc, #60]	; (8002240 <__aeabi_d2iz+0x58>)
 8002202:	4283      	cmp	r3, r0
 8002204:	dd02      	ble.n	800220c <__aeabi_d2iz+0x24>
 8002206:	4b0f      	ldr	r3, [pc, #60]	; (8002244 <__aeabi_d2iz+0x5c>)
 8002208:	18d0      	adds	r0, r2, r3
 800220a:	bd30      	pop	{r4, r5, pc}
 800220c:	2080      	movs	r0, #128	; 0x80
 800220e:	0340      	lsls	r0, r0, #13
 8002210:	4301      	orrs	r1, r0
 8002212:	480d      	ldr	r0, [pc, #52]	; (8002248 <__aeabi_d2iz+0x60>)
 8002214:	1ac0      	subs	r0, r0, r3
 8002216:	281f      	cmp	r0, #31
 8002218:	dd08      	ble.n	800222c <__aeabi_d2iz+0x44>
 800221a:	480c      	ldr	r0, [pc, #48]	; (800224c <__aeabi_d2iz+0x64>)
 800221c:	1ac3      	subs	r3, r0, r3
 800221e:	40d9      	lsrs	r1, r3
 8002220:	000b      	movs	r3, r1
 8002222:	4258      	negs	r0, r3
 8002224:	2a00      	cmp	r2, #0
 8002226:	d1f0      	bne.n	800220a <__aeabi_d2iz+0x22>
 8002228:	0018      	movs	r0, r3
 800222a:	e7ee      	b.n	800220a <__aeabi_d2iz+0x22>
 800222c:	4c08      	ldr	r4, [pc, #32]	; (8002250 <__aeabi_d2iz+0x68>)
 800222e:	40c5      	lsrs	r5, r0
 8002230:	46a4      	mov	ip, r4
 8002232:	4463      	add	r3, ip
 8002234:	4099      	lsls	r1, r3
 8002236:	000b      	movs	r3, r1
 8002238:	432b      	orrs	r3, r5
 800223a:	e7f2      	b.n	8002222 <__aeabi_d2iz+0x3a>
 800223c:	000003fe 	.word	0x000003fe
 8002240:	0000041d 	.word	0x0000041d
 8002244:	7fffffff 	.word	0x7fffffff
 8002248:	00000433 	.word	0x00000433
 800224c:	00000413 	.word	0x00000413
 8002250:	fffffbed 	.word	0xfffffbed

08002254 <__aeabi_i2d>:
 8002254:	b570      	push	{r4, r5, r6, lr}
 8002256:	2800      	cmp	r0, #0
 8002258:	d016      	beq.n	8002288 <__aeabi_i2d+0x34>
 800225a:	17c3      	asrs	r3, r0, #31
 800225c:	18c5      	adds	r5, r0, r3
 800225e:	405d      	eors	r5, r3
 8002260:	0fc4      	lsrs	r4, r0, #31
 8002262:	0028      	movs	r0, r5
 8002264:	f000 f84c 	bl	8002300 <__clzsi2>
 8002268:	4a11      	ldr	r2, [pc, #68]	; (80022b0 <__aeabi_i2d+0x5c>)
 800226a:	1a12      	subs	r2, r2, r0
 800226c:	280a      	cmp	r0, #10
 800226e:	dc16      	bgt.n	800229e <__aeabi_i2d+0x4a>
 8002270:	0003      	movs	r3, r0
 8002272:	002e      	movs	r6, r5
 8002274:	3315      	adds	r3, #21
 8002276:	409e      	lsls	r6, r3
 8002278:	230b      	movs	r3, #11
 800227a:	1a18      	subs	r0, r3, r0
 800227c:	40c5      	lsrs	r5, r0
 800227e:	0553      	lsls	r3, r2, #21
 8002280:	032d      	lsls	r5, r5, #12
 8002282:	0b2d      	lsrs	r5, r5, #12
 8002284:	0d5b      	lsrs	r3, r3, #21
 8002286:	e003      	b.n	8002290 <__aeabi_i2d+0x3c>
 8002288:	2400      	movs	r4, #0
 800228a:	2300      	movs	r3, #0
 800228c:	2500      	movs	r5, #0
 800228e:	2600      	movs	r6, #0
 8002290:	051b      	lsls	r3, r3, #20
 8002292:	432b      	orrs	r3, r5
 8002294:	07e4      	lsls	r4, r4, #31
 8002296:	4323      	orrs	r3, r4
 8002298:	0030      	movs	r0, r6
 800229a:	0019      	movs	r1, r3
 800229c:	bd70      	pop	{r4, r5, r6, pc}
 800229e:	380b      	subs	r0, #11
 80022a0:	4085      	lsls	r5, r0
 80022a2:	0553      	lsls	r3, r2, #21
 80022a4:	032d      	lsls	r5, r5, #12
 80022a6:	2600      	movs	r6, #0
 80022a8:	0b2d      	lsrs	r5, r5, #12
 80022aa:	0d5b      	lsrs	r3, r3, #21
 80022ac:	e7f0      	b.n	8002290 <__aeabi_i2d+0x3c>
 80022ae:	46c0      	nop			; (mov r8, r8)
 80022b0:	0000041e 	.word	0x0000041e

080022b4 <__aeabi_ui2d>:
 80022b4:	b510      	push	{r4, lr}
 80022b6:	1e04      	subs	r4, r0, #0
 80022b8:	d010      	beq.n	80022dc <__aeabi_ui2d+0x28>
 80022ba:	f000 f821 	bl	8002300 <__clzsi2>
 80022be:	4b0f      	ldr	r3, [pc, #60]	; (80022fc <__aeabi_ui2d+0x48>)
 80022c0:	1a1b      	subs	r3, r3, r0
 80022c2:	280a      	cmp	r0, #10
 80022c4:	dc11      	bgt.n	80022ea <__aeabi_ui2d+0x36>
 80022c6:	220b      	movs	r2, #11
 80022c8:	0021      	movs	r1, r4
 80022ca:	1a12      	subs	r2, r2, r0
 80022cc:	40d1      	lsrs	r1, r2
 80022ce:	3015      	adds	r0, #21
 80022d0:	030a      	lsls	r2, r1, #12
 80022d2:	055b      	lsls	r3, r3, #21
 80022d4:	4084      	lsls	r4, r0
 80022d6:	0b12      	lsrs	r2, r2, #12
 80022d8:	0d5b      	lsrs	r3, r3, #21
 80022da:	e001      	b.n	80022e0 <__aeabi_ui2d+0x2c>
 80022dc:	2300      	movs	r3, #0
 80022de:	2200      	movs	r2, #0
 80022e0:	051b      	lsls	r3, r3, #20
 80022e2:	4313      	orrs	r3, r2
 80022e4:	0020      	movs	r0, r4
 80022e6:	0019      	movs	r1, r3
 80022e8:	bd10      	pop	{r4, pc}
 80022ea:	0022      	movs	r2, r4
 80022ec:	380b      	subs	r0, #11
 80022ee:	4082      	lsls	r2, r0
 80022f0:	055b      	lsls	r3, r3, #21
 80022f2:	0312      	lsls	r2, r2, #12
 80022f4:	2400      	movs	r4, #0
 80022f6:	0b12      	lsrs	r2, r2, #12
 80022f8:	0d5b      	lsrs	r3, r3, #21
 80022fa:	e7f1      	b.n	80022e0 <__aeabi_ui2d+0x2c>
 80022fc:	0000041e 	.word	0x0000041e

08002300 <__clzsi2>:
 8002300:	211c      	movs	r1, #28
 8002302:	2301      	movs	r3, #1
 8002304:	041b      	lsls	r3, r3, #16
 8002306:	4298      	cmp	r0, r3
 8002308:	d301      	bcc.n	800230e <__clzsi2+0xe>
 800230a:	0c00      	lsrs	r0, r0, #16
 800230c:	3910      	subs	r1, #16
 800230e:	0a1b      	lsrs	r3, r3, #8
 8002310:	4298      	cmp	r0, r3
 8002312:	d301      	bcc.n	8002318 <__clzsi2+0x18>
 8002314:	0a00      	lsrs	r0, r0, #8
 8002316:	3908      	subs	r1, #8
 8002318:	091b      	lsrs	r3, r3, #4
 800231a:	4298      	cmp	r0, r3
 800231c:	d301      	bcc.n	8002322 <__clzsi2+0x22>
 800231e:	0900      	lsrs	r0, r0, #4
 8002320:	3904      	subs	r1, #4
 8002322:	a202      	add	r2, pc, #8	; (adr r2, 800232c <__clzsi2+0x2c>)
 8002324:	5c10      	ldrb	r0, [r2, r0]
 8002326:	1840      	adds	r0, r0, r1
 8002328:	4770      	bx	lr
 800232a:	46c0      	nop			; (mov r8, r8)
 800232c:	02020304 	.word	0x02020304
 8002330:	01010101 	.word	0x01010101
	...

0800233c <__clzdi2>:
 800233c:	b510      	push	{r4, lr}
 800233e:	2900      	cmp	r1, #0
 8002340:	d103      	bne.n	800234a <__clzdi2+0xe>
 8002342:	f7ff ffdd 	bl	8002300 <__clzsi2>
 8002346:	3020      	adds	r0, #32
 8002348:	e002      	b.n	8002350 <__clzdi2+0x14>
 800234a:	1c08      	adds	r0, r1, #0
 800234c:	f7ff ffd8 	bl	8002300 <__clzsi2>
 8002350:	bd10      	pop	{r4, pc}
 8002352:	46c0      	nop			; (mov r8, r8)

08002354 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002354:	b580      	push	{r7, lr}
 8002356:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002358:	f000 fa16 	bl	8002788 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800235c:	f000 f80c 	bl	8002378 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002360:	f000 f88e 	bl	8002480 <MX_GPIO_Init>
  MX_USART5_UART_Init();
 8002364:	f000 f85c 	bl	8002420 <MX_USART5_UART_Init>
  /* USER CODE BEGIN 2 */

	// printf redirection to UART_DBG test
	//printf ( "Value of %s is: %f\r\n" , s , f ) ;
	printf ( "Value\r\n" ) ;
 8002368:	4b02      	ldr	r3, [pc, #8]	; (8002374 <main+0x20>)
 800236a:	0018      	movs	r0, r3
 800236c:	f002 fc96 	bl	8004c9c <puts>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002370:	e7fe      	b.n	8002370 <main+0x1c>
 8002372:	46c0      	nop			; (mov r8, r8)
 8002374:	08006ee8 	.word	0x08006ee8

08002378 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002378:	b590      	push	{r4, r7, lr}
 800237a:	b095      	sub	sp, #84	; 0x54
 800237c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800237e:	2418      	movs	r4, #24
 8002380:	193b      	adds	r3, r7, r4
 8002382:	0018      	movs	r0, r3
 8002384:	2338      	movs	r3, #56	; 0x38
 8002386:	001a      	movs	r2, r3
 8002388:	2100      	movs	r1, #0
 800238a:	f001 ff93 	bl	80042b4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800238e:	1d3b      	adds	r3, r7, #4
 8002390:	0018      	movs	r0, r3
 8002392:	2314      	movs	r3, #20
 8002394:	001a      	movs	r2, r3
 8002396:	2100      	movs	r1, #0
 8002398:	f001 ff8c 	bl	80042b4 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800239c:	4b1e      	ldr	r3, [pc, #120]	; (8002418 <SystemClock_Config+0xa0>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a1e      	ldr	r2, [pc, #120]	; (800241c <SystemClock_Config+0xa4>)
 80023a2:	401a      	ands	r2, r3
 80023a4:	4b1c      	ldr	r3, [pc, #112]	; (8002418 <SystemClock_Config+0xa0>)
 80023a6:	2180      	movs	r1, #128	; 0x80
 80023a8:	0109      	lsls	r1, r1, #4
 80023aa:	430a      	orrs	r2, r1
 80023ac:	601a      	str	r2, [r3, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80023ae:	0021      	movs	r1, r4
 80023b0:	187b      	adds	r3, r7, r1
 80023b2:	2210      	movs	r2, #16
 80023b4:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80023b6:	187b      	adds	r3, r7, r1
 80023b8:	2201      	movs	r2, #1
 80023ba:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 80023bc:	187b      	adds	r3, r7, r1
 80023be:	2200      	movs	r2, #0
 80023c0:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 80023c2:	187b      	adds	r3, r7, r1
 80023c4:	22a0      	movs	r2, #160	; 0xa0
 80023c6:	0212      	lsls	r2, r2, #8
 80023c8:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80023ca:	187b      	adds	r3, r7, r1
 80023cc:	2200      	movs	r2, #0
 80023ce:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023d0:	187b      	adds	r3, r7, r1
 80023d2:	0018      	movs	r0, r3
 80023d4:	f000 fc7a 	bl	8002ccc <HAL_RCC_OscConfig>
 80023d8:	1e03      	subs	r3, r0, #0
 80023da:	d001      	beq.n	80023e0 <SystemClock_Config+0x68>
  {
    Error_Handler();
 80023dc:	f000 f872 	bl	80024c4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023e0:	1d3b      	adds	r3, r7, #4
 80023e2:	220f      	movs	r2, #15
 80023e4:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 80023e6:	1d3b      	adds	r3, r7, #4
 80023e8:	2200      	movs	r2, #0
 80023ea:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023ec:	1d3b      	adds	r3, r7, #4
 80023ee:	2200      	movs	r2, #0
 80023f0:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80023f2:	1d3b      	adds	r3, r7, #4
 80023f4:	2200      	movs	r2, #0
 80023f6:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80023f8:	1d3b      	adds	r3, r7, #4
 80023fa:	2200      	movs	r2, #0
 80023fc:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80023fe:	1d3b      	adds	r3, r7, #4
 8002400:	2100      	movs	r1, #0
 8002402:	0018      	movs	r0, r3
 8002404:	f001 f836 	bl	8003474 <HAL_RCC_ClockConfig>
 8002408:	1e03      	subs	r3, r0, #0
 800240a:	d001      	beq.n	8002410 <SystemClock_Config+0x98>
  {
    Error_Handler();
 800240c:	f000 f85a 	bl	80024c4 <Error_Handler>
  }
}
 8002410:	46c0      	nop			; (mov r8, r8)
 8002412:	46bd      	mov	sp, r7
 8002414:	b015      	add	sp, #84	; 0x54
 8002416:	bd90      	pop	{r4, r7, pc}
 8002418:	40007000 	.word	0x40007000
 800241c:	ffffe7ff 	.word	0xffffe7ff

08002420 <MX_USART5_UART_Init>:
  * @brief USART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART5_UART_Init(void)
{
 8002420:	b580      	push	{r7, lr}
 8002422:	af00      	add	r7, sp, #0
  /* USER CODE END USART5_Init 0 */

  /* USER CODE BEGIN USART5_Init 1 */

  /* USER CODE END USART5_Init 1 */
  huart5.Instance = USART5;
 8002424:	4b14      	ldr	r3, [pc, #80]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002426:	4a15      	ldr	r2, [pc, #84]	; (800247c <MX_USART5_UART_Init+0x5c>)
 8002428:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 9600;
 800242a:	4b13      	ldr	r3, [pc, #76]	; (8002478 <MX_USART5_UART_Init+0x58>)
 800242c:	2296      	movs	r2, #150	; 0x96
 800242e:	0192      	lsls	r2, r2, #6
 8002430:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 8002432:	4b11      	ldr	r3, [pc, #68]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002434:	2200      	movs	r2, #0
 8002436:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8002438:	4b0f      	ldr	r3, [pc, #60]	; (8002478 <MX_USART5_UART_Init+0x58>)
 800243a:	2200      	movs	r2, #0
 800243c:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 800243e:	4b0e      	ldr	r3, [pc, #56]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002440:	2200      	movs	r2, #0
 8002442:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8002444:	4b0c      	ldr	r3, [pc, #48]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002446:	220c      	movs	r2, #12
 8002448:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800244a:	4b0b      	ldr	r3, [pc, #44]	; (8002478 <MX_USART5_UART_Init+0x58>)
 800244c:	2200      	movs	r2, #0
 800244e:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8002450:	4b09      	ldr	r3, [pc, #36]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002452:	2200      	movs	r2, #0
 8002454:	61da      	str	r2, [r3, #28]
  huart5.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002456:	4b08      	ldr	r3, [pc, #32]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002458:	2200      	movs	r2, #0
 800245a:	621a      	str	r2, [r3, #32]
  huart5.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800245c:	4b06      	ldr	r3, [pc, #24]	; (8002478 <MX_USART5_UART_Init+0x58>)
 800245e:	2200      	movs	r2, #0
 8002460:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8002462:	4b05      	ldr	r3, [pc, #20]	; (8002478 <MX_USART5_UART_Init+0x58>)
 8002464:	0018      	movs	r0, r3
 8002466:	f001 fa29 	bl	80038bc <HAL_UART_Init>
 800246a:	1e03      	subs	r3, r0, #0
 800246c:	d001      	beq.n	8002472 <MX_USART5_UART_Init+0x52>
  {
    Error_Handler();
 800246e:	f000 f829 	bl	80024c4 <Error_Handler>
  }
  /* USER CODE BEGIN USART5_Init 2 */

  /* USER CODE END USART5_Init 2 */

}
 8002472:	46c0      	nop			; (mov r8, r8)
 8002474:	46bd      	mov	sp, r7
 8002476:	bd80      	pop	{r7, pc}
 8002478:	20000204 	.word	0x20000204
 800247c:	40005000 	.word	0x40005000

08002480 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002480:	b580      	push	{r7, lr}
 8002482:	b082      	sub	sp, #8
 8002484:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002486:	4b0e      	ldr	r3, [pc, #56]	; (80024c0 <MX_GPIO_Init+0x40>)
 8002488:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800248a:	4b0d      	ldr	r3, [pc, #52]	; (80024c0 <MX_GPIO_Init+0x40>)
 800248c:	2101      	movs	r1, #1
 800248e:	430a      	orrs	r2, r1
 8002490:	62da      	str	r2, [r3, #44]	; 0x2c
 8002492:	4b0b      	ldr	r3, [pc, #44]	; (80024c0 <MX_GPIO_Init+0x40>)
 8002494:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002496:	2201      	movs	r2, #1
 8002498:	4013      	ands	r3, r2
 800249a:	607b      	str	r3, [r7, #4]
 800249c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800249e:	4b08      	ldr	r3, [pc, #32]	; (80024c0 <MX_GPIO_Init+0x40>)
 80024a0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80024a2:	4b07      	ldr	r3, [pc, #28]	; (80024c0 <MX_GPIO_Init+0x40>)
 80024a4:	2102      	movs	r1, #2
 80024a6:	430a      	orrs	r2, r1
 80024a8:	62da      	str	r2, [r3, #44]	; 0x2c
 80024aa:	4b05      	ldr	r3, [pc, #20]	; (80024c0 <MX_GPIO_Init+0x40>)
 80024ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024ae:	2202      	movs	r2, #2
 80024b0:	4013      	ands	r3, r2
 80024b2:	603b      	str	r3, [r7, #0]
 80024b4:	683b      	ldr	r3, [r7, #0]

}
 80024b6:	46c0      	nop			; (mov r8, r8)
 80024b8:	46bd      	mov	sp, r7
 80024ba:	b002      	add	sp, #8
 80024bc:	bd80      	pop	{r7, pc}
 80024be:	46c0      	nop			; (mov r8, r8)
 80024c0:	40021000 	.word	0x40021000

080024c4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80024c8:	b672      	cpsid	i
}
 80024ca:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80024cc:	e7fe      	b.n	80024cc <Error_Handler+0x8>
	...

080024d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80024d0:	b580      	push	{r7, lr}
 80024d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80024d4:	4b07      	ldr	r3, [pc, #28]	; (80024f4 <HAL_MspInit+0x24>)
 80024d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80024d8:	4b06      	ldr	r3, [pc, #24]	; (80024f4 <HAL_MspInit+0x24>)
 80024da:	2101      	movs	r1, #1
 80024dc:	430a      	orrs	r2, r1
 80024de:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 80024e0:	4b04      	ldr	r3, [pc, #16]	; (80024f4 <HAL_MspInit+0x24>)
 80024e2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80024e4:	4b03      	ldr	r3, [pc, #12]	; (80024f4 <HAL_MspInit+0x24>)
 80024e6:	2180      	movs	r1, #128	; 0x80
 80024e8:	0549      	lsls	r1, r1, #21
 80024ea:	430a      	orrs	r2, r1
 80024ec:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80024ee:	46c0      	nop			; (mov r8, r8)
 80024f0:	46bd      	mov	sp, r7
 80024f2:	bd80      	pop	{r7, pc}
 80024f4:	40021000 	.word	0x40021000

080024f8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80024f8:	b590      	push	{r4, r7, lr}
 80024fa:	b089      	sub	sp, #36	; 0x24
 80024fc:	af00      	add	r7, sp, #0
 80024fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002500:	240c      	movs	r4, #12
 8002502:	193b      	adds	r3, r7, r4
 8002504:	0018      	movs	r0, r3
 8002506:	2314      	movs	r3, #20
 8002508:	001a      	movs	r2, r3
 800250a:	2100      	movs	r1, #0
 800250c:	f001 fed2 	bl	80042b4 <memset>
  if(huart->Instance==USART5)
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	4a17      	ldr	r2, [pc, #92]	; (8002574 <HAL_UART_MspInit+0x7c>)
 8002516:	4293      	cmp	r3, r2
 8002518:	d128      	bne.n	800256c <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART5_MspInit 0 */

  /* USER CODE END USART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART5_CLK_ENABLE();
 800251a:	4b17      	ldr	r3, [pc, #92]	; (8002578 <HAL_UART_MspInit+0x80>)
 800251c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800251e:	4b16      	ldr	r3, [pc, #88]	; (8002578 <HAL_UART_MspInit+0x80>)
 8002520:	2180      	movs	r1, #128	; 0x80
 8002522:	0349      	lsls	r1, r1, #13
 8002524:	430a      	orrs	r2, r1
 8002526:	639a      	str	r2, [r3, #56]	; 0x38

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002528:	4b13      	ldr	r3, [pc, #76]	; (8002578 <HAL_UART_MspInit+0x80>)
 800252a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800252c:	4b12      	ldr	r3, [pc, #72]	; (8002578 <HAL_UART_MspInit+0x80>)
 800252e:	2102      	movs	r1, #2
 8002530:	430a      	orrs	r2, r1
 8002532:	62da      	str	r2, [r3, #44]	; 0x2c
 8002534:	4b10      	ldr	r3, [pc, #64]	; (8002578 <HAL_UART_MspInit+0x80>)
 8002536:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002538:	2202      	movs	r2, #2
 800253a:	4013      	ands	r3, r2
 800253c:	60bb      	str	r3, [r7, #8]
 800253e:	68bb      	ldr	r3, [r7, #8]
    /**USART5 GPIO Configuration
    PB3     ------> USART5_TX
    PB4     ------> USART5_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 8002540:	0021      	movs	r1, r4
 8002542:	187b      	adds	r3, r7, r1
 8002544:	2218      	movs	r2, #24
 8002546:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002548:	187b      	adds	r3, r7, r1
 800254a:	2202      	movs	r2, #2
 800254c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800254e:	187b      	adds	r3, r7, r1
 8002550:	2200      	movs	r2, #0
 8002552:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002554:	187b      	adds	r3, r7, r1
 8002556:	2203      	movs	r2, #3
 8002558:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF6_USART5;
 800255a:	187b      	adds	r3, r7, r1
 800255c:	2206      	movs	r2, #6
 800255e:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002560:	187b      	adds	r3, r7, r1
 8002562:	4a06      	ldr	r2, [pc, #24]	; (800257c <HAL_UART_MspInit+0x84>)
 8002564:	0019      	movs	r1, r3
 8002566:	0010      	movs	r0, r2
 8002568:	f000 fa32 	bl	80029d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART5_MspInit 1 */

  /* USER CODE END USART5_MspInit 1 */
  }

}
 800256c:	46c0      	nop			; (mov r8, r8)
 800256e:	46bd      	mov	sp, r7
 8002570:	b009      	add	sp, #36	; 0x24
 8002572:	bd90      	pop	{r4, r7, pc}
 8002574:	40005000 	.word	0x40005000
 8002578:	40021000 	.word	0x40021000
 800257c:	50000400 	.word	0x50000400

08002580 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 8002580:	b580      	push	{r7, lr}
 8002582:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002584:	e7fe      	b.n	8002584 <NMI_Handler+0x4>

08002586 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002586:	b580      	push	{r7, lr}
 8002588:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800258a:	e7fe      	b.n	800258a <HardFault_Handler+0x4>

0800258c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800258c:	b580      	push	{r7, lr}
 800258e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002590:	46c0      	nop			; (mov r8, r8)
 8002592:	46bd      	mov	sp, r7
 8002594:	bd80      	pop	{r7, pc}

08002596 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002596:	b580      	push	{r7, lr}
 8002598:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800259a:	46c0      	nop			; (mov r8, r8)
 800259c:	46bd      	mov	sp, r7
 800259e:	bd80      	pop	{r7, pc}

080025a0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80025a0:	b580      	push	{r7, lr}
 80025a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025a4:	f000 f944 	bl	8002830 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80025a8:	46c0      	nop			; (mov r8, r8)
 80025aa:	46bd      	mov	sp, r7
 80025ac:	bd80      	pop	{r7, pc}

080025ae <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80025ae:	b580      	push	{r7, lr}
 80025b0:	af00      	add	r7, sp, #0
	return 1;
 80025b2:	2301      	movs	r3, #1
}
 80025b4:	0018      	movs	r0, r3
 80025b6:	46bd      	mov	sp, r7
 80025b8:	bd80      	pop	{r7, pc}

080025ba <_kill>:

int _kill(int pid, int sig)
{
 80025ba:	b580      	push	{r7, lr}
 80025bc:	b082      	sub	sp, #8
 80025be:	af00      	add	r7, sp, #0
 80025c0:	6078      	str	r0, [r7, #4]
 80025c2:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80025c4:	f001 fe4c 	bl	8004260 <__errno>
 80025c8:	0003      	movs	r3, r0
 80025ca:	2216      	movs	r2, #22
 80025cc:	601a      	str	r2, [r3, #0]
	return -1;
 80025ce:	2301      	movs	r3, #1
 80025d0:	425b      	negs	r3, r3
}
 80025d2:	0018      	movs	r0, r3
 80025d4:	46bd      	mov	sp, r7
 80025d6:	b002      	add	sp, #8
 80025d8:	bd80      	pop	{r7, pc}

080025da <_exit>:

void _exit (int status)
{
 80025da:	b580      	push	{r7, lr}
 80025dc:	b082      	sub	sp, #8
 80025de:	af00      	add	r7, sp, #0
 80025e0:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80025e2:	2301      	movs	r3, #1
 80025e4:	425a      	negs	r2, r3
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	0011      	movs	r1, r2
 80025ea:	0018      	movs	r0, r3
 80025ec:	f7ff ffe5 	bl	80025ba <_kill>
	while (1) {}		/* Make sure we hang here */
 80025f0:	e7fe      	b.n	80025f0 <_exit+0x16>

080025f2 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80025f2:	b580      	push	{r7, lr}
 80025f4:	b086      	sub	sp, #24
 80025f6:	af00      	add	r7, sp, #0
 80025f8:	60f8      	str	r0, [r7, #12]
 80025fa:	60b9      	str	r1, [r7, #8]
 80025fc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025fe:	2300      	movs	r3, #0
 8002600:	617b      	str	r3, [r7, #20]
 8002602:	e00a      	b.n	800261a <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002604:	e000      	b.n	8002608 <_read+0x16>
 8002606:	bf00      	nop
 8002608:	0001      	movs	r1, r0
 800260a:	68bb      	ldr	r3, [r7, #8]
 800260c:	1c5a      	adds	r2, r3, #1
 800260e:	60ba      	str	r2, [r7, #8]
 8002610:	b2ca      	uxtb	r2, r1
 8002612:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002614:	697b      	ldr	r3, [r7, #20]
 8002616:	3301      	adds	r3, #1
 8002618:	617b      	str	r3, [r7, #20]
 800261a:	697a      	ldr	r2, [r7, #20]
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	429a      	cmp	r2, r3
 8002620:	dbf0      	blt.n	8002604 <_read+0x12>
	}

return len;
 8002622:	687b      	ldr	r3, [r7, #4]
}
 8002624:	0018      	movs	r0, r3
 8002626:	46bd      	mov	sp, r7
 8002628:	b006      	add	sp, #24
 800262a:	bd80      	pop	{r7, pc}

0800262c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800262c:	b580      	push	{r7, lr}
 800262e:	b086      	sub	sp, #24
 8002630:	af00      	add	r7, sp, #0
 8002632:	60f8      	str	r0, [r7, #12]
 8002634:	60b9      	str	r1, [r7, #8]
 8002636:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002638:	2300      	movs	r3, #0
 800263a:	617b      	str	r3, [r7, #20]
 800263c:	e009      	b.n	8002652 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800263e:	68bb      	ldr	r3, [r7, #8]
 8002640:	1c5a      	adds	r2, r3, #1
 8002642:	60ba      	str	r2, [r7, #8]
 8002644:	781b      	ldrb	r3, [r3, #0]
 8002646:	0018      	movs	r0, r3
 8002648:	e000      	b.n	800264c <_write+0x20>
 800264a:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800264c:	697b      	ldr	r3, [r7, #20]
 800264e:	3301      	adds	r3, #1
 8002650:	617b      	str	r3, [r7, #20]
 8002652:	697a      	ldr	r2, [r7, #20]
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	429a      	cmp	r2, r3
 8002658:	dbf1      	blt.n	800263e <_write+0x12>
	}
	return len;
 800265a:	687b      	ldr	r3, [r7, #4]
}
 800265c:	0018      	movs	r0, r3
 800265e:	46bd      	mov	sp, r7
 8002660:	b006      	add	sp, #24
 8002662:	bd80      	pop	{r7, pc}

08002664 <_close>:

int _close(int file)
{
 8002664:	b580      	push	{r7, lr}
 8002666:	b082      	sub	sp, #8
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
	return -1;
 800266c:	2301      	movs	r3, #1
 800266e:	425b      	negs	r3, r3
}
 8002670:	0018      	movs	r0, r3
 8002672:	46bd      	mov	sp, r7
 8002674:	b002      	add	sp, #8
 8002676:	bd80      	pop	{r7, pc}

08002678 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002678:	b580      	push	{r7, lr}
 800267a:	b082      	sub	sp, #8
 800267c:	af00      	add	r7, sp, #0
 800267e:	6078      	str	r0, [r7, #4]
 8002680:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002682:	683b      	ldr	r3, [r7, #0]
 8002684:	2280      	movs	r2, #128	; 0x80
 8002686:	0192      	lsls	r2, r2, #6
 8002688:	605a      	str	r2, [r3, #4]
	return 0;
 800268a:	2300      	movs	r3, #0
}
 800268c:	0018      	movs	r0, r3
 800268e:	46bd      	mov	sp, r7
 8002690:	b002      	add	sp, #8
 8002692:	bd80      	pop	{r7, pc}

08002694 <_isatty>:

int _isatty(int file)
{
 8002694:	b580      	push	{r7, lr}
 8002696:	b082      	sub	sp, #8
 8002698:	af00      	add	r7, sp, #0
 800269a:	6078      	str	r0, [r7, #4]
	return 1;
 800269c:	2301      	movs	r3, #1
}
 800269e:	0018      	movs	r0, r3
 80026a0:	46bd      	mov	sp, r7
 80026a2:	b002      	add	sp, #8
 80026a4:	bd80      	pop	{r7, pc}

080026a6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80026a6:	b580      	push	{r7, lr}
 80026a8:	b084      	sub	sp, #16
 80026aa:	af00      	add	r7, sp, #0
 80026ac:	60f8      	str	r0, [r7, #12]
 80026ae:	60b9      	str	r1, [r7, #8]
 80026b0:	607a      	str	r2, [r7, #4]
	return 0;
 80026b2:	2300      	movs	r3, #0
}
 80026b4:	0018      	movs	r0, r3
 80026b6:	46bd      	mov	sp, r7
 80026b8:	b004      	add	sp, #16
 80026ba:	bd80      	pop	{r7, pc}

080026bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80026bc:	b580      	push	{r7, lr}
 80026be:	b086      	sub	sp, #24
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80026c4:	4a14      	ldr	r2, [pc, #80]	; (8002718 <_sbrk+0x5c>)
 80026c6:	4b15      	ldr	r3, [pc, #84]	; (800271c <_sbrk+0x60>)
 80026c8:	1ad3      	subs	r3, r2, r3
 80026ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80026cc:	697b      	ldr	r3, [r7, #20]
 80026ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80026d0:	4b13      	ldr	r3, [pc, #76]	; (8002720 <_sbrk+0x64>)
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d102      	bne.n	80026de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80026d8:	4b11      	ldr	r3, [pc, #68]	; (8002720 <_sbrk+0x64>)
 80026da:	4a12      	ldr	r2, [pc, #72]	; (8002724 <_sbrk+0x68>)
 80026dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80026de:	4b10      	ldr	r3, [pc, #64]	; (8002720 <_sbrk+0x64>)
 80026e0:	681a      	ldr	r2, [r3, #0]
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	18d3      	adds	r3, r2, r3
 80026e6:	693a      	ldr	r2, [r7, #16]
 80026e8:	429a      	cmp	r2, r3
 80026ea:	d207      	bcs.n	80026fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80026ec:	f001 fdb8 	bl	8004260 <__errno>
 80026f0:	0003      	movs	r3, r0
 80026f2:	220c      	movs	r2, #12
 80026f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80026f6:	2301      	movs	r3, #1
 80026f8:	425b      	negs	r3, r3
 80026fa:	e009      	b.n	8002710 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80026fc:	4b08      	ldr	r3, [pc, #32]	; (8002720 <_sbrk+0x64>)
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002702:	4b07      	ldr	r3, [pc, #28]	; (8002720 <_sbrk+0x64>)
 8002704:	681a      	ldr	r2, [r3, #0]
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	18d2      	adds	r2, r2, r3
 800270a:	4b05      	ldr	r3, [pc, #20]	; (8002720 <_sbrk+0x64>)
 800270c:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800270e:	68fb      	ldr	r3, [r7, #12]
}
 8002710:	0018      	movs	r0, r3
 8002712:	46bd      	mov	sp, r7
 8002714:	b006      	add	sp, #24
 8002716:	bd80      	pop	{r7, pc}
 8002718:	20005000 	.word	0x20005000
 800271c:	00000400 	.word	0x00000400
 8002720:	200001f8 	.word	0x200001f8
 8002724:	200002a0 	.word	0x200002a0

08002728 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002728:	b580      	push	{r7, lr}
 800272a:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800272c:	46c0      	nop			; (mov r8, r8)
 800272e:	46bd      	mov	sp, r7
 8002730:	bd80      	pop	{r7, pc}
	...

08002734 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8002734:	480d      	ldr	r0, [pc, #52]	; (800276c <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 8002736:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002738:	480d      	ldr	r0, [pc, #52]	; (8002770 <LoopForever+0x6>)
  ldr r1, =_edata
 800273a:	490e      	ldr	r1, [pc, #56]	; (8002774 <LoopForever+0xa>)
  ldr r2, =_sidata
 800273c:	4a0e      	ldr	r2, [pc, #56]	; (8002778 <LoopForever+0xe>)
  movs r3, #0
 800273e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002740:	e002      	b.n	8002748 <LoopCopyDataInit>

08002742 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002742:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002744:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002746:	3304      	adds	r3, #4

08002748 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002748:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800274a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800274c:	d3f9      	bcc.n	8002742 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800274e:	4a0b      	ldr	r2, [pc, #44]	; (800277c <LoopForever+0x12>)
  ldr r4, =_ebss
 8002750:	4c0b      	ldr	r4, [pc, #44]	; (8002780 <LoopForever+0x16>)
  movs r3, #0
 8002752:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002754:	e001      	b.n	800275a <LoopFillZerobss>

08002756 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002756:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002758:	3204      	adds	r2, #4

0800275a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800275a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800275c:	d3fb      	bcc.n	8002756 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800275e:	f7ff ffe3 	bl	8002728 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002762:	f001 fd83 	bl	800426c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002766:	f7ff fdf5 	bl	8002354 <main>

0800276a <LoopForever>:

LoopForever:
    b LoopForever
 800276a:	e7fe      	b.n	800276a <LoopForever>
   ldr   r0, =_estack
 800276c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8002770:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002774:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8002778:	080073cc 	.word	0x080073cc
  ldr r2, =_sbss
 800277c:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 8002780:	2000029c 	.word	0x2000029c

08002784 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002784:	e7fe      	b.n	8002784 <ADC1_COMP_IRQHandler>
	...

08002788 <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b082      	sub	sp, #8
 800278c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 800278e:	1dfb      	adds	r3, r7, #7
 8002790:	2200      	movs	r2, #0
 8002792:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002794:	4b0b      	ldr	r3, [pc, #44]	; (80027c4 <HAL_Init+0x3c>)
 8002796:	681a      	ldr	r2, [r3, #0]
 8002798:	4b0a      	ldr	r3, [pc, #40]	; (80027c4 <HAL_Init+0x3c>)
 800279a:	2140      	movs	r1, #64	; 0x40
 800279c:	430a      	orrs	r2, r1
 800279e:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80027a0:	2003      	movs	r0, #3
 80027a2:	f000 f811 	bl	80027c8 <HAL_InitTick>
 80027a6:	1e03      	subs	r3, r0, #0
 80027a8:	d003      	beq.n	80027b2 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 80027aa:	1dfb      	adds	r3, r7, #7
 80027ac:	2201      	movs	r2, #1
 80027ae:	701a      	strb	r2, [r3, #0]
 80027b0:	e001      	b.n	80027b6 <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80027b2:	f7ff fe8d 	bl	80024d0 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80027b6:	1dfb      	adds	r3, r7, #7
 80027b8:	781b      	ldrb	r3, [r3, #0]
}
 80027ba:	0018      	movs	r0, r3
 80027bc:	46bd      	mov	sp, r7
 80027be:	b002      	add	sp, #8
 80027c0:	bd80      	pop	{r7, pc}
 80027c2:	46c0      	nop			; (mov r8, r8)
 80027c4:	40022000 	.word	0x40022000

080027c8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80027c8:	b590      	push	{r4, r7, lr}
 80027ca:	b083      	sub	sp, #12
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80027d0:	4b14      	ldr	r3, [pc, #80]	; (8002824 <HAL_InitTick+0x5c>)
 80027d2:	681c      	ldr	r4, [r3, #0]
 80027d4:	4b14      	ldr	r3, [pc, #80]	; (8002828 <HAL_InitTick+0x60>)
 80027d6:	781b      	ldrb	r3, [r3, #0]
 80027d8:	0019      	movs	r1, r3
 80027da:	23fa      	movs	r3, #250	; 0xfa
 80027dc:	0098      	lsls	r0, r3, #2
 80027de:	f7fd fcaf 	bl	8000140 <__udivsi3>
 80027e2:	0003      	movs	r3, r0
 80027e4:	0019      	movs	r1, r3
 80027e6:	0020      	movs	r0, r4
 80027e8:	f7fd fcaa 	bl	8000140 <__udivsi3>
 80027ec:	0003      	movs	r3, r0
 80027ee:	0018      	movs	r0, r3
 80027f0:	f000 f8e1 	bl	80029b6 <HAL_SYSTICK_Config>
 80027f4:	1e03      	subs	r3, r0, #0
 80027f6:	d001      	beq.n	80027fc <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80027f8:	2301      	movs	r3, #1
 80027fa:	e00f      	b.n	800281c <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	2b03      	cmp	r3, #3
 8002800:	d80b      	bhi.n	800281a <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002802:	6879      	ldr	r1, [r7, #4]
 8002804:	2301      	movs	r3, #1
 8002806:	425b      	negs	r3, r3
 8002808:	2200      	movs	r2, #0
 800280a:	0018      	movs	r0, r3
 800280c:	f000 f8be 	bl	800298c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002810:	4b06      	ldr	r3, [pc, #24]	; (800282c <HAL_InitTick+0x64>)
 8002812:	687a      	ldr	r2, [r7, #4]
 8002814:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002816:	2300      	movs	r3, #0
 8002818:	e000      	b.n	800281c <HAL_InitTick+0x54>
    return HAL_ERROR;
 800281a:	2301      	movs	r3, #1
}
 800281c:	0018      	movs	r0, r3
 800281e:	46bd      	mov	sp, r7
 8002820:	b003      	add	sp, #12
 8002822:	bd90      	pop	{r4, r7, pc}
 8002824:	20000000 	.word	0x20000000
 8002828:	20000008 	.word	0x20000008
 800282c:	20000004 	.word	0x20000004

08002830 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002830:	b580      	push	{r7, lr}
 8002832:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002834:	4b05      	ldr	r3, [pc, #20]	; (800284c <HAL_IncTick+0x1c>)
 8002836:	781b      	ldrb	r3, [r3, #0]
 8002838:	001a      	movs	r2, r3
 800283a:	4b05      	ldr	r3, [pc, #20]	; (8002850 <HAL_IncTick+0x20>)
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	18d2      	adds	r2, r2, r3
 8002840:	4b03      	ldr	r3, [pc, #12]	; (8002850 <HAL_IncTick+0x20>)
 8002842:	601a      	str	r2, [r3, #0]
}
 8002844:	46c0      	nop			; (mov r8, r8)
 8002846:	46bd      	mov	sp, r7
 8002848:	bd80      	pop	{r7, pc}
 800284a:	46c0      	nop			; (mov r8, r8)
 800284c:	20000008 	.word	0x20000008
 8002850:	20000288 	.word	0x20000288

08002854 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002854:	b580      	push	{r7, lr}
 8002856:	af00      	add	r7, sp, #0
  return uwTick;
 8002858:	4b02      	ldr	r3, [pc, #8]	; (8002864 <HAL_GetTick+0x10>)
 800285a:	681b      	ldr	r3, [r3, #0]
}
 800285c:	0018      	movs	r0, r3
 800285e:	46bd      	mov	sp, r7
 8002860:	bd80      	pop	{r7, pc}
 8002862:	46c0      	nop			; (mov r8, r8)
 8002864:	20000288 	.word	0x20000288

08002868 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002868:	b590      	push	{r4, r7, lr}
 800286a:	b083      	sub	sp, #12
 800286c:	af00      	add	r7, sp, #0
 800286e:	0002      	movs	r2, r0
 8002870:	6039      	str	r1, [r7, #0]
 8002872:	1dfb      	adds	r3, r7, #7
 8002874:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8002876:	1dfb      	adds	r3, r7, #7
 8002878:	781b      	ldrb	r3, [r3, #0]
 800287a:	2b7f      	cmp	r3, #127	; 0x7f
 800287c:	d828      	bhi.n	80028d0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800287e:	4a2f      	ldr	r2, [pc, #188]	; (800293c <__NVIC_SetPriority+0xd4>)
 8002880:	1dfb      	adds	r3, r7, #7
 8002882:	781b      	ldrb	r3, [r3, #0]
 8002884:	b25b      	sxtb	r3, r3
 8002886:	089b      	lsrs	r3, r3, #2
 8002888:	33c0      	adds	r3, #192	; 0xc0
 800288a:	009b      	lsls	r3, r3, #2
 800288c:	589b      	ldr	r3, [r3, r2]
 800288e:	1dfa      	adds	r2, r7, #7
 8002890:	7812      	ldrb	r2, [r2, #0]
 8002892:	0011      	movs	r1, r2
 8002894:	2203      	movs	r2, #3
 8002896:	400a      	ands	r2, r1
 8002898:	00d2      	lsls	r2, r2, #3
 800289a:	21ff      	movs	r1, #255	; 0xff
 800289c:	4091      	lsls	r1, r2
 800289e:	000a      	movs	r2, r1
 80028a0:	43d2      	mvns	r2, r2
 80028a2:	401a      	ands	r2, r3
 80028a4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	019b      	lsls	r3, r3, #6
 80028aa:	22ff      	movs	r2, #255	; 0xff
 80028ac:	401a      	ands	r2, r3
 80028ae:	1dfb      	adds	r3, r7, #7
 80028b0:	781b      	ldrb	r3, [r3, #0]
 80028b2:	0018      	movs	r0, r3
 80028b4:	2303      	movs	r3, #3
 80028b6:	4003      	ands	r3, r0
 80028b8:	00db      	lsls	r3, r3, #3
 80028ba:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80028bc:	481f      	ldr	r0, [pc, #124]	; (800293c <__NVIC_SetPriority+0xd4>)
 80028be:	1dfb      	adds	r3, r7, #7
 80028c0:	781b      	ldrb	r3, [r3, #0]
 80028c2:	b25b      	sxtb	r3, r3
 80028c4:	089b      	lsrs	r3, r3, #2
 80028c6:	430a      	orrs	r2, r1
 80028c8:	33c0      	adds	r3, #192	; 0xc0
 80028ca:	009b      	lsls	r3, r3, #2
 80028cc:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80028ce:	e031      	b.n	8002934 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80028d0:	4a1b      	ldr	r2, [pc, #108]	; (8002940 <__NVIC_SetPriority+0xd8>)
 80028d2:	1dfb      	adds	r3, r7, #7
 80028d4:	781b      	ldrb	r3, [r3, #0]
 80028d6:	0019      	movs	r1, r3
 80028d8:	230f      	movs	r3, #15
 80028da:	400b      	ands	r3, r1
 80028dc:	3b08      	subs	r3, #8
 80028de:	089b      	lsrs	r3, r3, #2
 80028e0:	3306      	adds	r3, #6
 80028e2:	009b      	lsls	r3, r3, #2
 80028e4:	18d3      	adds	r3, r2, r3
 80028e6:	3304      	adds	r3, #4
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	1dfa      	adds	r2, r7, #7
 80028ec:	7812      	ldrb	r2, [r2, #0]
 80028ee:	0011      	movs	r1, r2
 80028f0:	2203      	movs	r2, #3
 80028f2:	400a      	ands	r2, r1
 80028f4:	00d2      	lsls	r2, r2, #3
 80028f6:	21ff      	movs	r1, #255	; 0xff
 80028f8:	4091      	lsls	r1, r2
 80028fa:	000a      	movs	r2, r1
 80028fc:	43d2      	mvns	r2, r2
 80028fe:	401a      	ands	r2, r3
 8002900:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002902:	683b      	ldr	r3, [r7, #0]
 8002904:	019b      	lsls	r3, r3, #6
 8002906:	22ff      	movs	r2, #255	; 0xff
 8002908:	401a      	ands	r2, r3
 800290a:	1dfb      	adds	r3, r7, #7
 800290c:	781b      	ldrb	r3, [r3, #0]
 800290e:	0018      	movs	r0, r3
 8002910:	2303      	movs	r3, #3
 8002912:	4003      	ands	r3, r0
 8002914:	00db      	lsls	r3, r3, #3
 8002916:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002918:	4809      	ldr	r0, [pc, #36]	; (8002940 <__NVIC_SetPriority+0xd8>)
 800291a:	1dfb      	adds	r3, r7, #7
 800291c:	781b      	ldrb	r3, [r3, #0]
 800291e:	001c      	movs	r4, r3
 8002920:	230f      	movs	r3, #15
 8002922:	4023      	ands	r3, r4
 8002924:	3b08      	subs	r3, #8
 8002926:	089b      	lsrs	r3, r3, #2
 8002928:	430a      	orrs	r2, r1
 800292a:	3306      	adds	r3, #6
 800292c:	009b      	lsls	r3, r3, #2
 800292e:	18c3      	adds	r3, r0, r3
 8002930:	3304      	adds	r3, #4
 8002932:	601a      	str	r2, [r3, #0]
}
 8002934:	46c0      	nop			; (mov r8, r8)
 8002936:	46bd      	mov	sp, r7
 8002938:	b003      	add	sp, #12
 800293a:	bd90      	pop	{r4, r7, pc}
 800293c:	e000e100 	.word	0xe000e100
 8002940:	e000ed00 	.word	0xe000ed00

08002944 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002944:	b580      	push	{r7, lr}
 8002946:	b082      	sub	sp, #8
 8002948:	af00      	add	r7, sp, #0
 800294a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	1e5a      	subs	r2, r3, #1
 8002950:	2380      	movs	r3, #128	; 0x80
 8002952:	045b      	lsls	r3, r3, #17
 8002954:	429a      	cmp	r2, r3
 8002956:	d301      	bcc.n	800295c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002958:	2301      	movs	r3, #1
 800295a:	e010      	b.n	800297e <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800295c:	4b0a      	ldr	r3, [pc, #40]	; (8002988 <SysTick_Config+0x44>)
 800295e:	687a      	ldr	r2, [r7, #4]
 8002960:	3a01      	subs	r2, #1
 8002962:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002964:	2301      	movs	r3, #1
 8002966:	425b      	negs	r3, r3
 8002968:	2103      	movs	r1, #3
 800296a:	0018      	movs	r0, r3
 800296c:	f7ff ff7c 	bl	8002868 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002970:	4b05      	ldr	r3, [pc, #20]	; (8002988 <SysTick_Config+0x44>)
 8002972:	2200      	movs	r2, #0
 8002974:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002976:	4b04      	ldr	r3, [pc, #16]	; (8002988 <SysTick_Config+0x44>)
 8002978:	2207      	movs	r2, #7
 800297a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800297c:	2300      	movs	r3, #0
}
 800297e:	0018      	movs	r0, r3
 8002980:	46bd      	mov	sp, r7
 8002982:	b002      	add	sp, #8
 8002984:	bd80      	pop	{r7, pc}
 8002986:	46c0      	nop			; (mov r8, r8)
 8002988:	e000e010 	.word	0xe000e010

0800298c <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800298c:	b580      	push	{r7, lr}
 800298e:	b084      	sub	sp, #16
 8002990:	af00      	add	r7, sp, #0
 8002992:	60b9      	str	r1, [r7, #8]
 8002994:	607a      	str	r2, [r7, #4]
 8002996:	210f      	movs	r1, #15
 8002998:	187b      	adds	r3, r7, r1
 800299a:	1c02      	adds	r2, r0, #0
 800299c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 800299e:	68ba      	ldr	r2, [r7, #8]
 80029a0:	187b      	adds	r3, r7, r1
 80029a2:	781b      	ldrb	r3, [r3, #0]
 80029a4:	b25b      	sxtb	r3, r3
 80029a6:	0011      	movs	r1, r2
 80029a8:	0018      	movs	r0, r3
 80029aa:	f7ff ff5d 	bl	8002868 <__NVIC_SetPriority>
}
 80029ae:	46c0      	nop			; (mov r8, r8)
 80029b0:	46bd      	mov	sp, r7
 80029b2:	b004      	add	sp, #16
 80029b4:	bd80      	pop	{r7, pc}

080029b6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80029b6:	b580      	push	{r7, lr}
 80029b8:	b082      	sub	sp, #8
 80029ba:	af00      	add	r7, sp, #0
 80029bc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	0018      	movs	r0, r3
 80029c2:	f7ff ffbf 	bl	8002944 <SysTick_Config>
 80029c6:	0003      	movs	r3, r0
}
 80029c8:	0018      	movs	r0, r3
 80029ca:	46bd      	mov	sp, r7
 80029cc:	b002      	add	sp, #8
 80029ce:	bd80      	pop	{r7, pc}

080029d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80029d0:	b580      	push	{r7, lr}
 80029d2:	b086      	sub	sp, #24
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	6078      	str	r0, [r7, #4]
 80029d8:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 80029da:	2300      	movs	r3, #0
 80029dc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80029de:	2300      	movs	r3, #0
 80029e0:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 80029e2:	2300      	movs	r3, #0
 80029e4:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 80029e6:	e155      	b.n	8002c94 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	2101      	movs	r1, #1
 80029ee:	697a      	ldr	r2, [r7, #20]
 80029f0:	4091      	lsls	r1, r2
 80029f2:	000a      	movs	r2, r1
 80029f4:	4013      	ands	r3, r2
 80029f6:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 80029f8:	68fb      	ldr	r3, [r7, #12]
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d100      	bne.n	8002a00 <HAL_GPIO_Init+0x30>
 80029fe:	e146      	b.n	8002c8e <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002a00:	683b      	ldr	r3, [r7, #0]
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	2203      	movs	r2, #3
 8002a06:	4013      	ands	r3, r2
 8002a08:	2b01      	cmp	r3, #1
 8002a0a:	d005      	beq.n	8002a18 <HAL_GPIO_Init+0x48>
          ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002a0c:	683b      	ldr	r3, [r7, #0]
 8002a0e:	685b      	ldr	r3, [r3, #4]
 8002a10:	2203      	movs	r2, #3
 8002a12:	4013      	ands	r3, r2
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002a14:	2b02      	cmp	r3, #2
 8002a16:	d130      	bne.n	8002a7a <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	689b      	ldr	r3, [r3, #8]
 8002a1c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002a1e:	697b      	ldr	r3, [r7, #20]
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	2203      	movs	r2, #3
 8002a24:	409a      	lsls	r2, r3
 8002a26:	0013      	movs	r3, r2
 8002a28:	43da      	mvns	r2, r3
 8002a2a:	693b      	ldr	r3, [r7, #16]
 8002a2c:	4013      	ands	r3, r2
 8002a2e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002a30:	683b      	ldr	r3, [r7, #0]
 8002a32:	68da      	ldr	r2, [r3, #12]
 8002a34:	697b      	ldr	r3, [r7, #20]
 8002a36:	005b      	lsls	r3, r3, #1
 8002a38:	409a      	lsls	r2, r3
 8002a3a:	0013      	movs	r3, r2
 8002a3c:	693a      	ldr	r2, [r7, #16]
 8002a3e:	4313      	orrs	r3, r2
 8002a40:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	693a      	ldr	r2, [r7, #16]
 8002a46:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	685b      	ldr	r3, [r3, #4]
 8002a4c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002a4e:	2201      	movs	r2, #1
 8002a50:	697b      	ldr	r3, [r7, #20]
 8002a52:	409a      	lsls	r2, r3
 8002a54:	0013      	movs	r3, r2
 8002a56:	43da      	mvns	r2, r3
 8002a58:	693b      	ldr	r3, [r7, #16]
 8002a5a:	4013      	ands	r3, r2
 8002a5c:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002a5e:	683b      	ldr	r3, [r7, #0]
 8002a60:	685b      	ldr	r3, [r3, #4]
 8002a62:	091b      	lsrs	r3, r3, #4
 8002a64:	2201      	movs	r2, #1
 8002a66:	401a      	ands	r2, r3
 8002a68:	697b      	ldr	r3, [r7, #20]
 8002a6a:	409a      	lsls	r2, r3
 8002a6c:	0013      	movs	r3, r2
 8002a6e:	693a      	ldr	r2, [r7, #16]
 8002a70:	4313      	orrs	r3, r2
 8002a72:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	693a      	ldr	r2, [r7, #16]
 8002a78:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002a7a:	683b      	ldr	r3, [r7, #0]
 8002a7c:	685b      	ldr	r3, [r3, #4]
 8002a7e:	2203      	movs	r2, #3
 8002a80:	4013      	ands	r3, r2
 8002a82:	2b03      	cmp	r3, #3
 8002a84:	d017      	beq.n	8002ab6 <HAL_GPIO_Init+0xe6>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	68db      	ldr	r3, [r3, #12]
 8002a8a:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8002a8c:	697b      	ldr	r3, [r7, #20]
 8002a8e:	005b      	lsls	r3, r3, #1
 8002a90:	2203      	movs	r2, #3
 8002a92:	409a      	lsls	r2, r3
 8002a94:	0013      	movs	r3, r2
 8002a96:	43da      	mvns	r2, r3
 8002a98:	693b      	ldr	r3, [r7, #16]
 8002a9a:	4013      	ands	r3, r2
 8002a9c:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002a9e:	683b      	ldr	r3, [r7, #0]
 8002aa0:	689a      	ldr	r2, [r3, #8]
 8002aa2:	697b      	ldr	r3, [r7, #20]
 8002aa4:	005b      	lsls	r3, r3, #1
 8002aa6:	409a      	lsls	r2, r3
 8002aa8:	0013      	movs	r3, r2
 8002aaa:	693a      	ldr	r2, [r7, #16]
 8002aac:	4313      	orrs	r3, r2
 8002aae:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	693a      	ldr	r2, [r7, #16]
 8002ab4:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002ab6:	683b      	ldr	r3, [r7, #0]
 8002ab8:	685b      	ldr	r3, [r3, #4]
 8002aba:	2203      	movs	r2, #3
 8002abc:	4013      	ands	r3, r2
 8002abe:	2b02      	cmp	r3, #2
 8002ac0:	d123      	bne.n	8002b0a <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002ac2:	697b      	ldr	r3, [r7, #20]
 8002ac4:	08da      	lsrs	r2, r3, #3
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	3208      	adds	r2, #8
 8002aca:	0092      	lsls	r2, r2, #2
 8002acc:	58d3      	ldr	r3, [r2, r3]
 8002ace:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8002ad0:	697b      	ldr	r3, [r7, #20]
 8002ad2:	2207      	movs	r2, #7
 8002ad4:	4013      	ands	r3, r2
 8002ad6:	009b      	lsls	r3, r3, #2
 8002ad8:	220f      	movs	r2, #15
 8002ada:	409a      	lsls	r2, r3
 8002adc:	0013      	movs	r3, r2
 8002ade:	43da      	mvns	r2, r3
 8002ae0:	693b      	ldr	r3, [r7, #16]
 8002ae2:	4013      	ands	r3, r2
 8002ae4:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 8002ae6:	683b      	ldr	r3, [r7, #0]
 8002ae8:	691a      	ldr	r2, [r3, #16]
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	2107      	movs	r1, #7
 8002aee:	400b      	ands	r3, r1
 8002af0:	009b      	lsls	r3, r3, #2
 8002af2:	409a      	lsls	r2, r3
 8002af4:	0013      	movs	r3, r2
 8002af6:	693a      	ldr	r2, [r7, #16]
 8002af8:	4313      	orrs	r3, r2
 8002afa:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8002afc:	697b      	ldr	r3, [r7, #20]
 8002afe:	08da      	lsrs	r2, r3, #3
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	3208      	adds	r2, #8
 8002b04:	0092      	lsls	r2, r2, #2
 8002b06:	6939      	ldr	r1, [r7, #16]
 8002b08:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002b10:	697b      	ldr	r3, [r7, #20]
 8002b12:	005b      	lsls	r3, r3, #1
 8002b14:	2203      	movs	r2, #3
 8002b16:	409a      	lsls	r2, r3
 8002b18:	0013      	movs	r3, r2
 8002b1a:	43da      	mvns	r2, r3
 8002b1c:	693b      	ldr	r3, [r7, #16]
 8002b1e:	4013      	ands	r3, r2
 8002b20:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	685b      	ldr	r3, [r3, #4]
 8002b26:	2203      	movs	r2, #3
 8002b28:	401a      	ands	r2, r3
 8002b2a:	697b      	ldr	r3, [r7, #20]
 8002b2c:	005b      	lsls	r3, r3, #1
 8002b2e:	409a      	lsls	r2, r3
 8002b30:	0013      	movs	r3, r2
 8002b32:	693a      	ldr	r2, [r7, #16]
 8002b34:	4313      	orrs	r3, r2
 8002b36:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	693a      	ldr	r2, [r7, #16]
 8002b3c:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	685a      	ldr	r2, [r3, #4]
 8002b42:	23c0      	movs	r3, #192	; 0xc0
 8002b44:	029b      	lsls	r3, r3, #10
 8002b46:	4013      	ands	r3, r2
 8002b48:	d100      	bne.n	8002b4c <HAL_GPIO_Init+0x17c>
 8002b4a:	e0a0      	b.n	8002c8e <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002b4c:	4b57      	ldr	r3, [pc, #348]	; (8002cac <HAL_GPIO_Init+0x2dc>)
 8002b4e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002b50:	4b56      	ldr	r3, [pc, #344]	; (8002cac <HAL_GPIO_Init+0x2dc>)
 8002b52:	2101      	movs	r1, #1
 8002b54:	430a      	orrs	r2, r1
 8002b56:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 8002b58:	4a55      	ldr	r2, [pc, #340]	; (8002cb0 <HAL_GPIO_Init+0x2e0>)
 8002b5a:	697b      	ldr	r3, [r7, #20]
 8002b5c:	089b      	lsrs	r3, r3, #2
 8002b5e:	3302      	adds	r3, #2
 8002b60:	009b      	lsls	r3, r3, #2
 8002b62:	589b      	ldr	r3, [r3, r2]
 8002b64:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 8002b66:	697b      	ldr	r3, [r7, #20]
 8002b68:	2203      	movs	r2, #3
 8002b6a:	4013      	ands	r3, r2
 8002b6c:	009b      	lsls	r3, r3, #2
 8002b6e:	220f      	movs	r2, #15
 8002b70:	409a      	lsls	r2, r3
 8002b72:	0013      	movs	r3, r2
 8002b74:	43da      	mvns	r2, r3
 8002b76:	693b      	ldr	r3, [r7, #16]
 8002b78:	4013      	ands	r3, r2
 8002b7a:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002b7c:	687a      	ldr	r2, [r7, #4]
 8002b7e:	23a0      	movs	r3, #160	; 0xa0
 8002b80:	05db      	lsls	r3, r3, #23
 8002b82:	429a      	cmp	r2, r3
 8002b84:	d01f      	beq.n	8002bc6 <HAL_GPIO_Init+0x1f6>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	4a4a      	ldr	r2, [pc, #296]	; (8002cb4 <HAL_GPIO_Init+0x2e4>)
 8002b8a:	4293      	cmp	r3, r2
 8002b8c:	d019      	beq.n	8002bc2 <HAL_GPIO_Init+0x1f2>
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	4a49      	ldr	r2, [pc, #292]	; (8002cb8 <HAL_GPIO_Init+0x2e8>)
 8002b92:	4293      	cmp	r3, r2
 8002b94:	d013      	beq.n	8002bbe <HAL_GPIO_Init+0x1ee>
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	4a48      	ldr	r2, [pc, #288]	; (8002cbc <HAL_GPIO_Init+0x2ec>)
 8002b9a:	4293      	cmp	r3, r2
 8002b9c:	d00d      	beq.n	8002bba <HAL_GPIO_Init+0x1ea>
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	4a47      	ldr	r2, [pc, #284]	; (8002cc0 <HAL_GPIO_Init+0x2f0>)
 8002ba2:	4293      	cmp	r3, r2
 8002ba4:	d007      	beq.n	8002bb6 <HAL_GPIO_Init+0x1e6>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	4a46      	ldr	r2, [pc, #280]	; (8002cc4 <HAL_GPIO_Init+0x2f4>)
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d101      	bne.n	8002bb2 <HAL_GPIO_Init+0x1e2>
 8002bae:	2305      	movs	r3, #5
 8002bb0:	e00a      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bb2:	2306      	movs	r3, #6
 8002bb4:	e008      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bb6:	2304      	movs	r3, #4
 8002bb8:	e006      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bba:	2303      	movs	r3, #3
 8002bbc:	e004      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bbe:	2302      	movs	r3, #2
 8002bc0:	e002      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bc2:	2301      	movs	r3, #1
 8002bc4:	e000      	b.n	8002bc8 <HAL_GPIO_Init+0x1f8>
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	697a      	ldr	r2, [r7, #20]
 8002bca:	2103      	movs	r1, #3
 8002bcc:	400a      	ands	r2, r1
 8002bce:	0092      	lsls	r2, r2, #2
 8002bd0:	4093      	lsls	r3, r2
 8002bd2:	693a      	ldr	r2, [r7, #16]
 8002bd4:	4313      	orrs	r3, r2
 8002bd6:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002bd8:	4935      	ldr	r1, [pc, #212]	; (8002cb0 <HAL_GPIO_Init+0x2e0>)
 8002bda:	697b      	ldr	r3, [r7, #20]
 8002bdc:	089b      	lsrs	r3, r3, #2
 8002bde:	3302      	adds	r3, #2
 8002be0:	009b      	lsls	r3, r3, #2
 8002be2:	693a      	ldr	r2, [r7, #16]
 8002be4:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8002be6:	4b38      	ldr	r3, [pc, #224]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	43da      	mvns	r2, r3
 8002bf0:	693b      	ldr	r3, [r7, #16]
 8002bf2:	4013      	ands	r3, r2
 8002bf4:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	685a      	ldr	r2, [r3, #4]
 8002bfa:	2380      	movs	r3, #128	; 0x80
 8002bfc:	025b      	lsls	r3, r3, #9
 8002bfe:	4013      	ands	r3, r2
 8002c00:	d003      	beq.n	8002c0a <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 8002c02:	693a      	ldr	r2, [r7, #16]
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	4313      	orrs	r3, r2
 8002c08:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8002c0a:	4b2f      	ldr	r3, [pc, #188]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c0c:	693a      	ldr	r2, [r7, #16]
 8002c0e:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8002c10:	4b2d      	ldr	r3, [pc, #180]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c12:	685b      	ldr	r3, [r3, #4]
 8002c14:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002c16:	68fb      	ldr	r3, [r7, #12]
 8002c18:	43da      	mvns	r2, r3
 8002c1a:	693b      	ldr	r3, [r7, #16]
 8002c1c:	4013      	ands	r3, r2
 8002c1e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002c20:	683b      	ldr	r3, [r7, #0]
 8002c22:	685a      	ldr	r2, [r3, #4]
 8002c24:	2380      	movs	r3, #128	; 0x80
 8002c26:	029b      	lsls	r3, r3, #10
 8002c28:	4013      	ands	r3, r2
 8002c2a:	d003      	beq.n	8002c34 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8002c2c:	693a      	ldr	r2, [r7, #16]
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	4313      	orrs	r3, r2
 8002c32:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8002c34:	4b24      	ldr	r3, [pc, #144]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c36:	693a      	ldr	r2, [r7, #16]
 8002c38:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002c3a:	4b23      	ldr	r3, [pc, #140]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c3c:	689b      	ldr	r3, [r3, #8]
 8002c3e:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002c40:	68fb      	ldr	r3, [r7, #12]
 8002c42:	43da      	mvns	r2, r3
 8002c44:	693b      	ldr	r3, [r7, #16]
 8002c46:	4013      	ands	r3, r2
 8002c48:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002c4a:	683b      	ldr	r3, [r7, #0]
 8002c4c:	685a      	ldr	r2, [r3, #4]
 8002c4e:	2380      	movs	r3, #128	; 0x80
 8002c50:	035b      	lsls	r3, r3, #13
 8002c52:	4013      	ands	r3, r2
 8002c54:	d003      	beq.n	8002c5e <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 8002c56:	693a      	ldr	r2, [r7, #16]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	4313      	orrs	r3, r2
 8002c5c:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8002c5e:	4b1a      	ldr	r3, [pc, #104]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c60:	693a      	ldr	r2, [r7, #16]
 8002c62:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8002c64:	4b18      	ldr	r3, [pc, #96]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c66:	68db      	ldr	r3, [r3, #12]
 8002c68:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002c6a:	68fb      	ldr	r3, [r7, #12]
 8002c6c:	43da      	mvns	r2, r3
 8002c6e:	693b      	ldr	r3, [r7, #16]
 8002c70:	4013      	ands	r3, r2
 8002c72:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002c74:	683b      	ldr	r3, [r7, #0]
 8002c76:	685a      	ldr	r2, [r3, #4]
 8002c78:	2380      	movs	r3, #128	; 0x80
 8002c7a:	039b      	lsls	r3, r3, #14
 8002c7c:	4013      	ands	r3, r2
 8002c7e:	d003      	beq.n	8002c88 <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 8002c80:	693a      	ldr	r2, [r7, #16]
 8002c82:	68fb      	ldr	r3, [r7, #12]
 8002c84:	4313      	orrs	r3, r2
 8002c86:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8002c88:	4b0f      	ldr	r3, [pc, #60]	; (8002cc8 <HAL_GPIO_Init+0x2f8>)
 8002c8a:	693a      	ldr	r2, [r7, #16]
 8002c8c:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 8002c8e:	697b      	ldr	r3, [r7, #20]
 8002c90:	3301      	adds	r3, #1
 8002c92:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 8002c94:	683b      	ldr	r3, [r7, #0]
 8002c96:	681a      	ldr	r2, [r3, #0]
 8002c98:	697b      	ldr	r3, [r7, #20]
 8002c9a:	40da      	lsrs	r2, r3
 8002c9c:	1e13      	subs	r3, r2, #0
 8002c9e:	d000      	beq.n	8002ca2 <HAL_GPIO_Init+0x2d2>
 8002ca0:	e6a2      	b.n	80029e8 <HAL_GPIO_Init+0x18>
  }
}
 8002ca2:	46c0      	nop			; (mov r8, r8)
 8002ca4:	46c0      	nop			; (mov r8, r8)
 8002ca6:	46bd      	mov	sp, r7
 8002ca8:	b006      	add	sp, #24
 8002caa:	bd80      	pop	{r7, pc}
 8002cac:	40021000 	.word	0x40021000
 8002cb0:	40010000 	.word	0x40010000
 8002cb4:	50000400 	.word	0x50000400
 8002cb8:	50000800 	.word	0x50000800
 8002cbc:	50000c00 	.word	0x50000c00
 8002cc0:	50001000 	.word	0x50001000
 8002cc4:	50001c00 	.word	0x50001c00
 8002cc8:	40010400 	.word	0x40010400

08002ccc <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002ccc:	b5b0      	push	{r4, r5, r7, lr}
 8002cce:	b08a      	sub	sp, #40	; 0x28
 8002cd0:	af00      	add	r7, sp, #0
 8002cd2:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d102      	bne.n	8002ce0 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8002cda:	2301      	movs	r3, #1
 8002cdc:	f000 fbbf 	bl	800345e <HAL_RCC_OscConfig+0x792>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002ce0:	4bc9      	ldr	r3, [pc, #804]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002ce2:	68db      	ldr	r3, [r3, #12]
 8002ce4:	220c      	movs	r2, #12
 8002ce6:	4013      	ands	r3, r2
 8002ce8:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002cea:	4bc7      	ldr	r3, [pc, #796]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002cec:	68da      	ldr	r2, [r3, #12]
 8002cee:	2380      	movs	r3, #128	; 0x80
 8002cf0:	025b      	lsls	r3, r3, #9
 8002cf2:	4013      	ands	r3, r2
 8002cf4:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	2201      	movs	r2, #1
 8002cfc:	4013      	ands	r3, r2
 8002cfe:	d100      	bne.n	8002d02 <HAL_RCC_OscConfig+0x36>
 8002d00:	e07e      	b.n	8002e00 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8002d02:	69fb      	ldr	r3, [r7, #28]
 8002d04:	2b08      	cmp	r3, #8
 8002d06:	d007      	beq.n	8002d18 <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8002d08:	69fb      	ldr	r3, [r7, #28]
 8002d0a:	2b0c      	cmp	r3, #12
 8002d0c:	d112      	bne.n	8002d34 <HAL_RCC_OscConfig+0x68>
 8002d0e:	69ba      	ldr	r2, [r7, #24]
 8002d10:	2380      	movs	r3, #128	; 0x80
 8002d12:	025b      	lsls	r3, r3, #9
 8002d14:	429a      	cmp	r2, r3
 8002d16:	d10d      	bne.n	8002d34 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002d18:	4bbb      	ldr	r3, [pc, #748]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d1a:	681a      	ldr	r2, [r3, #0]
 8002d1c:	2380      	movs	r3, #128	; 0x80
 8002d1e:	029b      	lsls	r3, r3, #10
 8002d20:	4013      	ands	r3, r2
 8002d22:	d100      	bne.n	8002d26 <HAL_RCC_OscConfig+0x5a>
 8002d24:	e06b      	b.n	8002dfe <HAL_RCC_OscConfig+0x132>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	685b      	ldr	r3, [r3, #4]
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d167      	bne.n	8002dfe <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 8002d2e:	2301      	movs	r3, #1
 8002d30:	f000 fb95 	bl	800345e <HAL_RCC_OscConfig+0x792>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	685a      	ldr	r2, [r3, #4]
 8002d38:	2380      	movs	r3, #128	; 0x80
 8002d3a:	025b      	lsls	r3, r3, #9
 8002d3c:	429a      	cmp	r2, r3
 8002d3e:	d107      	bne.n	8002d50 <HAL_RCC_OscConfig+0x84>
 8002d40:	4bb1      	ldr	r3, [pc, #708]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d42:	681a      	ldr	r2, [r3, #0]
 8002d44:	4bb0      	ldr	r3, [pc, #704]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d46:	2180      	movs	r1, #128	; 0x80
 8002d48:	0249      	lsls	r1, r1, #9
 8002d4a:	430a      	orrs	r2, r1
 8002d4c:	601a      	str	r2, [r3, #0]
 8002d4e:	e027      	b.n	8002da0 <HAL_RCC_OscConfig+0xd4>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	685a      	ldr	r2, [r3, #4]
 8002d54:	23a0      	movs	r3, #160	; 0xa0
 8002d56:	02db      	lsls	r3, r3, #11
 8002d58:	429a      	cmp	r2, r3
 8002d5a:	d10e      	bne.n	8002d7a <HAL_RCC_OscConfig+0xae>
 8002d5c:	4baa      	ldr	r3, [pc, #680]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d5e:	681a      	ldr	r2, [r3, #0]
 8002d60:	4ba9      	ldr	r3, [pc, #676]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d62:	2180      	movs	r1, #128	; 0x80
 8002d64:	02c9      	lsls	r1, r1, #11
 8002d66:	430a      	orrs	r2, r1
 8002d68:	601a      	str	r2, [r3, #0]
 8002d6a:	4ba7      	ldr	r3, [pc, #668]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d6c:	681a      	ldr	r2, [r3, #0]
 8002d6e:	4ba6      	ldr	r3, [pc, #664]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d70:	2180      	movs	r1, #128	; 0x80
 8002d72:	0249      	lsls	r1, r1, #9
 8002d74:	430a      	orrs	r2, r1
 8002d76:	601a      	str	r2, [r3, #0]
 8002d78:	e012      	b.n	8002da0 <HAL_RCC_OscConfig+0xd4>
 8002d7a:	4ba3      	ldr	r3, [pc, #652]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d7c:	681a      	ldr	r2, [r3, #0]
 8002d7e:	4ba2      	ldr	r3, [pc, #648]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d80:	49a2      	ldr	r1, [pc, #648]	; (800300c <HAL_RCC_OscConfig+0x340>)
 8002d82:	400a      	ands	r2, r1
 8002d84:	601a      	str	r2, [r3, #0]
 8002d86:	4ba0      	ldr	r3, [pc, #640]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d88:	681a      	ldr	r2, [r3, #0]
 8002d8a:	2380      	movs	r3, #128	; 0x80
 8002d8c:	025b      	lsls	r3, r3, #9
 8002d8e:	4013      	ands	r3, r2
 8002d90:	60fb      	str	r3, [r7, #12]
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	4b9c      	ldr	r3, [pc, #624]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d96:	681a      	ldr	r2, [r3, #0]
 8002d98:	4b9b      	ldr	r3, [pc, #620]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002d9a:	499d      	ldr	r1, [pc, #628]	; (8003010 <HAL_RCC_OscConfig+0x344>)
 8002d9c:	400a      	ands	r2, r1
 8002d9e:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	685b      	ldr	r3, [r3, #4]
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d015      	beq.n	8002dd4 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002da8:	f7ff fd54 	bl	8002854 <HAL_GetTick>
 8002dac:	0003      	movs	r3, r0
 8002dae:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002db0:	e009      	b.n	8002dc6 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002db2:	f7ff fd4f 	bl	8002854 <HAL_GetTick>
 8002db6:	0002      	movs	r2, r0
 8002db8:	697b      	ldr	r3, [r7, #20]
 8002dba:	1ad3      	subs	r3, r2, r3
 8002dbc:	2b64      	cmp	r3, #100	; 0x64
 8002dbe:	d902      	bls.n	8002dc6 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8002dc0:	2303      	movs	r3, #3
 8002dc2:	f000 fb4c 	bl	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002dc6:	4b90      	ldr	r3, [pc, #576]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002dc8:	681a      	ldr	r2, [r3, #0]
 8002dca:	2380      	movs	r3, #128	; 0x80
 8002dcc:	029b      	lsls	r3, r3, #10
 8002dce:	4013      	ands	r3, r2
 8002dd0:	d0ef      	beq.n	8002db2 <HAL_RCC_OscConfig+0xe6>
 8002dd2:	e015      	b.n	8002e00 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002dd4:	f7ff fd3e 	bl	8002854 <HAL_GetTick>
 8002dd8:	0003      	movs	r3, r0
 8002dda:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002ddc:	e008      	b.n	8002df0 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002dde:	f7ff fd39 	bl	8002854 <HAL_GetTick>
 8002de2:	0002      	movs	r2, r0
 8002de4:	697b      	ldr	r3, [r7, #20]
 8002de6:	1ad3      	subs	r3, r2, r3
 8002de8:	2b64      	cmp	r3, #100	; 0x64
 8002dea:	d901      	bls.n	8002df0 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 8002dec:	2303      	movs	r3, #3
 8002dee:	e336      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002df0:	4b85      	ldr	r3, [pc, #532]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002df2:	681a      	ldr	r2, [r3, #0]
 8002df4:	2380      	movs	r3, #128	; 0x80
 8002df6:	029b      	lsls	r3, r3, #10
 8002df8:	4013      	ands	r3, r2
 8002dfa:	d1f0      	bne.n	8002dde <HAL_RCC_OscConfig+0x112>
 8002dfc:	e000      	b.n	8002e00 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002dfe:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	2202      	movs	r2, #2
 8002e06:	4013      	ands	r3, r2
 8002e08:	d100      	bne.n	8002e0c <HAL_RCC_OscConfig+0x140>
 8002e0a:	e099      	b.n	8002f40 <HAL_RCC_OscConfig+0x274>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	68db      	ldr	r3, [r3, #12]
 8002e10:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002e12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e14:	2220      	movs	r2, #32
 8002e16:	4013      	ands	r3, r2
 8002e18:	d009      	beq.n	8002e2e <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002e1a:	4b7b      	ldr	r3, [pc, #492]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e1c:	681a      	ldr	r2, [r3, #0]
 8002e1e:	4b7a      	ldr	r3, [pc, #488]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e20:	2120      	movs	r1, #32
 8002e22:	430a      	orrs	r2, r1
 8002e24:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 8002e26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e28:	2220      	movs	r2, #32
 8002e2a:	4393      	bics	r3, r2
 8002e2c:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002e2e:	69fb      	ldr	r3, [r7, #28]
 8002e30:	2b04      	cmp	r3, #4
 8002e32:	d005      	beq.n	8002e40 <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8002e34:	69fb      	ldr	r3, [r7, #28]
 8002e36:	2b0c      	cmp	r3, #12
 8002e38:	d13e      	bne.n	8002eb8 <HAL_RCC_OscConfig+0x1ec>
 8002e3a:	69bb      	ldr	r3, [r7, #24]
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	d13b      	bne.n	8002eb8 <HAL_RCC_OscConfig+0x1ec>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8002e40:	4b71      	ldr	r3, [pc, #452]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	2204      	movs	r2, #4
 8002e46:	4013      	ands	r3, r2
 8002e48:	d004      	beq.n	8002e54 <HAL_RCC_OscConfig+0x188>
 8002e4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d101      	bne.n	8002e54 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8002e50:	2301      	movs	r3, #1
 8002e52:	e304      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002e54:	4b6c      	ldr	r3, [pc, #432]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e56:	685b      	ldr	r3, [r3, #4]
 8002e58:	4a6e      	ldr	r2, [pc, #440]	; (8003014 <HAL_RCC_OscConfig+0x348>)
 8002e5a:	4013      	ands	r3, r2
 8002e5c:	0019      	movs	r1, r3
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	691b      	ldr	r3, [r3, #16]
 8002e62:	021a      	lsls	r2, r3, #8
 8002e64:	4b68      	ldr	r3, [pc, #416]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e66:	430a      	orrs	r2, r1
 8002e68:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002e6a:	4b67      	ldr	r3, [pc, #412]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	2209      	movs	r2, #9
 8002e70:	4393      	bics	r3, r2
 8002e72:	0019      	movs	r1, r3
 8002e74:	4b64      	ldr	r3, [pc, #400]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e76:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002e78:	430a      	orrs	r2, r1
 8002e7a:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002e7c:	f000 fc42 	bl	8003704 <HAL_RCC_GetSysClockFreq>
 8002e80:	0001      	movs	r1, r0
 8002e82:	4b61      	ldr	r3, [pc, #388]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002e84:	68db      	ldr	r3, [r3, #12]
 8002e86:	091b      	lsrs	r3, r3, #4
 8002e88:	220f      	movs	r2, #15
 8002e8a:	4013      	ands	r3, r2
 8002e8c:	4a62      	ldr	r2, [pc, #392]	; (8003018 <HAL_RCC_OscConfig+0x34c>)
 8002e8e:	5cd3      	ldrb	r3, [r2, r3]
 8002e90:	000a      	movs	r2, r1
 8002e92:	40da      	lsrs	r2, r3
 8002e94:	4b61      	ldr	r3, [pc, #388]	; (800301c <HAL_RCC_OscConfig+0x350>)
 8002e96:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (uwTickPrio);
 8002e98:	4b61      	ldr	r3, [pc, #388]	; (8003020 <HAL_RCC_OscConfig+0x354>)
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	2513      	movs	r5, #19
 8002e9e:	197c      	adds	r4, r7, r5
 8002ea0:	0018      	movs	r0, r3
 8002ea2:	f7ff fc91 	bl	80027c8 <HAL_InitTick>
 8002ea6:	0003      	movs	r3, r0
 8002ea8:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8002eaa:	197b      	adds	r3, r7, r5
 8002eac:	781b      	ldrb	r3, [r3, #0]
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d046      	beq.n	8002f40 <HAL_RCC_OscConfig+0x274>
      {
        return status;
 8002eb2:	197b      	adds	r3, r7, r5
 8002eb4:	781b      	ldrb	r3, [r3, #0]
 8002eb6:	e2d2      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8002eb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d027      	beq.n	8002f0e <HAL_RCC_OscConfig+0x242>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002ebe:	4b52      	ldr	r3, [pc, #328]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	2209      	movs	r2, #9
 8002ec4:	4393      	bics	r3, r2
 8002ec6:	0019      	movs	r1, r3
 8002ec8:	4b4f      	ldr	r3, [pc, #316]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002eca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002ecc:	430a      	orrs	r2, r1
 8002ece:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002ed0:	f7ff fcc0 	bl	8002854 <HAL_GetTick>
 8002ed4:	0003      	movs	r3, r0
 8002ed6:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002ed8:	e008      	b.n	8002eec <HAL_RCC_OscConfig+0x220>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002eda:	f7ff fcbb 	bl	8002854 <HAL_GetTick>
 8002ede:	0002      	movs	r2, r0
 8002ee0:	697b      	ldr	r3, [r7, #20]
 8002ee2:	1ad3      	subs	r3, r2, r3
 8002ee4:	2b02      	cmp	r3, #2
 8002ee6:	d901      	bls.n	8002eec <HAL_RCC_OscConfig+0x220>
          {
            return HAL_TIMEOUT;
 8002ee8:	2303      	movs	r3, #3
 8002eea:	e2b8      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002eec:	4b46      	ldr	r3, [pc, #280]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	2204      	movs	r2, #4
 8002ef2:	4013      	ands	r3, r2
 8002ef4:	d0f1      	beq.n	8002eda <HAL_RCC_OscConfig+0x20e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002ef6:	4b44      	ldr	r3, [pc, #272]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002ef8:	685b      	ldr	r3, [r3, #4]
 8002efa:	4a46      	ldr	r2, [pc, #280]	; (8003014 <HAL_RCC_OscConfig+0x348>)
 8002efc:	4013      	ands	r3, r2
 8002efe:	0019      	movs	r1, r3
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	691b      	ldr	r3, [r3, #16]
 8002f04:	021a      	lsls	r2, r3, #8
 8002f06:	4b40      	ldr	r3, [pc, #256]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f08:	430a      	orrs	r2, r1
 8002f0a:	605a      	str	r2, [r3, #4]
 8002f0c:	e018      	b.n	8002f40 <HAL_RCC_OscConfig+0x274>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002f0e:	4b3e      	ldr	r3, [pc, #248]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f10:	681a      	ldr	r2, [r3, #0]
 8002f12:	4b3d      	ldr	r3, [pc, #244]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f14:	2101      	movs	r1, #1
 8002f16:	438a      	bics	r2, r1
 8002f18:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002f1a:	f7ff fc9b 	bl	8002854 <HAL_GetTick>
 8002f1e:	0003      	movs	r3, r0
 8002f20:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002f22:	e008      	b.n	8002f36 <HAL_RCC_OscConfig+0x26a>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002f24:	f7ff fc96 	bl	8002854 <HAL_GetTick>
 8002f28:	0002      	movs	r2, r0
 8002f2a:	697b      	ldr	r3, [r7, #20]
 8002f2c:	1ad3      	subs	r3, r2, r3
 8002f2e:	2b02      	cmp	r3, #2
 8002f30:	d901      	bls.n	8002f36 <HAL_RCC_OscConfig+0x26a>
          {
            return HAL_TIMEOUT;
 8002f32:	2303      	movs	r3, #3
 8002f34:	e293      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002f36:	4b34      	ldr	r3, [pc, #208]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	2204      	movs	r2, #4
 8002f3c:	4013      	ands	r3, r2
 8002f3e:	d1f1      	bne.n	8002f24 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	2210      	movs	r2, #16
 8002f46:	4013      	ands	r3, r2
 8002f48:	d100      	bne.n	8002f4c <HAL_RCC_OscConfig+0x280>
 8002f4a:	e0a2      	b.n	8003092 <HAL_RCC_OscConfig+0x3c6>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8002f4c:	69fb      	ldr	r3, [r7, #28]
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d140      	bne.n	8002fd4 <HAL_RCC_OscConfig+0x308>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8002f52:	4b2d      	ldr	r3, [pc, #180]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f54:	681a      	ldr	r2, [r3, #0]
 8002f56:	2380      	movs	r3, #128	; 0x80
 8002f58:	009b      	lsls	r3, r3, #2
 8002f5a:	4013      	ands	r3, r2
 8002f5c:	d005      	beq.n	8002f6a <HAL_RCC_OscConfig+0x29e>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	69db      	ldr	r3, [r3, #28]
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d101      	bne.n	8002f6a <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8002f66:	2301      	movs	r3, #1
 8002f68:	e279      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002f6a:	4b27      	ldr	r3, [pc, #156]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f6c:	685b      	ldr	r3, [r3, #4]
 8002f6e:	4a2d      	ldr	r2, [pc, #180]	; (8003024 <HAL_RCC_OscConfig+0x358>)
 8002f70:	4013      	ands	r3, r2
 8002f72:	0019      	movs	r1, r3
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002f78:	4b23      	ldr	r3, [pc, #140]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f7a:	430a      	orrs	r2, r1
 8002f7c:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002f7e:	4b22      	ldr	r3, [pc, #136]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f80:	685b      	ldr	r3, [r3, #4]
 8002f82:	021b      	lsls	r3, r3, #8
 8002f84:	0a19      	lsrs	r1, r3, #8
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	6a1b      	ldr	r3, [r3, #32]
 8002f8a:	061a      	lsls	r2, r3, #24
 8002f8c:	4b1e      	ldr	r3, [pc, #120]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002f8e:	430a      	orrs	r2, r1
 8002f90:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f96:	0b5b      	lsrs	r3, r3, #13
 8002f98:	3301      	adds	r3, #1
 8002f9a:	2280      	movs	r2, #128	; 0x80
 8002f9c:	0212      	lsls	r2, r2, #8
 8002f9e:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002fa0:	4b19      	ldr	r3, [pc, #100]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002fa2:	68db      	ldr	r3, [r3, #12]
 8002fa4:	091b      	lsrs	r3, r3, #4
 8002fa6:	210f      	movs	r1, #15
 8002fa8:	400b      	ands	r3, r1
 8002faa:	491b      	ldr	r1, [pc, #108]	; (8003018 <HAL_RCC_OscConfig+0x34c>)
 8002fac:	5ccb      	ldrb	r3, [r1, r3]
 8002fae:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002fb0:	4b1a      	ldr	r3, [pc, #104]	; (800301c <HAL_RCC_OscConfig+0x350>)
 8002fb2:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (uwTickPrio);
 8002fb4:	4b1a      	ldr	r3, [pc, #104]	; (8003020 <HAL_RCC_OscConfig+0x354>)
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	2513      	movs	r5, #19
 8002fba:	197c      	adds	r4, r7, r5
 8002fbc:	0018      	movs	r0, r3
 8002fbe:	f7ff fc03 	bl	80027c8 <HAL_InitTick>
 8002fc2:	0003      	movs	r3, r0
 8002fc4:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8002fc6:	197b      	adds	r3, r7, r5
 8002fc8:	781b      	ldrb	r3, [r3, #0]
 8002fca:	2b00      	cmp	r3, #0
 8002fcc:	d061      	beq.n	8003092 <HAL_RCC_OscConfig+0x3c6>
        {
          return status;
 8002fce:	197b      	adds	r3, r7, r5
 8002fd0:	781b      	ldrb	r3, [r3, #0]
 8002fd2:	e244      	b.n	800345e <HAL_RCC_OscConfig+0x792>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	69db      	ldr	r3, [r3, #28]
 8002fd8:	2b00      	cmp	r3, #0
 8002fda:	d040      	beq.n	800305e <HAL_RCC_OscConfig+0x392>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8002fdc:	4b0a      	ldr	r3, [pc, #40]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002fde:	681a      	ldr	r2, [r3, #0]
 8002fe0:	4b09      	ldr	r3, [pc, #36]	; (8003008 <HAL_RCC_OscConfig+0x33c>)
 8002fe2:	2180      	movs	r1, #128	; 0x80
 8002fe4:	0049      	lsls	r1, r1, #1
 8002fe6:	430a      	orrs	r2, r1
 8002fe8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002fea:	f7ff fc33 	bl	8002854 <HAL_GetTick>
 8002fee:	0003      	movs	r3, r0
 8002ff0:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002ff2:	e019      	b.n	8003028 <HAL_RCC_OscConfig+0x35c>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002ff4:	f7ff fc2e 	bl	8002854 <HAL_GetTick>
 8002ff8:	0002      	movs	r2, r0
 8002ffa:	697b      	ldr	r3, [r7, #20]
 8002ffc:	1ad3      	subs	r3, r2, r3
 8002ffe:	2b02      	cmp	r3, #2
 8003000:	d912      	bls.n	8003028 <HAL_RCC_OscConfig+0x35c>
          {
            return HAL_TIMEOUT;
 8003002:	2303      	movs	r3, #3
 8003004:	e22b      	b.n	800345e <HAL_RCC_OscConfig+0x792>
 8003006:	46c0      	nop			; (mov r8, r8)
 8003008:	40021000 	.word	0x40021000
 800300c:	fffeffff 	.word	0xfffeffff
 8003010:	fffbffff 	.word	0xfffbffff
 8003014:	ffffe0ff 	.word	0xffffe0ff
 8003018:	08006f70 	.word	0x08006f70
 800301c:	20000000 	.word	0x20000000
 8003020:	20000004 	.word	0x20000004
 8003024:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003028:	4bca      	ldr	r3, [pc, #808]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800302a:	681a      	ldr	r2, [r3, #0]
 800302c:	2380      	movs	r3, #128	; 0x80
 800302e:	009b      	lsls	r3, r3, #2
 8003030:	4013      	ands	r3, r2
 8003032:	d0df      	beq.n	8002ff4 <HAL_RCC_OscConfig+0x328>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8003034:	4bc7      	ldr	r3, [pc, #796]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003036:	685b      	ldr	r3, [r3, #4]
 8003038:	4ac7      	ldr	r2, [pc, #796]	; (8003358 <HAL_RCC_OscConfig+0x68c>)
 800303a:	4013      	ands	r3, r2
 800303c:	0019      	movs	r1, r3
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003042:	4bc4      	ldr	r3, [pc, #784]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003044:	430a      	orrs	r2, r1
 8003046:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8003048:	4bc2      	ldr	r3, [pc, #776]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800304a:	685b      	ldr	r3, [r3, #4]
 800304c:	021b      	lsls	r3, r3, #8
 800304e:	0a19      	lsrs	r1, r3, #8
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	6a1b      	ldr	r3, [r3, #32]
 8003054:	061a      	lsls	r2, r3, #24
 8003056:	4bbf      	ldr	r3, [pc, #764]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003058:	430a      	orrs	r2, r1
 800305a:	605a      	str	r2, [r3, #4]
 800305c:	e019      	b.n	8003092 <HAL_RCC_OscConfig+0x3c6>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 800305e:	4bbd      	ldr	r3, [pc, #756]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003060:	681a      	ldr	r2, [r3, #0]
 8003062:	4bbc      	ldr	r3, [pc, #752]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003064:	49bd      	ldr	r1, [pc, #756]	; (800335c <HAL_RCC_OscConfig+0x690>)
 8003066:	400a      	ands	r2, r1
 8003068:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800306a:	f7ff fbf3 	bl	8002854 <HAL_GetTick>
 800306e:	0003      	movs	r3, r0
 8003070:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8003072:	e008      	b.n	8003086 <HAL_RCC_OscConfig+0x3ba>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8003074:	f7ff fbee 	bl	8002854 <HAL_GetTick>
 8003078:	0002      	movs	r2, r0
 800307a:	697b      	ldr	r3, [r7, #20]
 800307c:	1ad3      	subs	r3, r2, r3
 800307e:	2b02      	cmp	r3, #2
 8003080:	d901      	bls.n	8003086 <HAL_RCC_OscConfig+0x3ba>
          {
            return HAL_TIMEOUT;
 8003082:	2303      	movs	r3, #3
 8003084:	e1eb      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8003086:	4bb3      	ldr	r3, [pc, #716]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003088:	681a      	ldr	r2, [r3, #0]
 800308a:	2380      	movs	r3, #128	; 0x80
 800308c:	009b      	lsls	r3, r3, #2
 800308e:	4013      	ands	r3, r2
 8003090:	d1f0      	bne.n	8003074 <HAL_RCC_OscConfig+0x3a8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	2208      	movs	r2, #8
 8003098:	4013      	ands	r3, r2
 800309a:	d036      	beq.n	800310a <HAL_RCC_OscConfig+0x43e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	695b      	ldr	r3, [r3, #20]
 80030a0:	2b00      	cmp	r3, #0
 80030a2:	d019      	beq.n	80030d8 <HAL_RCC_OscConfig+0x40c>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80030a4:	4bab      	ldr	r3, [pc, #684]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80030a6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80030a8:	4baa      	ldr	r3, [pc, #680]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80030aa:	2101      	movs	r1, #1
 80030ac:	430a      	orrs	r2, r1
 80030ae:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80030b0:	f7ff fbd0 	bl	8002854 <HAL_GetTick>
 80030b4:	0003      	movs	r3, r0
 80030b6:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80030b8:	e008      	b.n	80030cc <HAL_RCC_OscConfig+0x400>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80030ba:	f7ff fbcb 	bl	8002854 <HAL_GetTick>
 80030be:	0002      	movs	r2, r0
 80030c0:	697b      	ldr	r3, [r7, #20]
 80030c2:	1ad3      	subs	r3, r2, r3
 80030c4:	2b02      	cmp	r3, #2
 80030c6:	d901      	bls.n	80030cc <HAL_RCC_OscConfig+0x400>
        {
          return HAL_TIMEOUT;
 80030c8:	2303      	movs	r3, #3
 80030ca:	e1c8      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80030cc:	4ba1      	ldr	r3, [pc, #644]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80030ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80030d0:	2202      	movs	r2, #2
 80030d2:	4013      	ands	r3, r2
 80030d4:	d0f1      	beq.n	80030ba <HAL_RCC_OscConfig+0x3ee>
 80030d6:	e018      	b.n	800310a <HAL_RCC_OscConfig+0x43e>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80030d8:	4b9e      	ldr	r3, [pc, #632]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80030da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80030dc:	4b9d      	ldr	r3, [pc, #628]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80030de:	2101      	movs	r1, #1
 80030e0:	438a      	bics	r2, r1
 80030e2:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80030e4:	f7ff fbb6 	bl	8002854 <HAL_GetTick>
 80030e8:	0003      	movs	r3, r0
 80030ea:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80030ec:	e008      	b.n	8003100 <HAL_RCC_OscConfig+0x434>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80030ee:	f7ff fbb1 	bl	8002854 <HAL_GetTick>
 80030f2:	0002      	movs	r2, r0
 80030f4:	697b      	ldr	r3, [r7, #20]
 80030f6:	1ad3      	subs	r3, r2, r3
 80030f8:	2b02      	cmp	r3, #2
 80030fa:	d901      	bls.n	8003100 <HAL_RCC_OscConfig+0x434>
        {
          return HAL_TIMEOUT;
 80030fc:	2303      	movs	r3, #3
 80030fe:	e1ae      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8003100:	4b94      	ldr	r3, [pc, #592]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003102:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003104:	2202      	movs	r2, #2
 8003106:	4013      	ands	r3, r2
 8003108:	d1f1      	bne.n	80030ee <HAL_RCC_OscConfig+0x422>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	2204      	movs	r2, #4
 8003110:	4013      	ands	r3, r2
 8003112:	d100      	bne.n	8003116 <HAL_RCC_OscConfig+0x44a>
 8003114:	e0ae      	b.n	8003274 <HAL_RCC_OscConfig+0x5a8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003116:	2023      	movs	r0, #35	; 0x23
 8003118:	183b      	adds	r3, r7, r0
 800311a:	2200      	movs	r2, #0
 800311c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800311e:	4b8d      	ldr	r3, [pc, #564]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003120:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003122:	2380      	movs	r3, #128	; 0x80
 8003124:	055b      	lsls	r3, r3, #21
 8003126:	4013      	ands	r3, r2
 8003128:	d109      	bne.n	800313e <HAL_RCC_OscConfig+0x472>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800312a:	4b8a      	ldr	r3, [pc, #552]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800312c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800312e:	4b89      	ldr	r3, [pc, #548]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003130:	2180      	movs	r1, #128	; 0x80
 8003132:	0549      	lsls	r1, r1, #21
 8003134:	430a      	orrs	r2, r1
 8003136:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8003138:	183b      	adds	r3, r7, r0
 800313a:	2201      	movs	r2, #1
 800313c:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800313e:	4b88      	ldr	r3, [pc, #544]	; (8003360 <HAL_RCC_OscConfig+0x694>)
 8003140:	681a      	ldr	r2, [r3, #0]
 8003142:	2380      	movs	r3, #128	; 0x80
 8003144:	005b      	lsls	r3, r3, #1
 8003146:	4013      	ands	r3, r2
 8003148:	d11a      	bne.n	8003180 <HAL_RCC_OscConfig+0x4b4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800314a:	4b85      	ldr	r3, [pc, #532]	; (8003360 <HAL_RCC_OscConfig+0x694>)
 800314c:	681a      	ldr	r2, [r3, #0]
 800314e:	4b84      	ldr	r3, [pc, #528]	; (8003360 <HAL_RCC_OscConfig+0x694>)
 8003150:	2180      	movs	r1, #128	; 0x80
 8003152:	0049      	lsls	r1, r1, #1
 8003154:	430a      	orrs	r2, r1
 8003156:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003158:	f7ff fb7c 	bl	8002854 <HAL_GetTick>
 800315c:	0003      	movs	r3, r0
 800315e:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003160:	e008      	b.n	8003174 <HAL_RCC_OscConfig+0x4a8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003162:	f7ff fb77 	bl	8002854 <HAL_GetTick>
 8003166:	0002      	movs	r2, r0
 8003168:	697b      	ldr	r3, [r7, #20]
 800316a:	1ad3      	subs	r3, r2, r3
 800316c:	2b64      	cmp	r3, #100	; 0x64
 800316e:	d901      	bls.n	8003174 <HAL_RCC_OscConfig+0x4a8>
        {
          return HAL_TIMEOUT;
 8003170:	2303      	movs	r3, #3
 8003172:	e174      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003174:	4b7a      	ldr	r3, [pc, #488]	; (8003360 <HAL_RCC_OscConfig+0x694>)
 8003176:	681a      	ldr	r2, [r3, #0]
 8003178:	2380      	movs	r3, #128	; 0x80
 800317a:	005b      	lsls	r3, r3, #1
 800317c:	4013      	ands	r3, r2
 800317e:	d0f0      	beq.n	8003162 <HAL_RCC_OscConfig+0x496>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	689a      	ldr	r2, [r3, #8]
 8003184:	2380      	movs	r3, #128	; 0x80
 8003186:	005b      	lsls	r3, r3, #1
 8003188:	429a      	cmp	r2, r3
 800318a:	d107      	bne.n	800319c <HAL_RCC_OscConfig+0x4d0>
 800318c:	4b71      	ldr	r3, [pc, #452]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800318e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003190:	4b70      	ldr	r3, [pc, #448]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003192:	2180      	movs	r1, #128	; 0x80
 8003194:	0049      	lsls	r1, r1, #1
 8003196:	430a      	orrs	r2, r1
 8003198:	651a      	str	r2, [r3, #80]	; 0x50
 800319a:	e031      	b.n	8003200 <HAL_RCC_OscConfig+0x534>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	689b      	ldr	r3, [r3, #8]
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	d10c      	bne.n	80031be <HAL_RCC_OscConfig+0x4f2>
 80031a4:	4b6b      	ldr	r3, [pc, #428]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031a6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031a8:	4b6a      	ldr	r3, [pc, #424]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031aa:	496c      	ldr	r1, [pc, #432]	; (800335c <HAL_RCC_OscConfig+0x690>)
 80031ac:	400a      	ands	r2, r1
 80031ae:	651a      	str	r2, [r3, #80]	; 0x50
 80031b0:	4b68      	ldr	r3, [pc, #416]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031b2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031b4:	4b67      	ldr	r3, [pc, #412]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031b6:	496b      	ldr	r1, [pc, #428]	; (8003364 <HAL_RCC_OscConfig+0x698>)
 80031b8:	400a      	ands	r2, r1
 80031ba:	651a      	str	r2, [r3, #80]	; 0x50
 80031bc:	e020      	b.n	8003200 <HAL_RCC_OscConfig+0x534>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	689a      	ldr	r2, [r3, #8]
 80031c2:	23a0      	movs	r3, #160	; 0xa0
 80031c4:	00db      	lsls	r3, r3, #3
 80031c6:	429a      	cmp	r2, r3
 80031c8:	d10e      	bne.n	80031e8 <HAL_RCC_OscConfig+0x51c>
 80031ca:	4b62      	ldr	r3, [pc, #392]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031cc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031ce:	4b61      	ldr	r3, [pc, #388]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031d0:	2180      	movs	r1, #128	; 0x80
 80031d2:	00c9      	lsls	r1, r1, #3
 80031d4:	430a      	orrs	r2, r1
 80031d6:	651a      	str	r2, [r3, #80]	; 0x50
 80031d8:	4b5e      	ldr	r3, [pc, #376]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031da:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031dc:	4b5d      	ldr	r3, [pc, #372]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031de:	2180      	movs	r1, #128	; 0x80
 80031e0:	0049      	lsls	r1, r1, #1
 80031e2:	430a      	orrs	r2, r1
 80031e4:	651a      	str	r2, [r3, #80]	; 0x50
 80031e6:	e00b      	b.n	8003200 <HAL_RCC_OscConfig+0x534>
 80031e8:	4b5a      	ldr	r3, [pc, #360]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031ea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031ec:	4b59      	ldr	r3, [pc, #356]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031ee:	495b      	ldr	r1, [pc, #364]	; (800335c <HAL_RCC_OscConfig+0x690>)
 80031f0:	400a      	ands	r2, r1
 80031f2:	651a      	str	r2, [r3, #80]	; 0x50
 80031f4:	4b57      	ldr	r3, [pc, #348]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031f6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80031f8:	4b56      	ldr	r3, [pc, #344]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80031fa:	495a      	ldr	r1, [pc, #360]	; (8003364 <HAL_RCC_OscConfig+0x698>)
 80031fc:	400a      	ands	r2, r1
 80031fe:	651a      	str	r2, [r3, #80]	; 0x50

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	689b      	ldr	r3, [r3, #8]
 8003204:	2b00      	cmp	r3, #0
 8003206:	d015      	beq.n	8003234 <HAL_RCC_OscConfig+0x568>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003208:	f7ff fb24 	bl	8002854 <HAL_GetTick>
 800320c:	0003      	movs	r3, r0
 800320e:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003210:	e009      	b.n	8003226 <HAL_RCC_OscConfig+0x55a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003212:	f7ff fb1f 	bl	8002854 <HAL_GetTick>
 8003216:	0002      	movs	r2, r0
 8003218:	697b      	ldr	r3, [r7, #20]
 800321a:	1ad3      	subs	r3, r2, r3
 800321c:	4a52      	ldr	r2, [pc, #328]	; (8003368 <HAL_RCC_OscConfig+0x69c>)
 800321e:	4293      	cmp	r3, r2
 8003220:	d901      	bls.n	8003226 <HAL_RCC_OscConfig+0x55a>
        {
          return HAL_TIMEOUT;
 8003222:	2303      	movs	r3, #3
 8003224:	e11b      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003226:	4b4b      	ldr	r3, [pc, #300]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003228:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800322a:	2380      	movs	r3, #128	; 0x80
 800322c:	009b      	lsls	r3, r3, #2
 800322e:	4013      	ands	r3, r2
 8003230:	d0ef      	beq.n	8003212 <HAL_RCC_OscConfig+0x546>
 8003232:	e014      	b.n	800325e <HAL_RCC_OscConfig+0x592>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003234:	f7ff fb0e 	bl	8002854 <HAL_GetTick>
 8003238:	0003      	movs	r3, r0
 800323a:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800323c:	e009      	b.n	8003252 <HAL_RCC_OscConfig+0x586>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800323e:	f7ff fb09 	bl	8002854 <HAL_GetTick>
 8003242:	0002      	movs	r2, r0
 8003244:	697b      	ldr	r3, [r7, #20]
 8003246:	1ad3      	subs	r3, r2, r3
 8003248:	4a47      	ldr	r2, [pc, #284]	; (8003368 <HAL_RCC_OscConfig+0x69c>)
 800324a:	4293      	cmp	r3, r2
 800324c:	d901      	bls.n	8003252 <HAL_RCC_OscConfig+0x586>
        {
          return HAL_TIMEOUT;
 800324e:	2303      	movs	r3, #3
 8003250:	e105      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003252:	4b40      	ldr	r3, [pc, #256]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003254:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003256:	2380      	movs	r3, #128	; 0x80
 8003258:	009b      	lsls	r3, r3, #2
 800325a:	4013      	ands	r3, r2
 800325c:	d1ef      	bne.n	800323e <HAL_RCC_OscConfig+0x572>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800325e:	2323      	movs	r3, #35	; 0x23
 8003260:	18fb      	adds	r3, r7, r3
 8003262:	781b      	ldrb	r3, [r3, #0]
 8003264:	2b01      	cmp	r3, #1
 8003266:	d105      	bne.n	8003274 <HAL_RCC_OscConfig+0x5a8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003268:	4b3a      	ldr	r3, [pc, #232]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800326a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800326c:	4b39      	ldr	r3, [pc, #228]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800326e:	493f      	ldr	r1, [pc, #252]	; (800336c <HAL_RCC_OscConfig+0x6a0>)
 8003270:	400a      	ands	r2, r1
 8003272:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	2220      	movs	r2, #32
 800327a:	4013      	ands	r3, r2
 800327c:	d049      	beq.n	8003312 <HAL_RCC_OscConfig+0x646>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	699b      	ldr	r3, [r3, #24]
 8003282:	2b00      	cmp	r3, #0
 8003284:	d026      	beq.n	80032d4 <HAL_RCC_OscConfig+0x608>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003286:	4b33      	ldr	r3, [pc, #204]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003288:	689a      	ldr	r2, [r3, #8]
 800328a:	4b32      	ldr	r3, [pc, #200]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800328c:	2101      	movs	r1, #1
 800328e:	430a      	orrs	r2, r1
 8003290:	609a      	str	r2, [r3, #8]
 8003292:	4b30      	ldr	r3, [pc, #192]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003294:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003296:	4b2f      	ldr	r3, [pc, #188]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003298:	2101      	movs	r1, #1
 800329a:	430a      	orrs	r2, r1
 800329c:	635a      	str	r2, [r3, #52]	; 0x34
 800329e:	4b34      	ldr	r3, [pc, #208]	; (8003370 <HAL_RCC_OscConfig+0x6a4>)
 80032a0:	6a1a      	ldr	r2, [r3, #32]
 80032a2:	4b33      	ldr	r3, [pc, #204]	; (8003370 <HAL_RCC_OscConfig+0x6a4>)
 80032a4:	2180      	movs	r1, #128	; 0x80
 80032a6:	0189      	lsls	r1, r1, #6
 80032a8:	430a      	orrs	r2, r1
 80032aa:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80032ac:	f7ff fad2 	bl	8002854 <HAL_GetTick>
 80032b0:	0003      	movs	r3, r0
 80032b2:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80032b4:	e008      	b.n	80032c8 <HAL_RCC_OscConfig+0x5fc>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80032b6:	f7ff facd 	bl	8002854 <HAL_GetTick>
 80032ba:	0002      	movs	r2, r0
 80032bc:	697b      	ldr	r3, [r7, #20]
 80032be:	1ad3      	subs	r3, r2, r3
 80032c0:	2b02      	cmp	r3, #2
 80032c2:	d901      	bls.n	80032c8 <HAL_RCC_OscConfig+0x5fc>
          {
            return HAL_TIMEOUT;
 80032c4:	2303      	movs	r3, #3
 80032c6:	e0ca      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80032c8:	4b22      	ldr	r3, [pc, #136]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80032ca:	689b      	ldr	r3, [r3, #8]
 80032cc:	2202      	movs	r2, #2
 80032ce:	4013      	ands	r3, r2
 80032d0:	d0f1      	beq.n	80032b6 <HAL_RCC_OscConfig+0x5ea>
 80032d2:	e01e      	b.n	8003312 <HAL_RCC_OscConfig+0x646>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 80032d4:	4b1f      	ldr	r3, [pc, #124]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80032d6:	689a      	ldr	r2, [r3, #8]
 80032d8:	4b1e      	ldr	r3, [pc, #120]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 80032da:	2101      	movs	r1, #1
 80032dc:	438a      	bics	r2, r1
 80032de:	609a      	str	r2, [r3, #8]
 80032e0:	4b23      	ldr	r3, [pc, #140]	; (8003370 <HAL_RCC_OscConfig+0x6a4>)
 80032e2:	6a1a      	ldr	r2, [r3, #32]
 80032e4:	4b22      	ldr	r3, [pc, #136]	; (8003370 <HAL_RCC_OscConfig+0x6a4>)
 80032e6:	4923      	ldr	r1, [pc, #140]	; (8003374 <HAL_RCC_OscConfig+0x6a8>)
 80032e8:	400a      	ands	r2, r1
 80032ea:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80032ec:	f7ff fab2 	bl	8002854 <HAL_GetTick>
 80032f0:	0003      	movs	r3, r0
 80032f2:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 80032f4:	e008      	b.n	8003308 <HAL_RCC_OscConfig+0x63c>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 80032f6:	f7ff faad 	bl	8002854 <HAL_GetTick>
 80032fa:	0002      	movs	r2, r0
 80032fc:	697b      	ldr	r3, [r7, #20]
 80032fe:	1ad3      	subs	r3, r2, r3
 8003300:	2b02      	cmp	r3, #2
 8003302:	d901      	bls.n	8003308 <HAL_RCC_OscConfig+0x63c>
          {
            return HAL_TIMEOUT;
 8003304:	2303      	movs	r3, #3
 8003306:	e0aa      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003308:	4b12      	ldr	r3, [pc, #72]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800330a:	689b      	ldr	r3, [r3, #8]
 800330c:	2202      	movs	r2, #2
 800330e:	4013      	ands	r3, r2
 8003310:	d1f1      	bne.n	80032f6 <HAL_RCC_OscConfig+0x62a>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003316:	2b00      	cmp	r3, #0
 8003318:	d100      	bne.n	800331c <HAL_RCC_OscConfig+0x650>
 800331a:	e09f      	b.n	800345c <HAL_RCC_OscConfig+0x790>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800331c:	69fb      	ldr	r3, [r7, #28]
 800331e:	2b0c      	cmp	r3, #12
 8003320:	d100      	bne.n	8003324 <HAL_RCC_OscConfig+0x658>
 8003322:	e078      	b.n	8003416 <HAL_RCC_OscConfig+0x74a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003328:	2b02      	cmp	r3, #2
 800332a:	d159      	bne.n	80033e0 <HAL_RCC_OscConfig+0x714>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800332c:	4b09      	ldr	r3, [pc, #36]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 800332e:	681a      	ldr	r2, [r3, #0]
 8003330:	4b08      	ldr	r3, [pc, #32]	; (8003354 <HAL_RCC_OscConfig+0x688>)
 8003332:	4911      	ldr	r1, [pc, #68]	; (8003378 <HAL_RCC_OscConfig+0x6ac>)
 8003334:	400a      	ands	r2, r1
 8003336:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003338:	f7ff fa8c 	bl	8002854 <HAL_GetTick>
 800333c:	0003      	movs	r3, r0
 800333e:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003340:	e01c      	b.n	800337c <HAL_RCC_OscConfig+0x6b0>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003342:	f7ff fa87 	bl	8002854 <HAL_GetTick>
 8003346:	0002      	movs	r2, r0
 8003348:	697b      	ldr	r3, [r7, #20]
 800334a:	1ad3      	subs	r3, r2, r3
 800334c:	2b02      	cmp	r3, #2
 800334e:	d915      	bls.n	800337c <HAL_RCC_OscConfig+0x6b0>
          {
            return HAL_TIMEOUT;
 8003350:	2303      	movs	r3, #3
 8003352:	e084      	b.n	800345e <HAL_RCC_OscConfig+0x792>
 8003354:	40021000 	.word	0x40021000
 8003358:	ffff1fff 	.word	0xffff1fff
 800335c:	fffffeff 	.word	0xfffffeff
 8003360:	40007000 	.word	0x40007000
 8003364:	fffffbff 	.word	0xfffffbff
 8003368:	00001388 	.word	0x00001388
 800336c:	efffffff 	.word	0xefffffff
 8003370:	40010000 	.word	0x40010000
 8003374:	ffffdfff 	.word	0xffffdfff
 8003378:	feffffff 	.word	0xfeffffff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800337c:	4b3a      	ldr	r3, [pc, #232]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 800337e:	681a      	ldr	r2, [r3, #0]
 8003380:	2380      	movs	r3, #128	; 0x80
 8003382:	049b      	lsls	r3, r3, #18
 8003384:	4013      	ands	r3, r2
 8003386:	d1dc      	bne.n	8003342 <HAL_RCC_OscConfig+0x676>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003388:	4b37      	ldr	r3, [pc, #220]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 800338a:	68db      	ldr	r3, [r3, #12]
 800338c:	4a37      	ldr	r2, [pc, #220]	; (800346c <HAL_RCC_OscConfig+0x7a0>)
 800338e:	4013      	ands	r3, r2
 8003390:	0019      	movs	r1, r3
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800339a:	431a      	orrs	r2, r3
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033a0:	431a      	orrs	r2, r3
 80033a2:	4b31      	ldr	r3, [pc, #196]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033a4:	430a      	orrs	r2, r1
 80033a6:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80033a8:	4b2f      	ldr	r3, [pc, #188]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033aa:	681a      	ldr	r2, [r3, #0]
 80033ac:	4b2e      	ldr	r3, [pc, #184]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033ae:	2180      	movs	r1, #128	; 0x80
 80033b0:	0449      	lsls	r1, r1, #17
 80033b2:	430a      	orrs	r2, r1
 80033b4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80033b6:	f7ff fa4d 	bl	8002854 <HAL_GetTick>
 80033ba:	0003      	movs	r3, r0
 80033bc:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 80033be:	e008      	b.n	80033d2 <HAL_RCC_OscConfig+0x706>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80033c0:	f7ff fa48 	bl	8002854 <HAL_GetTick>
 80033c4:	0002      	movs	r2, r0
 80033c6:	697b      	ldr	r3, [r7, #20]
 80033c8:	1ad3      	subs	r3, r2, r3
 80033ca:	2b02      	cmp	r3, #2
 80033cc:	d901      	bls.n	80033d2 <HAL_RCC_OscConfig+0x706>
          {
            return HAL_TIMEOUT;
 80033ce:	2303      	movs	r3, #3
 80033d0:	e045      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 80033d2:	4b25      	ldr	r3, [pc, #148]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033d4:	681a      	ldr	r2, [r3, #0]
 80033d6:	2380      	movs	r3, #128	; 0x80
 80033d8:	049b      	lsls	r3, r3, #18
 80033da:	4013      	ands	r3, r2
 80033dc:	d0f0      	beq.n	80033c0 <HAL_RCC_OscConfig+0x6f4>
 80033de:	e03d      	b.n	800345c <HAL_RCC_OscConfig+0x790>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80033e0:	4b21      	ldr	r3, [pc, #132]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033e2:	681a      	ldr	r2, [r3, #0]
 80033e4:	4b20      	ldr	r3, [pc, #128]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 80033e6:	4922      	ldr	r1, [pc, #136]	; (8003470 <HAL_RCC_OscConfig+0x7a4>)
 80033e8:	400a      	ands	r2, r1
 80033ea:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80033ec:	f7ff fa32 	bl	8002854 <HAL_GetTick>
 80033f0:	0003      	movs	r3, r0
 80033f2:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 80033f4:	e008      	b.n	8003408 <HAL_RCC_OscConfig+0x73c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80033f6:	f7ff fa2d 	bl	8002854 <HAL_GetTick>
 80033fa:	0002      	movs	r2, r0
 80033fc:	697b      	ldr	r3, [r7, #20]
 80033fe:	1ad3      	subs	r3, r2, r3
 8003400:	2b02      	cmp	r3, #2
 8003402:	d901      	bls.n	8003408 <HAL_RCC_OscConfig+0x73c>
          {
            return HAL_TIMEOUT;
 8003404:	2303      	movs	r3, #3
 8003406:	e02a      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003408:	4b17      	ldr	r3, [pc, #92]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 800340a:	681a      	ldr	r2, [r3, #0]
 800340c:	2380      	movs	r3, #128	; 0x80
 800340e:	049b      	lsls	r3, r3, #18
 8003410:	4013      	ands	r3, r2
 8003412:	d1f0      	bne.n	80033f6 <HAL_RCC_OscConfig+0x72a>
 8003414:	e022      	b.n	800345c <HAL_RCC_OscConfig+0x790>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800341a:	2b01      	cmp	r3, #1
 800341c:	d101      	bne.n	8003422 <HAL_RCC_OscConfig+0x756>
      {
        return HAL_ERROR;
 800341e:	2301      	movs	r3, #1
 8003420:	e01d      	b.n	800345e <HAL_RCC_OscConfig+0x792>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8003422:	4b11      	ldr	r3, [pc, #68]	; (8003468 <HAL_RCC_OscConfig+0x79c>)
 8003424:	68db      	ldr	r3, [r3, #12]
 8003426:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003428:	69ba      	ldr	r2, [r7, #24]
 800342a:	2380      	movs	r3, #128	; 0x80
 800342c:	025b      	lsls	r3, r3, #9
 800342e:	401a      	ands	r2, r3
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003434:	429a      	cmp	r2, r3
 8003436:	d10f      	bne.n	8003458 <HAL_RCC_OscConfig+0x78c>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8003438:	69ba      	ldr	r2, [r7, #24]
 800343a:	23f0      	movs	r3, #240	; 0xf0
 800343c:	039b      	lsls	r3, r3, #14
 800343e:	401a      	ands	r2, r3
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003444:	429a      	cmp	r2, r3
 8003446:	d107      	bne.n	8003458 <HAL_RCC_OscConfig+0x78c>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8003448:	69ba      	ldr	r2, [r7, #24]
 800344a:	23c0      	movs	r3, #192	; 0xc0
 800344c:	041b      	lsls	r3, r3, #16
 800344e:	401a      	ands	r2, r3
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8003454:	429a      	cmp	r2, r3
 8003456:	d001      	beq.n	800345c <HAL_RCC_OscConfig+0x790>
        {
          return HAL_ERROR;
 8003458:	2301      	movs	r3, #1
 800345a:	e000      	b.n	800345e <HAL_RCC_OscConfig+0x792>
        }
      }
    }
  }
  return HAL_OK;
 800345c:	2300      	movs	r3, #0
}
 800345e:	0018      	movs	r0, r3
 8003460:	46bd      	mov	sp, r7
 8003462:	b00a      	add	sp, #40	; 0x28
 8003464:	bdb0      	pop	{r4, r5, r7, pc}
 8003466:	46c0      	nop			; (mov r8, r8)
 8003468:	40021000 	.word	0x40021000
 800346c:	ff02ffff 	.word	0xff02ffff
 8003470:	feffffff 	.word	0xfeffffff

08003474 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003474:	b5b0      	push	{r4, r5, r7, lr}
 8003476:	b084      	sub	sp, #16
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	2b00      	cmp	r3, #0
 8003482:	d101      	bne.n	8003488 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003484:	2301      	movs	r3, #1
 8003486:	e128      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003488:	4b96      	ldr	r3, [pc, #600]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	2201      	movs	r2, #1
 800348e:	4013      	ands	r3, r2
 8003490:	683a      	ldr	r2, [r7, #0]
 8003492:	429a      	cmp	r2, r3
 8003494:	d91e      	bls.n	80034d4 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003496:	4b93      	ldr	r3, [pc, #588]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	2201      	movs	r2, #1
 800349c:	4393      	bics	r3, r2
 800349e:	0019      	movs	r1, r3
 80034a0:	4b90      	ldr	r3, [pc, #576]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 80034a2:	683a      	ldr	r2, [r7, #0]
 80034a4:	430a      	orrs	r2, r1
 80034a6:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 80034a8:	f7ff f9d4 	bl	8002854 <HAL_GetTick>
 80034ac:	0003      	movs	r3, r0
 80034ae:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80034b0:	e009      	b.n	80034c6 <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80034b2:	f7ff f9cf 	bl	8002854 <HAL_GetTick>
 80034b6:	0002      	movs	r2, r0
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	1ad3      	subs	r3, r2, r3
 80034bc:	4a8a      	ldr	r2, [pc, #552]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 80034be:	4293      	cmp	r3, r2
 80034c0:	d901      	bls.n	80034c6 <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 80034c2:	2303      	movs	r3, #3
 80034c4:	e109      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 80034c6:	4b87      	ldr	r3, [pc, #540]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	2201      	movs	r2, #1
 80034cc:	4013      	ands	r3, r2
 80034ce:	683a      	ldr	r2, [r7, #0]
 80034d0:	429a      	cmp	r2, r3
 80034d2:	d1ee      	bne.n	80034b2 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	2202      	movs	r2, #2
 80034da:	4013      	ands	r3, r2
 80034dc:	d009      	beq.n	80034f2 <HAL_RCC_ClockConfig+0x7e>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80034de:	4b83      	ldr	r3, [pc, #524]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 80034e0:	68db      	ldr	r3, [r3, #12]
 80034e2:	22f0      	movs	r2, #240	; 0xf0
 80034e4:	4393      	bics	r3, r2
 80034e6:	0019      	movs	r1, r3
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	689a      	ldr	r2, [r3, #8]
 80034ec:	4b7f      	ldr	r3, [pc, #508]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 80034ee:	430a      	orrs	r2, r1
 80034f0:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	2201      	movs	r2, #1
 80034f8:	4013      	ands	r3, r2
 80034fa:	d100      	bne.n	80034fe <HAL_RCC_ClockConfig+0x8a>
 80034fc:	e089      	b.n	8003612 <HAL_RCC_ClockConfig+0x19e>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	685b      	ldr	r3, [r3, #4]
 8003502:	2b02      	cmp	r3, #2
 8003504:	d107      	bne.n	8003516 <HAL_RCC_ClockConfig+0xa2>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003506:	4b79      	ldr	r3, [pc, #484]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003508:	681a      	ldr	r2, [r3, #0]
 800350a:	2380      	movs	r3, #128	; 0x80
 800350c:	029b      	lsls	r3, r3, #10
 800350e:	4013      	ands	r3, r2
 8003510:	d120      	bne.n	8003554 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003512:	2301      	movs	r3, #1
 8003514:	e0e1      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	685b      	ldr	r3, [r3, #4]
 800351a:	2b03      	cmp	r3, #3
 800351c:	d107      	bne.n	800352e <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800351e:	4b73      	ldr	r3, [pc, #460]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003520:	681a      	ldr	r2, [r3, #0]
 8003522:	2380      	movs	r3, #128	; 0x80
 8003524:	049b      	lsls	r3, r3, #18
 8003526:	4013      	ands	r3, r2
 8003528:	d114      	bne.n	8003554 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 800352a:	2301      	movs	r3, #1
 800352c:	e0d5      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	685b      	ldr	r3, [r3, #4]
 8003532:	2b01      	cmp	r3, #1
 8003534:	d106      	bne.n	8003544 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003536:	4b6d      	ldr	r3, [pc, #436]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	2204      	movs	r2, #4
 800353c:	4013      	ands	r3, r2
 800353e:	d109      	bne.n	8003554 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003540:	2301      	movs	r3, #1
 8003542:	e0ca      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003544:	4b69      	ldr	r3, [pc, #420]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003546:	681a      	ldr	r2, [r3, #0]
 8003548:	2380      	movs	r3, #128	; 0x80
 800354a:	009b      	lsls	r3, r3, #2
 800354c:	4013      	ands	r3, r2
 800354e:	d101      	bne.n	8003554 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8003550:	2301      	movs	r3, #1
 8003552:	e0c2      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003554:	4b65      	ldr	r3, [pc, #404]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003556:	68db      	ldr	r3, [r3, #12]
 8003558:	2203      	movs	r2, #3
 800355a:	4393      	bics	r3, r2
 800355c:	0019      	movs	r1, r3
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	685a      	ldr	r2, [r3, #4]
 8003562:	4b62      	ldr	r3, [pc, #392]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003564:	430a      	orrs	r2, r1
 8003566:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003568:	f7ff f974 	bl	8002854 <HAL_GetTick>
 800356c:	0003      	movs	r3, r0
 800356e:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	685b      	ldr	r3, [r3, #4]
 8003574:	2b02      	cmp	r3, #2
 8003576:	d111      	bne.n	800359c <HAL_RCC_ClockConfig+0x128>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003578:	e009      	b.n	800358e <HAL_RCC_ClockConfig+0x11a>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800357a:	f7ff f96b 	bl	8002854 <HAL_GetTick>
 800357e:	0002      	movs	r2, r0
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	1ad3      	subs	r3, r2, r3
 8003584:	4a58      	ldr	r2, [pc, #352]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 8003586:	4293      	cmp	r3, r2
 8003588:	d901      	bls.n	800358e <HAL_RCC_ClockConfig+0x11a>
        {
          return HAL_TIMEOUT;
 800358a:	2303      	movs	r3, #3
 800358c:	e0a5      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800358e:	4b57      	ldr	r3, [pc, #348]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003590:	68db      	ldr	r3, [r3, #12]
 8003592:	220c      	movs	r2, #12
 8003594:	4013      	ands	r3, r2
 8003596:	2b08      	cmp	r3, #8
 8003598:	d1ef      	bne.n	800357a <HAL_RCC_ClockConfig+0x106>
 800359a:	e03a      	b.n	8003612 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	685b      	ldr	r3, [r3, #4]
 80035a0:	2b03      	cmp	r3, #3
 80035a2:	d111      	bne.n	80035c8 <HAL_RCC_ClockConfig+0x154>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80035a4:	e009      	b.n	80035ba <HAL_RCC_ClockConfig+0x146>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80035a6:	f7ff f955 	bl	8002854 <HAL_GetTick>
 80035aa:	0002      	movs	r2, r0
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	1ad3      	subs	r3, r2, r3
 80035b0:	4a4d      	ldr	r2, [pc, #308]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 80035b2:	4293      	cmp	r3, r2
 80035b4:	d901      	bls.n	80035ba <HAL_RCC_ClockConfig+0x146>
        {
          return HAL_TIMEOUT;
 80035b6:	2303      	movs	r3, #3
 80035b8:	e08f      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80035ba:	4b4c      	ldr	r3, [pc, #304]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 80035bc:	68db      	ldr	r3, [r3, #12]
 80035be:	220c      	movs	r2, #12
 80035c0:	4013      	ands	r3, r2
 80035c2:	2b0c      	cmp	r3, #12
 80035c4:	d1ef      	bne.n	80035a6 <HAL_RCC_ClockConfig+0x132>
 80035c6:	e024      	b.n	8003612 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	685b      	ldr	r3, [r3, #4]
 80035cc:	2b01      	cmp	r3, #1
 80035ce:	d11b      	bne.n	8003608 <HAL_RCC_ClockConfig+0x194>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80035d0:	e009      	b.n	80035e6 <HAL_RCC_ClockConfig+0x172>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80035d2:	f7ff f93f 	bl	8002854 <HAL_GetTick>
 80035d6:	0002      	movs	r2, r0
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	1ad3      	subs	r3, r2, r3
 80035dc:	4a42      	ldr	r2, [pc, #264]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 80035de:	4293      	cmp	r3, r2
 80035e0:	d901      	bls.n	80035e6 <HAL_RCC_ClockConfig+0x172>
        {
          return HAL_TIMEOUT;
 80035e2:	2303      	movs	r3, #3
 80035e4:	e079      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80035e6:	4b41      	ldr	r3, [pc, #260]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 80035e8:	68db      	ldr	r3, [r3, #12]
 80035ea:	220c      	movs	r2, #12
 80035ec:	4013      	ands	r3, r2
 80035ee:	2b04      	cmp	r3, #4
 80035f0:	d1ef      	bne.n	80035d2 <HAL_RCC_ClockConfig+0x15e>
 80035f2:	e00e      	b.n	8003612 <HAL_RCC_ClockConfig+0x19e>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80035f4:	f7ff f92e 	bl	8002854 <HAL_GetTick>
 80035f8:	0002      	movs	r2, r0
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	1ad3      	subs	r3, r2, r3
 80035fe:	4a3a      	ldr	r2, [pc, #232]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 8003600:	4293      	cmp	r3, r2
 8003602:	d901      	bls.n	8003608 <HAL_RCC_ClockConfig+0x194>
        {
          return HAL_TIMEOUT;
 8003604:	2303      	movs	r3, #3
 8003606:	e068      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8003608:	4b38      	ldr	r3, [pc, #224]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 800360a:	68db      	ldr	r3, [r3, #12]
 800360c:	220c      	movs	r2, #12
 800360e:	4013      	ands	r3, r2
 8003610:	d1f0      	bne.n	80035f4 <HAL_RCC_ClockConfig+0x180>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003612:	4b34      	ldr	r3, [pc, #208]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	2201      	movs	r2, #1
 8003618:	4013      	ands	r3, r2
 800361a:	683a      	ldr	r2, [r7, #0]
 800361c:	429a      	cmp	r2, r3
 800361e:	d21e      	bcs.n	800365e <HAL_RCC_ClockConfig+0x1ea>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003620:	4b30      	ldr	r3, [pc, #192]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	2201      	movs	r2, #1
 8003626:	4393      	bics	r3, r2
 8003628:	0019      	movs	r1, r3
 800362a:	4b2e      	ldr	r3, [pc, #184]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 800362c:	683a      	ldr	r2, [r7, #0]
 800362e:	430a      	orrs	r2, r1
 8003630:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003632:	f7ff f90f 	bl	8002854 <HAL_GetTick>
 8003636:	0003      	movs	r3, r0
 8003638:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 800363a:	e009      	b.n	8003650 <HAL_RCC_ClockConfig+0x1dc>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800363c:	f7ff f90a 	bl	8002854 <HAL_GetTick>
 8003640:	0002      	movs	r2, r0
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	1ad3      	subs	r3, r2, r3
 8003646:	4a28      	ldr	r2, [pc, #160]	; (80036e8 <HAL_RCC_ClockConfig+0x274>)
 8003648:	4293      	cmp	r3, r2
 800364a:	d901      	bls.n	8003650 <HAL_RCC_ClockConfig+0x1dc>
      {
        return HAL_TIMEOUT;
 800364c:	2303      	movs	r3, #3
 800364e:	e044      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003650:	4b24      	ldr	r3, [pc, #144]	; (80036e4 <HAL_RCC_ClockConfig+0x270>)
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	2201      	movs	r2, #1
 8003656:	4013      	ands	r3, r2
 8003658:	683a      	ldr	r2, [r7, #0]
 800365a:	429a      	cmp	r2, r3
 800365c:	d1ee      	bne.n	800363c <HAL_RCC_ClockConfig+0x1c8>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	2204      	movs	r2, #4
 8003664:	4013      	ands	r3, r2
 8003666:	d009      	beq.n	800367c <HAL_RCC_ClockConfig+0x208>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003668:	4b20      	ldr	r3, [pc, #128]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 800366a:	68db      	ldr	r3, [r3, #12]
 800366c:	4a20      	ldr	r2, [pc, #128]	; (80036f0 <HAL_RCC_ClockConfig+0x27c>)
 800366e:	4013      	ands	r3, r2
 8003670:	0019      	movs	r1, r3
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	68da      	ldr	r2, [r3, #12]
 8003676:	4b1d      	ldr	r3, [pc, #116]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003678:	430a      	orrs	r2, r1
 800367a:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	2208      	movs	r2, #8
 8003682:	4013      	ands	r3, r2
 8003684:	d00a      	beq.n	800369c <HAL_RCC_ClockConfig+0x228>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8003686:	4b19      	ldr	r3, [pc, #100]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003688:	68db      	ldr	r3, [r3, #12]
 800368a:	4a1a      	ldr	r2, [pc, #104]	; (80036f4 <HAL_RCC_ClockConfig+0x280>)
 800368c:	4013      	ands	r3, r2
 800368e:	0019      	movs	r1, r3
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	691b      	ldr	r3, [r3, #16]
 8003694:	00da      	lsls	r2, r3, #3
 8003696:	4b15      	ldr	r3, [pc, #84]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 8003698:	430a      	orrs	r2, r1
 800369a:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800369c:	f000 f832 	bl	8003704 <HAL_RCC_GetSysClockFreq>
 80036a0:	0001      	movs	r1, r0
 80036a2:	4b12      	ldr	r3, [pc, #72]	; (80036ec <HAL_RCC_ClockConfig+0x278>)
 80036a4:	68db      	ldr	r3, [r3, #12]
 80036a6:	091b      	lsrs	r3, r3, #4
 80036a8:	220f      	movs	r2, #15
 80036aa:	4013      	ands	r3, r2
 80036ac:	4a12      	ldr	r2, [pc, #72]	; (80036f8 <HAL_RCC_ClockConfig+0x284>)
 80036ae:	5cd3      	ldrb	r3, [r2, r3]
 80036b0:	000a      	movs	r2, r1
 80036b2:	40da      	lsrs	r2, r3
 80036b4:	4b11      	ldr	r3, [pc, #68]	; (80036fc <HAL_RCC_ClockConfig+0x288>)
 80036b6:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 80036b8:	4b11      	ldr	r3, [pc, #68]	; (8003700 <HAL_RCC_ClockConfig+0x28c>)
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	250b      	movs	r5, #11
 80036be:	197c      	adds	r4, r7, r5
 80036c0:	0018      	movs	r0, r3
 80036c2:	f7ff f881 	bl	80027c8 <HAL_InitTick>
 80036c6:	0003      	movs	r3, r0
 80036c8:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 80036ca:	197b      	adds	r3, r7, r5
 80036cc:	781b      	ldrb	r3, [r3, #0]
 80036ce:	2b00      	cmp	r3, #0
 80036d0:	d002      	beq.n	80036d8 <HAL_RCC_ClockConfig+0x264>
  {
    return status;
 80036d2:	197b      	adds	r3, r7, r5
 80036d4:	781b      	ldrb	r3, [r3, #0]
 80036d6:	e000      	b.n	80036da <HAL_RCC_ClockConfig+0x266>
  }

  return HAL_OK;
 80036d8:	2300      	movs	r3, #0
}
 80036da:	0018      	movs	r0, r3
 80036dc:	46bd      	mov	sp, r7
 80036de:	b004      	add	sp, #16
 80036e0:	bdb0      	pop	{r4, r5, r7, pc}
 80036e2:	46c0      	nop			; (mov r8, r8)
 80036e4:	40022000 	.word	0x40022000
 80036e8:	00001388 	.word	0x00001388
 80036ec:	40021000 	.word	0x40021000
 80036f0:	fffff8ff 	.word	0xfffff8ff
 80036f4:	ffffc7ff 	.word	0xffffc7ff
 80036f8:	08006f70 	.word	0x08006f70
 80036fc:	20000000 	.word	0x20000000
 8003700:	20000004 	.word	0x20000004

08003704 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003704:	b5b0      	push	{r4, r5, r7, lr}
 8003706:	b08e      	sub	sp, #56	; 0x38
 8003708:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 800370a:	4b4c      	ldr	r3, [pc, #304]	; (800383c <HAL_RCC_GetSysClockFreq+0x138>)
 800370c:	68db      	ldr	r3, [r3, #12]
 800370e:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003710:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003712:	230c      	movs	r3, #12
 8003714:	4013      	ands	r3, r2
 8003716:	2b0c      	cmp	r3, #12
 8003718:	d014      	beq.n	8003744 <HAL_RCC_GetSysClockFreq+0x40>
 800371a:	d900      	bls.n	800371e <HAL_RCC_GetSysClockFreq+0x1a>
 800371c:	e07b      	b.n	8003816 <HAL_RCC_GetSysClockFreq+0x112>
 800371e:	2b04      	cmp	r3, #4
 8003720:	d002      	beq.n	8003728 <HAL_RCC_GetSysClockFreq+0x24>
 8003722:	2b08      	cmp	r3, #8
 8003724:	d00b      	beq.n	800373e <HAL_RCC_GetSysClockFreq+0x3a>
 8003726:	e076      	b.n	8003816 <HAL_RCC_GetSysClockFreq+0x112>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8003728:	4b44      	ldr	r3, [pc, #272]	; (800383c <HAL_RCC_GetSysClockFreq+0x138>)
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	2210      	movs	r2, #16
 800372e:	4013      	ands	r3, r2
 8003730:	d002      	beq.n	8003738 <HAL_RCC_GetSysClockFreq+0x34>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 8003732:	4b43      	ldr	r3, [pc, #268]	; (8003840 <HAL_RCC_GetSysClockFreq+0x13c>)
 8003734:	633b      	str	r3, [r7, #48]	; 0x30
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 8003736:	e07c      	b.n	8003832 <HAL_RCC_GetSysClockFreq+0x12e>
        sysclockfreq =  HSI_VALUE;
 8003738:	4b42      	ldr	r3, [pc, #264]	; (8003844 <HAL_RCC_GetSysClockFreq+0x140>)
 800373a:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800373c:	e079      	b.n	8003832 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 800373e:	4b42      	ldr	r3, [pc, #264]	; (8003848 <HAL_RCC_GetSysClockFreq+0x144>)
 8003740:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003742:	e076      	b.n	8003832 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8003744:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003746:	0c9a      	lsrs	r2, r3, #18
 8003748:	230f      	movs	r3, #15
 800374a:	401a      	ands	r2, r3
 800374c:	4b3f      	ldr	r3, [pc, #252]	; (800384c <HAL_RCC_GetSysClockFreq+0x148>)
 800374e:	5c9b      	ldrb	r3, [r3, r2]
 8003750:	62bb      	str	r3, [r7, #40]	; 0x28
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8003752:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003754:	0d9a      	lsrs	r2, r3, #22
 8003756:	2303      	movs	r3, #3
 8003758:	4013      	ands	r3, r2
 800375a:	3301      	adds	r3, #1
 800375c:	627b      	str	r3, [r7, #36]	; 0x24
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800375e:	4b37      	ldr	r3, [pc, #220]	; (800383c <HAL_RCC_GetSysClockFreq+0x138>)
 8003760:	68da      	ldr	r2, [r3, #12]
 8003762:	2380      	movs	r3, #128	; 0x80
 8003764:	025b      	lsls	r3, r3, #9
 8003766:	4013      	ands	r3, r2
 8003768:	d01a      	beq.n	80037a0 <HAL_RCC_GetSysClockFreq+0x9c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 800376a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800376c:	61bb      	str	r3, [r7, #24]
 800376e:	2300      	movs	r3, #0
 8003770:	61fb      	str	r3, [r7, #28]
 8003772:	4a35      	ldr	r2, [pc, #212]	; (8003848 <HAL_RCC_GetSysClockFreq+0x144>)
 8003774:	2300      	movs	r3, #0
 8003776:	69b8      	ldr	r0, [r7, #24]
 8003778:	69f9      	ldr	r1, [r7, #28]
 800377a:	f7fc feb5 	bl	80004e8 <__aeabi_lmul>
 800377e:	0002      	movs	r2, r0
 8003780:	000b      	movs	r3, r1
 8003782:	0010      	movs	r0, r2
 8003784:	0019      	movs	r1, r3
 8003786:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003788:	613b      	str	r3, [r7, #16]
 800378a:	2300      	movs	r3, #0
 800378c:	617b      	str	r3, [r7, #20]
 800378e:	693a      	ldr	r2, [r7, #16]
 8003790:	697b      	ldr	r3, [r7, #20]
 8003792:	f7fc fe89 	bl	80004a8 <__aeabi_uldivmod>
 8003796:	0002      	movs	r2, r0
 8003798:	000b      	movs	r3, r1
 800379a:	0013      	movs	r3, r2
 800379c:	637b      	str	r3, [r7, #52]	; 0x34
 800379e:	e037      	b.n	8003810 <HAL_RCC_GetSysClockFreq+0x10c>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 80037a0:	4b26      	ldr	r3, [pc, #152]	; (800383c <HAL_RCC_GetSysClockFreq+0x138>)
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	2210      	movs	r2, #16
 80037a6:	4013      	ands	r3, r2
 80037a8:	d01a      	beq.n	80037e0 <HAL_RCC_GetSysClockFreq+0xdc>
        {
          pllvco = (uint32_t)((((uint64_t)(HSI_VALUE >> 2)) * (uint64_t)pllm) / (uint64_t)plld);
 80037aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80037ac:	60bb      	str	r3, [r7, #8]
 80037ae:	2300      	movs	r3, #0
 80037b0:	60fb      	str	r3, [r7, #12]
 80037b2:	4a23      	ldr	r2, [pc, #140]	; (8003840 <HAL_RCC_GetSysClockFreq+0x13c>)
 80037b4:	2300      	movs	r3, #0
 80037b6:	68b8      	ldr	r0, [r7, #8]
 80037b8:	68f9      	ldr	r1, [r7, #12]
 80037ba:	f7fc fe95 	bl	80004e8 <__aeabi_lmul>
 80037be:	0002      	movs	r2, r0
 80037c0:	000b      	movs	r3, r1
 80037c2:	0010      	movs	r0, r2
 80037c4:	0019      	movs	r1, r3
 80037c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037c8:	603b      	str	r3, [r7, #0]
 80037ca:	2300      	movs	r3, #0
 80037cc:	607b      	str	r3, [r7, #4]
 80037ce:	683a      	ldr	r2, [r7, #0]
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	f7fc fe69 	bl	80004a8 <__aeabi_uldivmod>
 80037d6:	0002      	movs	r2, r0
 80037d8:	000b      	movs	r3, r1
 80037da:	0013      	movs	r3, r2
 80037dc:	637b      	str	r3, [r7, #52]	; 0x34
 80037de:	e017      	b.n	8003810 <HAL_RCC_GetSysClockFreq+0x10c>
        }
        else
        {
         pllvco = (uint32_t)(((uint64_t)HSI_VALUE * (uint64_t)pllm) / (uint64_t)plld);
 80037e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80037e2:	0018      	movs	r0, r3
 80037e4:	2300      	movs	r3, #0
 80037e6:	0019      	movs	r1, r3
 80037e8:	4a16      	ldr	r2, [pc, #88]	; (8003844 <HAL_RCC_GetSysClockFreq+0x140>)
 80037ea:	2300      	movs	r3, #0
 80037ec:	f7fc fe7c 	bl	80004e8 <__aeabi_lmul>
 80037f0:	0002      	movs	r2, r0
 80037f2:	000b      	movs	r3, r1
 80037f4:	0010      	movs	r0, r2
 80037f6:	0019      	movs	r1, r3
 80037f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037fa:	001c      	movs	r4, r3
 80037fc:	2300      	movs	r3, #0
 80037fe:	001d      	movs	r5, r3
 8003800:	0022      	movs	r2, r4
 8003802:	002b      	movs	r3, r5
 8003804:	f7fc fe50 	bl	80004a8 <__aeabi_uldivmod>
 8003808:	0002      	movs	r2, r0
 800380a:	000b      	movs	r3, r1
 800380c:	0013      	movs	r3, r2
 800380e:	637b      	str	r3, [r7, #52]	; 0x34
        }
      }
      sysclockfreq = pllvco;
 8003810:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003812:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003814:	e00d      	b.n	8003832 <HAL_RCC_GetSysClockFreq+0x12e>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8003816:	4b09      	ldr	r3, [pc, #36]	; (800383c <HAL_RCC_GetSysClockFreq+0x138>)
 8003818:	685b      	ldr	r3, [r3, #4]
 800381a:	0b5b      	lsrs	r3, r3, #13
 800381c:	2207      	movs	r2, #7
 800381e:	4013      	ands	r3, r2
 8003820:	623b      	str	r3, [r7, #32]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8003822:	6a3b      	ldr	r3, [r7, #32]
 8003824:	3301      	adds	r3, #1
 8003826:	2280      	movs	r2, #128	; 0x80
 8003828:	0212      	lsls	r2, r2, #8
 800382a:	409a      	lsls	r2, r3
 800382c:	0013      	movs	r3, r2
 800382e:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003830:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003832:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8003834:	0018      	movs	r0, r3
 8003836:	46bd      	mov	sp, r7
 8003838:	b00e      	add	sp, #56	; 0x38
 800383a:	bdb0      	pop	{r4, r5, r7, pc}
 800383c:	40021000 	.word	0x40021000
 8003840:	003d0900 	.word	0x003d0900
 8003844:	00f42400 	.word	0x00f42400
 8003848:	007a1200 	.word	0x007a1200
 800384c:	08006f88 	.word	0x08006f88

08003850 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8003850:	b580      	push	{r7, lr}
 8003852:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8003854:	4b02      	ldr	r3, [pc, #8]	; (8003860 <HAL_RCC_GetHCLKFreq+0x10>)
 8003856:	681b      	ldr	r3, [r3, #0]
}
 8003858:	0018      	movs	r0, r3
 800385a:	46bd      	mov	sp, r7
 800385c:	bd80      	pop	{r7, pc}
 800385e:	46c0      	nop			; (mov r8, r8)
 8003860:	20000000 	.word	0x20000000

08003864 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003864:	b580      	push	{r7, lr}
 8003866:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8003868:	f7ff fff2 	bl	8003850 <HAL_RCC_GetHCLKFreq>
 800386c:	0001      	movs	r1, r0
 800386e:	4b06      	ldr	r3, [pc, #24]	; (8003888 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003870:	68db      	ldr	r3, [r3, #12]
 8003872:	0a1b      	lsrs	r3, r3, #8
 8003874:	2207      	movs	r2, #7
 8003876:	4013      	ands	r3, r2
 8003878:	4a04      	ldr	r2, [pc, #16]	; (800388c <HAL_RCC_GetPCLK1Freq+0x28>)
 800387a:	5cd3      	ldrb	r3, [r2, r3]
 800387c:	40d9      	lsrs	r1, r3
 800387e:	000b      	movs	r3, r1
}
 8003880:	0018      	movs	r0, r3
 8003882:	46bd      	mov	sp, r7
 8003884:	bd80      	pop	{r7, pc}
 8003886:	46c0      	nop			; (mov r8, r8)
 8003888:	40021000 	.word	0x40021000
 800388c:	08006f80 	.word	0x08006f80

08003890 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8003890:	b580      	push	{r7, lr}
 8003892:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8003894:	f7ff ffdc 	bl	8003850 <HAL_RCC_GetHCLKFreq>
 8003898:	0001      	movs	r1, r0
 800389a:	4b06      	ldr	r3, [pc, #24]	; (80038b4 <HAL_RCC_GetPCLK2Freq+0x24>)
 800389c:	68db      	ldr	r3, [r3, #12]
 800389e:	0adb      	lsrs	r3, r3, #11
 80038a0:	2207      	movs	r2, #7
 80038a2:	4013      	ands	r3, r2
 80038a4:	4a04      	ldr	r2, [pc, #16]	; (80038b8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80038a6:	5cd3      	ldrb	r3, [r2, r3]
 80038a8:	40d9      	lsrs	r1, r3
 80038aa:	000b      	movs	r3, r1
}
 80038ac:	0018      	movs	r0, r3
 80038ae:	46bd      	mov	sp, r7
 80038b0:	bd80      	pop	{r7, pc}
 80038b2:	46c0      	nop			; (mov r8, r8)
 80038b4:	40021000 	.word	0x40021000
 80038b8:	08006f80 	.word	0x08006f80

080038bc <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80038bc:	b580      	push	{r7, lr}
 80038be:	b082      	sub	sp, #8
 80038c0:	af00      	add	r7, sp, #0
 80038c2:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d101      	bne.n	80038ce <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80038ca:	2301      	movs	r3, #1
 80038cc:	e044      	b.n	8003958 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d107      	bne.n	80038e6 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	2274      	movs	r2, #116	; 0x74
 80038da:	2100      	movs	r1, #0
 80038dc:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	0018      	movs	r0, r3
 80038e2:	f7fe fe09 	bl	80024f8 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	2224      	movs	r2, #36	; 0x24
 80038ea:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	681a      	ldr	r2, [r3, #0]
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	2101      	movs	r1, #1
 80038f8:	438a      	bics	r2, r1
 80038fa:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	0018      	movs	r0, r3
 8003900:	f000 f830 	bl	8003964 <UART_SetConfig>
 8003904:	0003      	movs	r3, r0
 8003906:	2b01      	cmp	r3, #1
 8003908:	d101      	bne.n	800390e <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 800390a:	2301      	movs	r3, #1
 800390c:	e024      	b.n	8003958 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003912:	2b00      	cmp	r3, #0
 8003914:	d003      	beq.n	800391e <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	0018      	movs	r0, r3
 800391a:	f000 fae1 	bl	8003ee0 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	685a      	ldr	r2, [r3, #4]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	490d      	ldr	r1, [pc, #52]	; (8003960 <HAL_UART_Init+0xa4>)
 800392a:	400a      	ands	r2, r1
 800392c:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	689a      	ldr	r2, [r3, #8]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	212a      	movs	r1, #42	; 0x2a
 800393a:	438a      	bics	r2, r1
 800393c:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	681a      	ldr	r2, [r3, #0]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	2101      	movs	r1, #1
 800394a:	430a      	orrs	r2, r1
 800394c:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	0018      	movs	r0, r3
 8003952:	f000 fb79 	bl	8004048 <UART_CheckIdleState>
 8003956:	0003      	movs	r3, r0
}
 8003958:	0018      	movs	r0, r3
 800395a:	46bd      	mov	sp, r7
 800395c:	b002      	add	sp, #8
 800395e:	bd80      	pop	{r7, pc}
 8003960:	ffffb7ff 	.word	0xffffb7ff

08003964 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003964:	b5b0      	push	{r4, r5, r7, lr}
 8003966:	b08e      	sub	sp, #56	; 0x38
 8003968:	af00      	add	r7, sp, #0
 800396a:	61f8      	str	r0, [r7, #28]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800396c:	231a      	movs	r3, #26
 800396e:	2218      	movs	r2, #24
 8003970:	4694      	mov	ip, r2
 8003972:	44bc      	add	ip, r7
 8003974:	4463      	add	r3, ip
 8003976:	2200      	movs	r2, #0
 8003978:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800397a:	69fb      	ldr	r3, [r7, #28]
 800397c:	689a      	ldr	r2, [r3, #8]
 800397e:	69fb      	ldr	r3, [r7, #28]
 8003980:	691b      	ldr	r3, [r3, #16]
 8003982:	431a      	orrs	r2, r3
 8003984:	69fb      	ldr	r3, [r7, #28]
 8003986:	695b      	ldr	r3, [r3, #20]
 8003988:	431a      	orrs	r2, r3
 800398a:	69fb      	ldr	r3, [r7, #28]
 800398c:	69db      	ldr	r3, [r3, #28]
 800398e:	4313      	orrs	r3, r2
 8003990:	637b      	str	r3, [r7, #52]	; 0x34
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003992:	69fb      	ldr	r3, [r7, #28]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	4ab0      	ldr	r2, [pc, #704]	; (8003c5c <UART_SetConfig+0x2f8>)
 800399a:	4013      	ands	r3, r2
 800399c:	0019      	movs	r1, r3
 800399e:	69fb      	ldr	r3, [r7, #28]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80039a4:	430a      	orrs	r2, r1
 80039a6:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80039a8:	69fb      	ldr	r3, [r7, #28]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	685b      	ldr	r3, [r3, #4]
 80039ae:	4aac      	ldr	r2, [pc, #688]	; (8003c60 <UART_SetConfig+0x2fc>)
 80039b0:	4013      	ands	r3, r2
 80039b2:	0019      	movs	r1, r3
 80039b4:	69fb      	ldr	r3, [r7, #28]
 80039b6:	68da      	ldr	r2, [r3, #12]
 80039b8:	69fb      	ldr	r3, [r7, #28]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	430a      	orrs	r2, r1
 80039be:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80039c0:	69fb      	ldr	r3, [r7, #28]
 80039c2:	699b      	ldr	r3, [r3, #24]
 80039c4:	637b      	str	r3, [r7, #52]	; 0x34

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 80039c6:	69fb      	ldr	r3, [r7, #28]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	4aa6      	ldr	r2, [pc, #664]	; (8003c64 <UART_SetConfig+0x300>)
 80039cc:	4293      	cmp	r3, r2
 80039ce:	d004      	beq.n	80039da <UART_SetConfig+0x76>
  {
    tmpreg |= huart->Init.OneBitSampling;
 80039d0:	69fb      	ldr	r3, [r7, #28]
 80039d2:	6a1b      	ldr	r3, [r3, #32]
 80039d4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80039d6:	4313      	orrs	r3, r2
 80039d8:	637b      	str	r3, [r7, #52]	; 0x34
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80039da:	69fb      	ldr	r3, [r7, #28]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	689b      	ldr	r3, [r3, #8]
 80039e0:	4aa1      	ldr	r2, [pc, #644]	; (8003c68 <UART_SetConfig+0x304>)
 80039e2:	4013      	ands	r3, r2
 80039e4:	0019      	movs	r1, r3
 80039e6:	69fb      	ldr	r3, [r7, #28]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80039ec:	430a      	orrs	r2, r1
 80039ee:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 80039f0:	69fb      	ldr	r3, [r7, #28]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	4a9d      	ldr	r2, [pc, #628]	; (8003c6c <UART_SetConfig+0x308>)
 80039f6:	4293      	cmp	r3, r2
 80039f8:	d136      	bne.n	8003a68 <UART_SetConfig+0x104>
 80039fa:	4b9d      	ldr	r3, [pc, #628]	; (8003c70 <UART_SetConfig+0x30c>)
 80039fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80039fe:	2203      	movs	r2, #3
 8003a00:	4013      	ands	r3, r2
 8003a02:	2b03      	cmp	r3, #3
 8003a04:	d020      	beq.n	8003a48 <UART_SetConfig+0xe4>
 8003a06:	d827      	bhi.n	8003a58 <UART_SetConfig+0xf4>
 8003a08:	2b02      	cmp	r3, #2
 8003a0a:	d00d      	beq.n	8003a28 <UART_SetConfig+0xc4>
 8003a0c:	d824      	bhi.n	8003a58 <UART_SetConfig+0xf4>
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d002      	beq.n	8003a18 <UART_SetConfig+0xb4>
 8003a12:	2b01      	cmp	r3, #1
 8003a14:	d010      	beq.n	8003a38 <UART_SetConfig+0xd4>
 8003a16:	e01f      	b.n	8003a58 <UART_SetConfig+0xf4>
 8003a18:	231b      	movs	r3, #27
 8003a1a:	2218      	movs	r2, #24
 8003a1c:	4694      	mov	ip, r2
 8003a1e:	44bc      	add	ip, r7
 8003a20:	4463      	add	r3, ip
 8003a22:	2201      	movs	r2, #1
 8003a24:	701a      	strb	r2, [r3, #0]
 8003a26:	e0c5      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003a28:	231b      	movs	r3, #27
 8003a2a:	2218      	movs	r2, #24
 8003a2c:	4694      	mov	ip, r2
 8003a2e:	44bc      	add	ip, r7
 8003a30:	4463      	add	r3, ip
 8003a32:	2202      	movs	r2, #2
 8003a34:	701a      	strb	r2, [r3, #0]
 8003a36:	e0bd      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003a38:	231b      	movs	r3, #27
 8003a3a:	2218      	movs	r2, #24
 8003a3c:	4694      	mov	ip, r2
 8003a3e:	44bc      	add	ip, r7
 8003a40:	4463      	add	r3, ip
 8003a42:	2204      	movs	r2, #4
 8003a44:	701a      	strb	r2, [r3, #0]
 8003a46:	e0b5      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003a48:	231b      	movs	r3, #27
 8003a4a:	2218      	movs	r2, #24
 8003a4c:	4694      	mov	ip, r2
 8003a4e:	44bc      	add	ip, r7
 8003a50:	4463      	add	r3, ip
 8003a52:	2208      	movs	r2, #8
 8003a54:	701a      	strb	r2, [r3, #0]
 8003a56:	e0ad      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003a58:	231b      	movs	r3, #27
 8003a5a:	2218      	movs	r2, #24
 8003a5c:	4694      	mov	ip, r2
 8003a5e:	44bc      	add	ip, r7
 8003a60:	4463      	add	r3, ip
 8003a62:	2210      	movs	r2, #16
 8003a64:	701a      	strb	r2, [r3, #0]
 8003a66:	e0a5      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003a68:	69fb      	ldr	r3, [r7, #28]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	4a81      	ldr	r2, [pc, #516]	; (8003c74 <UART_SetConfig+0x310>)
 8003a6e:	4293      	cmp	r3, r2
 8003a70:	d136      	bne.n	8003ae0 <UART_SetConfig+0x17c>
 8003a72:	4b7f      	ldr	r3, [pc, #508]	; (8003c70 <UART_SetConfig+0x30c>)
 8003a74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003a76:	220c      	movs	r2, #12
 8003a78:	4013      	ands	r3, r2
 8003a7a:	2b0c      	cmp	r3, #12
 8003a7c:	d020      	beq.n	8003ac0 <UART_SetConfig+0x15c>
 8003a7e:	d827      	bhi.n	8003ad0 <UART_SetConfig+0x16c>
 8003a80:	2b08      	cmp	r3, #8
 8003a82:	d00d      	beq.n	8003aa0 <UART_SetConfig+0x13c>
 8003a84:	d824      	bhi.n	8003ad0 <UART_SetConfig+0x16c>
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d002      	beq.n	8003a90 <UART_SetConfig+0x12c>
 8003a8a:	2b04      	cmp	r3, #4
 8003a8c:	d010      	beq.n	8003ab0 <UART_SetConfig+0x14c>
 8003a8e:	e01f      	b.n	8003ad0 <UART_SetConfig+0x16c>
 8003a90:	231b      	movs	r3, #27
 8003a92:	2218      	movs	r2, #24
 8003a94:	4694      	mov	ip, r2
 8003a96:	44bc      	add	ip, r7
 8003a98:	4463      	add	r3, ip
 8003a9a:	2200      	movs	r2, #0
 8003a9c:	701a      	strb	r2, [r3, #0]
 8003a9e:	e089      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003aa0:	231b      	movs	r3, #27
 8003aa2:	2218      	movs	r2, #24
 8003aa4:	4694      	mov	ip, r2
 8003aa6:	44bc      	add	ip, r7
 8003aa8:	4463      	add	r3, ip
 8003aaa:	2202      	movs	r2, #2
 8003aac:	701a      	strb	r2, [r3, #0]
 8003aae:	e081      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003ab0:	231b      	movs	r3, #27
 8003ab2:	2218      	movs	r2, #24
 8003ab4:	4694      	mov	ip, r2
 8003ab6:	44bc      	add	ip, r7
 8003ab8:	4463      	add	r3, ip
 8003aba:	2204      	movs	r2, #4
 8003abc:	701a      	strb	r2, [r3, #0]
 8003abe:	e079      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003ac0:	231b      	movs	r3, #27
 8003ac2:	2218      	movs	r2, #24
 8003ac4:	4694      	mov	ip, r2
 8003ac6:	44bc      	add	ip, r7
 8003ac8:	4463      	add	r3, ip
 8003aca:	2208      	movs	r2, #8
 8003acc:	701a      	strb	r2, [r3, #0]
 8003ace:	e071      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003ad0:	231b      	movs	r3, #27
 8003ad2:	2218      	movs	r2, #24
 8003ad4:	4694      	mov	ip, r2
 8003ad6:	44bc      	add	ip, r7
 8003ad8:	4463      	add	r3, ip
 8003ada:	2210      	movs	r2, #16
 8003adc:	701a      	strb	r2, [r3, #0]
 8003ade:	e069      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003ae0:	69fb      	ldr	r3, [r7, #28]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	4a64      	ldr	r2, [pc, #400]	; (8003c78 <UART_SetConfig+0x314>)
 8003ae6:	4293      	cmp	r3, r2
 8003ae8:	d107      	bne.n	8003afa <UART_SetConfig+0x196>
 8003aea:	231b      	movs	r3, #27
 8003aec:	2218      	movs	r2, #24
 8003aee:	4694      	mov	ip, r2
 8003af0:	44bc      	add	ip, r7
 8003af2:	4463      	add	r3, ip
 8003af4:	2200      	movs	r2, #0
 8003af6:	701a      	strb	r2, [r3, #0]
 8003af8:	e05c      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003afa:	69fb      	ldr	r3, [r7, #28]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	4a5f      	ldr	r2, [pc, #380]	; (8003c7c <UART_SetConfig+0x318>)
 8003b00:	4293      	cmp	r3, r2
 8003b02:	d107      	bne.n	8003b14 <UART_SetConfig+0x1b0>
 8003b04:	231b      	movs	r3, #27
 8003b06:	2218      	movs	r2, #24
 8003b08:	4694      	mov	ip, r2
 8003b0a:	44bc      	add	ip, r7
 8003b0c:	4463      	add	r3, ip
 8003b0e:	2200      	movs	r2, #0
 8003b10:	701a      	strb	r2, [r3, #0]
 8003b12:	e04f      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003b14:	69fb      	ldr	r3, [r7, #28]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4a52      	ldr	r2, [pc, #328]	; (8003c64 <UART_SetConfig+0x300>)
 8003b1a:	4293      	cmp	r3, r2
 8003b1c:	d143      	bne.n	8003ba6 <UART_SetConfig+0x242>
 8003b1e:	4b54      	ldr	r3, [pc, #336]	; (8003c70 <UART_SetConfig+0x30c>)
 8003b20:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b22:	23c0      	movs	r3, #192	; 0xc0
 8003b24:	011b      	lsls	r3, r3, #4
 8003b26:	4013      	ands	r3, r2
 8003b28:	22c0      	movs	r2, #192	; 0xc0
 8003b2a:	0112      	lsls	r2, r2, #4
 8003b2c:	4293      	cmp	r3, r2
 8003b2e:	d02a      	beq.n	8003b86 <UART_SetConfig+0x222>
 8003b30:	22c0      	movs	r2, #192	; 0xc0
 8003b32:	0112      	lsls	r2, r2, #4
 8003b34:	4293      	cmp	r3, r2
 8003b36:	d82e      	bhi.n	8003b96 <UART_SetConfig+0x232>
 8003b38:	2280      	movs	r2, #128	; 0x80
 8003b3a:	0112      	lsls	r2, r2, #4
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	d012      	beq.n	8003b66 <UART_SetConfig+0x202>
 8003b40:	2280      	movs	r2, #128	; 0x80
 8003b42:	0112      	lsls	r2, r2, #4
 8003b44:	4293      	cmp	r3, r2
 8003b46:	d826      	bhi.n	8003b96 <UART_SetConfig+0x232>
 8003b48:	2b00      	cmp	r3, #0
 8003b4a:	d004      	beq.n	8003b56 <UART_SetConfig+0x1f2>
 8003b4c:	2280      	movs	r2, #128	; 0x80
 8003b4e:	00d2      	lsls	r2, r2, #3
 8003b50:	4293      	cmp	r3, r2
 8003b52:	d010      	beq.n	8003b76 <UART_SetConfig+0x212>
 8003b54:	e01f      	b.n	8003b96 <UART_SetConfig+0x232>
 8003b56:	231b      	movs	r3, #27
 8003b58:	2218      	movs	r2, #24
 8003b5a:	4694      	mov	ip, r2
 8003b5c:	44bc      	add	ip, r7
 8003b5e:	4463      	add	r3, ip
 8003b60:	2200      	movs	r2, #0
 8003b62:	701a      	strb	r2, [r3, #0]
 8003b64:	e026      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003b66:	231b      	movs	r3, #27
 8003b68:	2218      	movs	r2, #24
 8003b6a:	4694      	mov	ip, r2
 8003b6c:	44bc      	add	ip, r7
 8003b6e:	4463      	add	r3, ip
 8003b70:	2202      	movs	r2, #2
 8003b72:	701a      	strb	r2, [r3, #0]
 8003b74:	e01e      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003b76:	231b      	movs	r3, #27
 8003b78:	2218      	movs	r2, #24
 8003b7a:	4694      	mov	ip, r2
 8003b7c:	44bc      	add	ip, r7
 8003b7e:	4463      	add	r3, ip
 8003b80:	2204      	movs	r2, #4
 8003b82:	701a      	strb	r2, [r3, #0]
 8003b84:	e016      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003b86:	231b      	movs	r3, #27
 8003b88:	2218      	movs	r2, #24
 8003b8a:	4694      	mov	ip, r2
 8003b8c:	44bc      	add	ip, r7
 8003b8e:	4463      	add	r3, ip
 8003b90:	2208      	movs	r2, #8
 8003b92:	701a      	strb	r2, [r3, #0]
 8003b94:	e00e      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003b96:	231b      	movs	r3, #27
 8003b98:	2218      	movs	r2, #24
 8003b9a:	4694      	mov	ip, r2
 8003b9c:	44bc      	add	ip, r7
 8003b9e:	4463      	add	r3, ip
 8003ba0:	2210      	movs	r2, #16
 8003ba2:	701a      	strb	r2, [r3, #0]
 8003ba4:	e006      	b.n	8003bb4 <UART_SetConfig+0x250>
 8003ba6:	231b      	movs	r3, #27
 8003ba8:	2218      	movs	r2, #24
 8003baa:	4694      	mov	ip, r2
 8003bac:	44bc      	add	ip, r7
 8003bae:	4463      	add	r3, ip
 8003bb0:	2210      	movs	r2, #16
 8003bb2:	701a      	strb	r2, [r3, #0]

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 8003bb4:	69fb      	ldr	r3, [r7, #28]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	4a2a      	ldr	r2, [pc, #168]	; (8003c64 <UART_SetConfig+0x300>)
 8003bba:	4293      	cmp	r3, r2
 8003bbc:	d000      	beq.n	8003bc0 <UART_SetConfig+0x25c>
 8003bbe:	e09e      	b.n	8003cfe <UART_SetConfig+0x39a>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 8003bc0:	231b      	movs	r3, #27
 8003bc2:	2218      	movs	r2, #24
 8003bc4:	4694      	mov	ip, r2
 8003bc6:	44bc      	add	ip, r7
 8003bc8:	4463      	add	r3, ip
 8003bca:	781b      	ldrb	r3, [r3, #0]
 8003bcc:	2b08      	cmp	r3, #8
 8003bce:	d01d      	beq.n	8003c0c <UART_SetConfig+0x2a8>
 8003bd0:	dc20      	bgt.n	8003c14 <UART_SetConfig+0x2b0>
 8003bd2:	2b04      	cmp	r3, #4
 8003bd4:	d015      	beq.n	8003c02 <UART_SetConfig+0x29e>
 8003bd6:	dc1d      	bgt.n	8003c14 <UART_SetConfig+0x2b0>
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d002      	beq.n	8003be2 <UART_SetConfig+0x27e>
 8003bdc:	2b02      	cmp	r3, #2
 8003bde:	d005      	beq.n	8003bec <UART_SetConfig+0x288>
 8003be0:	e018      	b.n	8003c14 <UART_SetConfig+0x2b0>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003be2:	f7ff fe3f 	bl	8003864 <HAL_RCC_GetPCLK1Freq>
 8003be6:	0003      	movs	r3, r0
 8003be8:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003bea:	e01d      	b.n	8003c28 <UART_SetConfig+0x2c4>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8003bec:	4b20      	ldr	r3, [pc, #128]	; (8003c70 <UART_SetConfig+0x30c>)
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	2210      	movs	r2, #16
 8003bf2:	4013      	ands	r3, r2
 8003bf4:	d002      	beq.n	8003bfc <UART_SetConfig+0x298>
        {
          pclk = (uint32_t)(HSI_VALUE >> 2U);
 8003bf6:	4b22      	ldr	r3, [pc, #136]	; (8003c80 <UART_SetConfig+0x31c>)
 8003bf8:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8003bfa:	e015      	b.n	8003c28 <UART_SetConfig+0x2c4>
          pclk = (uint32_t) HSI_VALUE;
 8003bfc:	4b21      	ldr	r3, [pc, #132]	; (8003c84 <UART_SetConfig+0x320>)
 8003bfe:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003c00:	e012      	b.n	8003c28 <UART_SetConfig+0x2c4>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003c02:	f7ff fd7f 	bl	8003704 <HAL_RCC_GetSysClockFreq>
 8003c06:	0003      	movs	r3, r0
 8003c08:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003c0a:	e00d      	b.n	8003c28 <UART_SetConfig+0x2c4>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003c0c:	2380      	movs	r3, #128	; 0x80
 8003c0e:	021b      	lsls	r3, r3, #8
 8003c10:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003c12:	e009      	b.n	8003c28 <UART_SetConfig+0x2c4>
      default:
        pclk = 0U;
 8003c14:	2300      	movs	r3, #0
 8003c16:	62fb      	str	r3, [r7, #44]	; 0x2c
        ret = HAL_ERROR;
 8003c18:	231a      	movs	r3, #26
 8003c1a:	2218      	movs	r2, #24
 8003c1c:	4694      	mov	ip, r2
 8003c1e:	44bc      	add	ip, r7
 8003c20:	4463      	add	r3, ip
 8003c22:	2201      	movs	r2, #1
 8003c24:	701a      	strb	r2, [r3, #0]
        break;
 8003c26:	46c0      	nop			; (mov r8, r8)
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 8003c28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d100      	bne.n	8003c30 <UART_SetConfig+0x2cc>
 8003c2e:	e13c      	b.n	8003eaa <UART_SetConfig+0x546>
    {
      /* No Prescaler applicable */
      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 8003c30:	69fb      	ldr	r3, [r7, #28]
 8003c32:	685a      	ldr	r2, [r3, #4]
 8003c34:	0013      	movs	r3, r2
 8003c36:	005b      	lsls	r3, r3, #1
 8003c38:	189b      	adds	r3, r3, r2
 8003c3a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003c3c:	429a      	cmp	r2, r3
 8003c3e:	d305      	bcc.n	8003c4c <UART_SetConfig+0x2e8>
          (pclk > (4096U * huart->Init.BaudRate)))
 8003c40:	69fb      	ldr	r3, [r7, #28]
 8003c42:	685b      	ldr	r3, [r3, #4]
 8003c44:	031b      	lsls	r3, r3, #12
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 8003c46:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003c48:	429a      	cmp	r2, r3
 8003c4a:	d91d      	bls.n	8003c88 <UART_SetConfig+0x324>
      {
        ret = HAL_ERROR;
 8003c4c:	231a      	movs	r3, #26
 8003c4e:	2218      	movs	r2, #24
 8003c50:	4694      	mov	ip, r2
 8003c52:	44bc      	add	ip, r7
 8003c54:	4463      	add	r3, ip
 8003c56:	2201      	movs	r2, #1
 8003c58:	701a      	strb	r2, [r3, #0]
 8003c5a:	e126      	b.n	8003eaa <UART_SetConfig+0x546>
 8003c5c:	efff69f3 	.word	0xefff69f3
 8003c60:	ffffcfff 	.word	0xffffcfff
 8003c64:	40004800 	.word	0x40004800
 8003c68:	fffff4ff 	.word	0xfffff4ff
 8003c6c:	40013800 	.word	0x40013800
 8003c70:	40021000 	.word	0x40021000
 8003c74:	40004400 	.word	0x40004400
 8003c78:	40004c00 	.word	0x40004c00
 8003c7c:	40005000 	.word	0x40005000
 8003c80:	003d0900 	.word	0x003d0900
 8003c84:	00f42400 	.word	0x00f42400
      }
      else
      {
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
 8003c88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c8a:	613b      	str	r3, [r7, #16]
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	617b      	str	r3, [r7, #20]
 8003c90:	6939      	ldr	r1, [r7, #16]
 8003c92:	697a      	ldr	r2, [r7, #20]
 8003c94:	000b      	movs	r3, r1
 8003c96:	0e1b      	lsrs	r3, r3, #24
 8003c98:	0010      	movs	r0, r2
 8003c9a:	0205      	lsls	r5, r0, #8
 8003c9c:	431d      	orrs	r5, r3
 8003c9e:	000b      	movs	r3, r1
 8003ca0:	021c      	lsls	r4, r3, #8
 8003ca2:	69fb      	ldr	r3, [r7, #28]
 8003ca4:	685b      	ldr	r3, [r3, #4]
 8003ca6:	085b      	lsrs	r3, r3, #1
 8003ca8:	60bb      	str	r3, [r7, #8]
 8003caa:	2300      	movs	r3, #0
 8003cac:	60fb      	str	r3, [r7, #12]
 8003cae:	68b8      	ldr	r0, [r7, #8]
 8003cb0:	68f9      	ldr	r1, [r7, #12]
 8003cb2:	1900      	adds	r0, r0, r4
 8003cb4:	4169      	adcs	r1, r5
 8003cb6:	69fb      	ldr	r3, [r7, #28]
 8003cb8:	685b      	ldr	r3, [r3, #4]
 8003cba:	603b      	str	r3, [r7, #0]
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	607b      	str	r3, [r7, #4]
 8003cc0:	683a      	ldr	r2, [r7, #0]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	f7fc fbf0 	bl	80004a8 <__aeabi_uldivmod>
 8003cc8:	0002      	movs	r2, r0
 8003cca:	000b      	movs	r3, r1
 8003ccc:	0013      	movs	r3, r2
 8003cce:	62bb      	str	r3, [r7, #40]	; 0x28
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8003cd0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003cd2:	23c0      	movs	r3, #192	; 0xc0
 8003cd4:	009b      	lsls	r3, r3, #2
 8003cd6:	429a      	cmp	r2, r3
 8003cd8:	d309      	bcc.n	8003cee <UART_SetConfig+0x38a>
 8003cda:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003cdc:	2380      	movs	r3, #128	; 0x80
 8003cde:	035b      	lsls	r3, r3, #13
 8003ce0:	429a      	cmp	r2, r3
 8003ce2:	d204      	bcs.n	8003cee <UART_SetConfig+0x38a>
        {
          huart->Instance->BRR = usartdiv;
 8003ce4:	69fb      	ldr	r3, [r7, #28]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003cea:	60da      	str	r2, [r3, #12]
 8003cec:	e0dd      	b.n	8003eaa <UART_SetConfig+0x546>
        }
        else
        {
          ret = HAL_ERROR;
 8003cee:	231a      	movs	r3, #26
 8003cf0:	2218      	movs	r2, #24
 8003cf2:	4694      	mov	ip, r2
 8003cf4:	44bc      	add	ip, r7
 8003cf6:	4463      	add	r3, ip
 8003cf8:	2201      	movs	r2, #1
 8003cfa:	701a      	strb	r2, [r3, #0]
 8003cfc:	e0d5      	b.n	8003eaa <UART_SetConfig+0x546>
        }
      } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003cfe:	69fb      	ldr	r3, [r7, #28]
 8003d00:	69da      	ldr	r2, [r3, #28]
 8003d02:	2380      	movs	r3, #128	; 0x80
 8003d04:	021b      	lsls	r3, r3, #8
 8003d06:	429a      	cmp	r2, r3
 8003d08:	d000      	beq.n	8003d0c <UART_SetConfig+0x3a8>
 8003d0a:	e074      	b.n	8003df6 <UART_SetConfig+0x492>
  {
    switch (clocksource)
 8003d0c:	231b      	movs	r3, #27
 8003d0e:	2218      	movs	r2, #24
 8003d10:	4694      	mov	ip, r2
 8003d12:	44bc      	add	ip, r7
 8003d14:	4463      	add	r3, ip
 8003d16:	781b      	ldrb	r3, [r3, #0]
 8003d18:	2b08      	cmp	r3, #8
 8003d1a:	d822      	bhi.n	8003d62 <UART_SetConfig+0x3fe>
 8003d1c:	009a      	lsls	r2, r3, #2
 8003d1e:	4b6b      	ldr	r3, [pc, #428]	; (8003ecc <UART_SetConfig+0x568>)
 8003d20:	18d3      	adds	r3, r2, r3
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	469f      	mov	pc, r3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003d26:	f7ff fd9d 	bl	8003864 <HAL_RCC_GetPCLK1Freq>
 8003d2a:	0003      	movs	r3, r0
 8003d2c:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003d2e:	e022      	b.n	8003d76 <UART_SetConfig+0x412>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8003d30:	f7ff fdae 	bl	8003890 <HAL_RCC_GetPCLK2Freq>
 8003d34:	0003      	movs	r3, r0
 8003d36:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003d38:	e01d      	b.n	8003d76 <UART_SetConfig+0x412>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8003d3a:	4b65      	ldr	r3, [pc, #404]	; (8003ed0 <UART_SetConfig+0x56c>)
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	2210      	movs	r2, #16
 8003d40:	4013      	ands	r3, r2
 8003d42:	d002      	beq.n	8003d4a <UART_SetConfig+0x3e6>
        {
          pclk = (uint32_t)(HSI_VALUE >> 2U);
 8003d44:	4b63      	ldr	r3, [pc, #396]	; (8003ed4 <UART_SetConfig+0x570>)
 8003d46:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8003d48:	e015      	b.n	8003d76 <UART_SetConfig+0x412>
          pclk = (uint32_t) HSI_VALUE;
 8003d4a:	4b63      	ldr	r3, [pc, #396]	; (8003ed8 <UART_SetConfig+0x574>)
 8003d4c:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003d4e:	e012      	b.n	8003d76 <UART_SetConfig+0x412>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003d50:	f7ff fcd8 	bl	8003704 <HAL_RCC_GetSysClockFreq>
 8003d54:	0003      	movs	r3, r0
 8003d56:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003d58:	e00d      	b.n	8003d76 <UART_SetConfig+0x412>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003d5a:	2380      	movs	r3, #128	; 0x80
 8003d5c:	021b      	lsls	r3, r3, #8
 8003d5e:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003d60:	e009      	b.n	8003d76 <UART_SetConfig+0x412>
      default:
        pclk = 0U;
 8003d62:	2300      	movs	r3, #0
 8003d64:	62fb      	str	r3, [r7, #44]	; 0x2c
        ret = HAL_ERROR;
 8003d66:	231a      	movs	r3, #26
 8003d68:	2218      	movs	r2, #24
 8003d6a:	4694      	mov	ip, r2
 8003d6c:	44bc      	add	ip, r7
 8003d6e:	4463      	add	r3, ip
 8003d70:	2201      	movs	r2, #1
 8003d72:	701a      	strb	r2, [r3, #0]
        break;
 8003d74:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8003d76:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d78:	2b00      	cmp	r3, #0
 8003d7a:	d100      	bne.n	8003d7e <UART_SetConfig+0x41a>
 8003d7c:	e095      	b.n	8003eaa <UART_SetConfig+0x546>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003d7e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d80:	005a      	lsls	r2, r3, #1
 8003d82:	69fb      	ldr	r3, [r7, #28]
 8003d84:	685b      	ldr	r3, [r3, #4]
 8003d86:	085b      	lsrs	r3, r3, #1
 8003d88:	18d2      	adds	r2, r2, r3
 8003d8a:	69fb      	ldr	r3, [r7, #28]
 8003d8c:	685b      	ldr	r3, [r3, #4]
 8003d8e:	0019      	movs	r1, r3
 8003d90:	0010      	movs	r0, r2
 8003d92:	f7fc f9d5 	bl	8000140 <__udivsi3>
 8003d96:	0003      	movs	r3, r0
 8003d98:	b29b      	uxth	r3, r3
 8003d9a:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003d9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d9e:	2b0f      	cmp	r3, #15
 8003da0:	d921      	bls.n	8003de6 <UART_SetConfig+0x482>
 8003da2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003da4:	2380      	movs	r3, #128	; 0x80
 8003da6:	025b      	lsls	r3, r3, #9
 8003da8:	429a      	cmp	r2, r3
 8003daa:	d21c      	bcs.n	8003de6 <UART_SetConfig+0x482>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003dac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003dae:	b29a      	uxth	r2, r3
 8003db0:	200e      	movs	r0, #14
 8003db2:	2418      	movs	r4, #24
 8003db4:	193b      	adds	r3, r7, r4
 8003db6:	181b      	adds	r3, r3, r0
 8003db8:	210f      	movs	r1, #15
 8003dba:	438a      	bics	r2, r1
 8003dbc:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003dbe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003dc0:	085b      	lsrs	r3, r3, #1
 8003dc2:	b29b      	uxth	r3, r3
 8003dc4:	2207      	movs	r2, #7
 8003dc6:	4013      	ands	r3, r2
 8003dc8:	b299      	uxth	r1, r3
 8003dca:	193b      	adds	r3, r7, r4
 8003dcc:	181b      	adds	r3, r3, r0
 8003dce:	193a      	adds	r2, r7, r4
 8003dd0:	1812      	adds	r2, r2, r0
 8003dd2:	8812      	ldrh	r2, [r2, #0]
 8003dd4:	430a      	orrs	r2, r1
 8003dd6:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 8003dd8:	69fb      	ldr	r3, [r7, #28]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	193a      	adds	r2, r7, r4
 8003dde:	1812      	adds	r2, r2, r0
 8003de0:	8812      	ldrh	r2, [r2, #0]
 8003de2:	60da      	str	r2, [r3, #12]
 8003de4:	e061      	b.n	8003eaa <UART_SetConfig+0x546>
      }
      else
      {
        ret = HAL_ERROR;
 8003de6:	231a      	movs	r3, #26
 8003de8:	2218      	movs	r2, #24
 8003dea:	4694      	mov	ip, r2
 8003dec:	44bc      	add	ip, r7
 8003dee:	4463      	add	r3, ip
 8003df0:	2201      	movs	r2, #1
 8003df2:	701a      	strb	r2, [r3, #0]
 8003df4:	e059      	b.n	8003eaa <UART_SetConfig+0x546>
      }
    }
  }
  else
  {
    switch (clocksource)
 8003df6:	231b      	movs	r3, #27
 8003df8:	2218      	movs	r2, #24
 8003dfa:	4694      	mov	ip, r2
 8003dfc:	44bc      	add	ip, r7
 8003dfe:	4463      	add	r3, ip
 8003e00:	781b      	ldrb	r3, [r3, #0]
 8003e02:	2b08      	cmp	r3, #8
 8003e04:	d822      	bhi.n	8003e4c <UART_SetConfig+0x4e8>
 8003e06:	009a      	lsls	r2, r3, #2
 8003e08:	4b34      	ldr	r3, [pc, #208]	; (8003edc <UART_SetConfig+0x578>)
 8003e0a:	18d3      	adds	r3, r2, r3
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	469f      	mov	pc, r3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003e10:	f7ff fd28 	bl	8003864 <HAL_RCC_GetPCLK1Freq>
 8003e14:	0003      	movs	r3, r0
 8003e16:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003e18:	e022      	b.n	8003e60 <UART_SetConfig+0x4fc>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8003e1a:	f7ff fd39 	bl	8003890 <HAL_RCC_GetPCLK2Freq>
 8003e1e:	0003      	movs	r3, r0
 8003e20:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003e22:	e01d      	b.n	8003e60 <UART_SetConfig+0x4fc>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8003e24:	4b2a      	ldr	r3, [pc, #168]	; (8003ed0 <UART_SetConfig+0x56c>)
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	2210      	movs	r2, #16
 8003e2a:	4013      	ands	r3, r2
 8003e2c:	d002      	beq.n	8003e34 <UART_SetConfig+0x4d0>
        {
          pclk = (uint32_t)(HSI_VALUE >> 2U);
 8003e2e:	4b29      	ldr	r3, [pc, #164]	; (8003ed4 <UART_SetConfig+0x570>)
 8003e30:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 8003e32:	e015      	b.n	8003e60 <UART_SetConfig+0x4fc>
          pclk = (uint32_t) HSI_VALUE;
 8003e34:	4b28      	ldr	r3, [pc, #160]	; (8003ed8 <UART_SetConfig+0x574>)
 8003e36:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003e38:	e012      	b.n	8003e60 <UART_SetConfig+0x4fc>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003e3a:	f7ff fc63 	bl	8003704 <HAL_RCC_GetSysClockFreq>
 8003e3e:	0003      	movs	r3, r0
 8003e40:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003e42:	e00d      	b.n	8003e60 <UART_SetConfig+0x4fc>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003e44:	2380      	movs	r3, #128	; 0x80
 8003e46:	021b      	lsls	r3, r3, #8
 8003e48:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8003e4a:	e009      	b.n	8003e60 <UART_SetConfig+0x4fc>
      default:
        pclk = 0U;
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	62fb      	str	r3, [r7, #44]	; 0x2c
        ret = HAL_ERROR;
 8003e50:	231a      	movs	r3, #26
 8003e52:	2218      	movs	r2, #24
 8003e54:	4694      	mov	ip, r2
 8003e56:	44bc      	add	ip, r7
 8003e58:	4463      	add	r3, ip
 8003e5a:	2201      	movs	r2, #1
 8003e5c:	701a      	strb	r2, [r3, #0]
        break;
 8003e5e:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 8003e60:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d021      	beq.n	8003eaa <UART_SetConfig+0x546>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8003e66:	69fb      	ldr	r3, [r7, #28]
 8003e68:	685b      	ldr	r3, [r3, #4]
 8003e6a:	085a      	lsrs	r2, r3, #1
 8003e6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e6e:	18d2      	adds	r2, r2, r3
 8003e70:	69fb      	ldr	r3, [r7, #28]
 8003e72:	685b      	ldr	r3, [r3, #4]
 8003e74:	0019      	movs	r1, r3
 8003e76:	0010      	movs	r0, r2
 8003e78:	f7fc f962 	bl	8000140 <__udivsi3>
 8003e7c:	0003      	movs	r3, r0
 8003e7e:	b29b      	uxth	r3, r3
 8003e80:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003e82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003e84:	2b0f      	cmp	r3, #15
 8003e86:	d909      	bls.n	8003e9c <UART_SetConfig+0x538>
 8003e88:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003e8a:	2380      	movs	r3, #128	; 0x80
 8003e8c:	025b      	lsls	r3, r3, #9
 8003e8e:	429a      	cmp	r2, r3
 8003e90:	d204      	bcs.n	8003e9c <UART_SetConfig+0x538>
      {
        huart->Instance->BRR = usartdiv;
 8003e92:	69fb      	ldr	r3, [r7, #28]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003e98:	60da      	str	r2, [r3, #12]
 8003e9a:	e006      	b.n	8003eaa <UART_SetConfig+0x546>
      }
      else
      {
        ret = HAL_ERROR;
 8003e9c:	231a      	movs	r3, #26
 8003e9e:	2218      	movs	r2, #24
 8003ea0:	4694      	mov	ip, r2
 8003ea2:	44bc      	add	ip, r7
 8003ea4:	4463      	add	r3, ip
 8003ea6:	2201      	movs	r2, #1
 8003ea8:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8003eaa:	69fb      	ldr	r3, [r7, #28]
 8003eac:	2200      	movs	r2, #0
 8003eae:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8003eb0:	69fb      	ldr	r3, [r7, #28]
 8003eb2:	2200      	movs	r2, #0
 8003eb4:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8003eb6:	231a      	movs	r3, #26
 8003eb8:	2218      	movs	r2, #24
 8003eba:	4694      	mov	ip, r2
 8003ebc:	44bc      	add	ip, r7
 8003ebe:	4463      	add	r3, ip
 8003ec0:	781b      	ldrb	r3, [r3, #0]
}
 8003ec2:	0018      	movs	r0, r3
 8003ec4:	46bd      	mov	sp, r7
 8003ec6:	b00e      	add	sp, #56	; 0x38
 8003ec8:	bdb0      	pop	{r4, r5, r7, pc}
 8003eca:	46c0      	nop			; (mov r8, r8)
 8003ecc:	08006f94 	.word	0x08006f94
 8003ed0:	40021000 	.word	0x40021000
 8003ed4:	003d0900 	.word	0x003d0900
 8003ed8:	00f42400 	.word	0x00f42400
 8003edc:	08006fb8 	.word	0x08006fb8

08003ee0 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8003ee0:	b580      	push	{r7, lr}
 8003ee2:	b082      	sub	sp, #8
 8003ee4:	af00      	add	r7, sp, #0
 8003ee6:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eec:	2201      	movs	r2, #1
 8003eee:	4013      	ands	r3, r2
 8003ef0:	d00b      	beq.n	8003f0a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	685b      	ldr	r3, [r3, #4]
 8003ef8:	4a4a      	ldr	r2, [pc, #296]	; (8004024 <UART_AdvFeatureConfig+0x144>)
 8003efa:	4013      	ands	r3, r2
 8003efc:	0019      	movs	r1, r3
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	430a      	orrs	r2, r1
 8003f08:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f0e:	2202      	movs	r2, #2
 8003f10:	4013      	ands	r3, r2
 8003f12:	d00b      	beq.n	8003f2c <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	685b      	ldr	r3, [r3, #4]
 8003f1a:	4a43      	ldr	r2, [pc, #268]	; (8004028 <UART_AdvFeatureConfig+0x148>)
 8003f1c:	4013      	ands	r3, r2
 8003f1e:	0019      	movs	r1, r3
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	430a      	orrs	r2, r1
 8003f2a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f30:	2204      	movs	r2, #4
 8003f32:	4013      	ands	r3, r2
 8003f34:	d00b      	beq.n	8003f4e <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	685b      	ldr	r3, [r3, #4]
 8003f3c:	4a3b      	ldr	r2, [pc, #236]	; (800402c <UART_AdvFeatureConfig+0x14c>)
 8003f3e:	4013      	ands	r3, r2
 8003f40:	0019      	movs	r1, r3
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	430a      	orrs	r2, r1
 8003f4c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f52:	2208      	movs	r2, #8
 8003f54:	4013      	ands	r3, r2
 8003f56:	d00b      	beq.n	8003f70 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	685b      	ldr	r3, [r3, #4]
 8003f5e:	4a34      	ldr	r2, [pc, #208]	; (8004030 <UART_AdvFeatureConfig+0x150>)
 8003f60:	4013      	ands	r3, r2
 8003f62:	0019      	movs	r1, r3
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	430a      	orrs	r2, r1
 8003f6e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f74:	2210      	movs	r2, #16
 8003f76:	4013      	ands	r3, r2
 8003f78:	d00b      	beq.n	8003f92 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	689b      	ldr	r3, [r3, #8]
 8003f80:	4a2c      	ldr	r2, [pc, #176]	; (8004034 <UART_AdvFeatureConfig+0x154>)
 8003f82:	4013      	ands	r3, r2
 8003f84:	0019      	movs	r1, r3
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	430a      	orrs	r2, r1
 8003f90:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f96:	2220      	movs	r2, #32
 8003f98:	4013      	ands	r3, r2
 8003f9a:	d00b      	beq.n	8003fb4 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	4a25      	ldr	r2, [pc, #148]	; (8004038 <UART_AdvFeatureConfig+0x158>)
 8003fa4:	4013      	ands	r3, r2
 8003fa6:	0019      	movs	r1, r3
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	430a      	orrs	r2, r1
 8003fb2:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fb8:	2240      	movs	r2, #64	; 0x40
 8003fba:	4013      	ands	r3, r2
 8003fbc:	d01d      	beq.n	8003ffa <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	685b      	ldr	r3, [r3, #4]
 8003fc4:	4a1d      	ldr	r2, [pc, #116]	; (800403c <UART_AdvFeatureConfig+0x15c>)
 8003fc6:	4013      	ands	r3, r2
 8003fc8:	0019      	movs	r1, r3
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	430a      	orrs	r2, r1
 8003fd4:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003fda:	2380      	movs	r3, #128	; 0x80
 8003fdc:	035b      	lsls	r3, r3, #13
 8003fde:	429a      	cmp	r2, r3
 8003fe0:	d10b      	bne.n	8003ffa <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	685b      	ldr	r3, [r3, #4]
 8003fe8:	4a15      	ldr	r2, [pc, #84]	; (8004040 <UART_AdvFeatureConfig+0x160>)
 8003fea:	4013      	ands	r3, r2
 8003fec:	0019      	movs	r1, r3
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	681b      	ldr	r3, [r3, #0]
 8003ff6:	430a      	orrs	r2, r1
 8003ff8:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ffe:	2280      	movs	r2, #128	; 0x80
 8004000:	4013      	ands	r3, r2
 8004002:	d00b      	beq.n	800401c <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	685b      	ldr	r3, [r3, #4]
 800400a:	4a0e      	ldr	r2, [pc, #56]	; (8004044 <UART_AdvFeatureConfig+0x164>)
 800400c:	4013      	ands	r3, r2
 800400e:	0019      	movs	r1, r3
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	681b      	ldr	r3, [r3, #0]
 8004018:	430a      	orrs	r2, r1
 800401a:	605a      	str	r2, [r3, #4]
  }
}
 800401c:	46c0      	nop			; (mov r8, r8)
 800401e:	46bd      	mov	sp, r7
 8004020:	b002      	add	sp, #8
 8004022:	bd80      	pop	{r7, pc}
 8004024:	fffdffff 	.word	0xfffdffff
 8004028:	fffeffff 	.word	0xfffeffff
 800402c:	fffbffff 	.word	0xfffbffff
 8004030:	ffff7fff 	.word	0xffff7fff
 8004034:	ffffefff 	.word	0xffffefff
 8004038:	ffffdfff 	.word	0xffffdfff
 800403c:	ffefffff 	.word	0xffefffff
 8004040:	ff9fffff 	.word	0xff9fffff
 8004044:	fff7ffff 	.word	0xfff7ffff

08004048 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8004048:	b580      	push	{r7, lr}
 800404a:	b086      	sub	sp, #24
 800404c:	af02      	add	r7, sp, #8
 800404e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	2280      	movs	r2, #128	; 0x80
 8004054:	2100      	movs	r1, #0
 8004056:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8004058:	f7fe fbfc 	bl	8002854 <HAL_GetTick>
 800405c:	0003      	movs	r3, r0
 800405e:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	2208      	movs	r2, #8
 8004068:	4013      	ands	r3, r2
 800406a:	2b08      	cmp	r3, #8
 800406c:	d10c      	bne.n	8004088 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	2280      	movs	r2, #128	; 0x80
 8004072:	0391      	lsls	r1, r2, #14
 8004074:	6878      	ldr	r0, [r7, #4]
 8004076:	4a17      	ldr	r2, [pc, #92]	; (80040d4 <UART_CheckIdleState+0x8c>)
 8004078:	9200      	str	r2, [sp, #0]
 800407a:	2200      	movs	r2, #0
 800407c:	f000 f82c 	bl	80040d8 <UART_WaitOnFlagUntilTimeout>
 8004080:	1e03      	subs	r3, r0, #0
 8004082:	d001      	beq.n	8004088 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8004084:	2303      	movs	r3, #3
 8004086:	e021      	b.n	80040cc <UART_CheckIdleState+0x84>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	2204      	movs	r2, #4
 8004090:	4013      	ands	r3, r2
 8004092:	2b04      	cmp	r3, #4
 8004094:	d10c      	bne.n	80040b0 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	2280      	movs	r2, #128	; 0x80
 800409a:	03d1      	lsls	r1, r2, #15
 800409c:	6878      	ldr	r0, [r7, #4]
 800409e:	4a0d      	ldr	r2, [pc, #52]	; (80040d4 <UART_CheckIdleState+0x8c>)
 80040a0:	9200      	str	r2, [sp, #0]
 80040a2:	2200      	movs	r2, #0
 80040a4:	f000 f818 	bl	80040d8 <UART_WaitOnFlagUntilTimeout>
 80040a8:	1e03      	subs	r3, r0, #0
 80040aa:	d001      	beq.n	80040b0 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80040ac:	2303      	movs	r3, #3
 80040ae:	e00d      	b.n	80040cc <UART_CheckIdleState+0x84>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	2220      	movs	r2, #32
 80040b4:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	2220      	movs	r2, #32
 80040ba:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	2200      	movs	r2, #0
 80040c0:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	2274      	movs	r2, #116	; 0x74
 80040c6:	2100      	movs	r1, #0
 80040c8:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80040ca:	2300      	movs	r3, #0
}
 80040cc:	0018      	movs	r0, r3
 80040ce:	46bd      	mov	sp, r7
 80040d0:	b004      	add	sp, #16
 80040d2:	bd80      	pop	{r7, pc}
 80040d4:	01ffffff 	.word	0x01ffffff

080040d8 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80040d8:	b580      	push	{r7, lr}
 80040da:	b094      	sub	sp, #80	; 0x50
 80040dc:	af00      	add	r7, sp, #0
 80040de:	60f8      	str	r0, [r7, #12]
 80040e0:	60b9      	str	r1, [r7, #8]
 80040e2:	603b      	str	r3, [r7, #0]
 80040e4:	1dfb      	adds	r3, r7, #7
 80040e6:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80040e8:	e0a3      	b.n	8004232 <UART_WaitOnFlagUntilTimeout+0x15a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80040ea:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80040ec:	3301      	adds	r3, #1
 80040ee:	d100      	bne.n	80040f2 <UART_WaitOnFlagUntilTimeout+0x1a>
 80040f0:	e09f      	b.n	8004232 <UART_WaitOnFlagUntilTimeout+0x15a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040f2:	f7fe fbaf 	bl	8002854 <HAL_GetTick>
 80040f6:	0002      	movs	r2, r0
 80040f8:	683b      	ldr	r3, [r7, #0]
 80040fa:	1ad3      	subs	r3, r2, r3
 80040fc:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80040fe:	429a      	cmp	r2, r3
 8004100:	d302      	bcc.n	8004108 <UART_WaitOnFlagUntilTimeout+0x30>
 8004102:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8004104:	2b00      	cmp	r3, #0
 8004106:	d13d      	bne.n	8004184 <UART_WaitOnFlagUntilTimeout+0xac>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004108:	f3ef 8310 	mrs	r3, PRIMASK
 800410c:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 800410e:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004110:	647b      	str	r3, [r7, #68]	; 0x44
 8004112:	2301      	movs	r3, #1
 8004114:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004116:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004118:	f383 8810 	msr	PRIMASK, r3
}
 800411c:	46c0      	nop			; (mov r8, r8)
 800411e:	68fb      	ldr	r3, [r7, #12]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	681a      	ldr	r2, [r3, #0]
 8004124:	68fb      	ldr	r3, [r7, #12]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	494c      	ldr	r1, [pc, #304]	; (800425c <UART_WaitOnFlagUntilTimeout+0x184>)
 800412a:	400a      	ands	r2, r1
 800412c:	601a      	str	r2, [r3, #0]
 800412e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004130:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004132:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004134:	f383 8810 	msr	PRIMASK, r3
}
 8004138:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800413a:	f3ef 8310 	mrs	r3, PRIMASK
 800413e:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 8004140:	6b7b      	ldr	r3, [r7, #52]	; 0x34
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004142:	643b      	str	r3, [r7, #64]	; 0x40
 8004144:	2301      	movs	r3, #1
 8004146:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004148:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800414a:	f383 8810 	msr	PRIMASK, r3
}
 800414e:	46c0      	nop			; (mov r8, r8)
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	689a      	ldr	r2, [r3, #8]
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	2101      	movs	r1, #1
 800415c:	438a      	bics	r2, r1
 800415e:	609a      	str	r2, [r3, #8]
 8004160:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004162:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004164:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004166:	f383 8810 	msr	PRIMASK, r3
}
 800416a:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	2220      	movs	r2, #32
 8004170:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	2220      	movs	r2, #32
 8004176:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	2274      	movs	r2, #116	; 0x74
 800417c:	2100      	movs	r1, #0
 800417e:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8004180:	2303      	movs	r3, #3
 8004182:	e067      	b.n	8004254 <UART_WaitOnFlagUntilTimeout+0x17c>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	2204      	movs	r2, #4
 800418c:	4013      	ands	r3, r2
 800418e:	d050      	beq.n	8004232 <UART_WaitOnFlagUntilTimeout+0x15a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	69da      	ldr	r2, [r3, #28]
 8004196:	2380      	movs	r3, #128	; 0x80
 8004198:	011b      	lsls	r3, r3, #4
 800419a:	401a      	ands	r2, r3
 800419c:	2380      	movs	r3, #128	; 0x80
 800419e:	011b      	lsls	r3, r3, #4
 80041a0:	429a      	cmp	r2, r3
 80041a2:	d146      	bne.n	8004232 <UART_WaitOnFlagUntilTimeout+0x15a>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80041a4:	68fb      	ldr	r3, [r7, #12]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	2280      	movs	r2, #128	; 0x80
 80041aa:	0112      	lsls	r2, r2, #4
 80041ac:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80041ae:	f3ef 8310 	mrs	r3, PRIMASK
 80041b2:	613b      	str	r3, [r7, #16]
  return(result);
 80041b4:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80041b6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80041b8:	2301      	movs	r3, #1
 80041ba:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041bc:	697b      	ldr	r3, [r7, #20]
 80041be:	f383 8810 	msr	PRIMASK, r3
}
 80041c2:	46c0      	nop			; (mov r8, r8)
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	681a      	ldr	r2, [r3, #0]
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	4923      	ldr	r1, [pc, #140]	; (800425c <UART_WaitOnFlagUntilTimeout+0x184>)
 80041d0:	400a      	ands	r2, r1
 80041d2:	601a      	str	r2, [r3, #0]
 80041d4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80041d6:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041d8:	69bb      	ldr	r3, [r7, #24]
 80041da:	f383 8810 	msr	PRIMASK, r3
}
 80041de:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80041e0:	f3ef 8310 	mrs	r3, PRIMASK
 80041e4:	61fb      	str	r3, [r7, #28]
  return(result);
 80041e6:	69fb      	ldr	r3, [r7, #28]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80041e8:	64bb      	str	r3, [r7, #72]	; 0x48
 80041ea:	2301      	movs	r3, #1
 80041ec:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041ee:	6a3b      	ldr	r3, [r7, #32]
 80041f0:	f383 8810 	msr	PRIMASK, r3
}
 80041f4:	46c0      	nop			; (mov r8, r8)
 80041f6:	68fb      	ldr	r3, [r7, #12]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	689a      	ldr	r2, [r3, #8]
 80041fc:	68fb      	ldr	r3, [r7, #12]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	2101      	movs	r1, #1
 8004202:	438a      	bics	r2, r1
 8004204:	609a      	str	r2, [r3, #8]
 8004206:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004208:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800420a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800420c:	f383 8810 	msr	PRIMASK, r3
}
 8004210:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	2220      	movs	r2, #32
 8004216:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	2220      	movs	r2, #32
 800421c:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	2280      	movs	r2, #128	; 0x80
 8004222:	2120      	movs	r1, #32
 8004224:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8004226:	68fb      	ldr	r3, [r7, #12]
 8004228:	2274      	movs	r2, #116	; 0x74
 800422a:	2100      	movs	r1, #0
 800422c:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 800422e:	2303      	movs	r3, #3
 8004230:	e010      	b.n	8004254 <UART_WaitOnFlagUntilTimeout+0x17c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	69db      	ldr	r3, [r3, #28]
 8004238:	68ba      	ldr	r2, [r7, #8]
 800423a:	4013      	ands	r3, r2
 800423c:	68ba      	ldr	r2, [r7, #8]
 800423e:	1ad3      	subs	r3, r2, r3
 8004240:	425a      	negs	r2, r3
 8004242:	4153      	adcs	r3, r2
 8004244:	b2db      	uxtb	r3, r3
 8004246:	001a      	movs	r2, r3
 8004248:	1dfb      	adds	r3, r7, #7
 800424a:	781b      	ldrb	r3, [r3, #0]
 800424c:	429a      	cmp	r2, r3
 800424e:	d100      	bne.n	8004252 <UART_WaitOnFlagUntilTimeout+0x17a>
 8004250:	e74b      	b.n	80040ea <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004252:	2300      	movs	r3, #0
}
 8004254:	0018      	movs	r0, r3
 8004256:	46bd      	mov	sp, r7
 8004258:	b014      	add	sp, #80	; 0x50
 800425a:	bd80      	pop	{r7, pc}
 800425c:	fffffe5f 	.word	0xfffffe5f

08004260 <__errno>:
 8004260:	4b01      	ldr	r3, [pc, #4]	; (8004268 <__errno+0x8>)
 8004262:	6818      	ldr	r0, [r3, #0]
 8004264:	4770      	bx	lr
 8004266:	46c0      	nop			; (mov r8, r8)
 8004268:	2000000c 	.word	0x2000000c

0800426c <__libc_init_array>:
 800426c:	b570      	push	{r4, r5, r6, lr}
 800426e:	2600      	movs	r6, #0
 8004270:	4d0c      	ldr	r5, [pc, #48]	; (80042a4 <__libc_init_array+0x38>)
 8004272:	4c0d      	ldr	r4, [pc, #52]	; (80042a8 <__libc_init_array+0x3c>)
 8004274:	1b64      	subs	r4, r4, r5
 8004276:	10a4      	asrs	r4, r4, #2
 8004278:	42a6      	cmp	r6, r4
 800427a:	d109      	bne.n	8004290 <__libc_init_array+0x24>
 800427c:	2600      	movs	r6, #0
 800427e:	f002 fe23 	bl	8006ec8 <_init>
 8004282:	4d0a      	ldr	r5, [pc, #40]	; (80042ac <__libc_init_array+0x40>)
 8004284:	4c0a      	ldr	r4, [pc, #40]	; (80042b0 <__libc_init_array+0x44>)
 8004286:	1b64      	subs	r4, r4, r5
 8004288:	10a4      	asrs	r4, r4, #2
 800428a:	42a6      	cmp	r6, r4
 800428c:	d105      	bne.n	800429a <__libc_init_array+0x2e>
 800428e:	bd70      	pop	{r4, r5, r6, pc}
 8004290:	00b3      	lsls	r3, r6, #2
 8004292:	58eb      	ldr	r3, [r5, r3]
 8004294:	4798      	blx	r3
 8004296:	3601      	adds	r6, #1
 8004298:	e7ee      	b.n	8004278 <__libc_init_array+0xc>
 800429a:	00b3      	lsls	r3, r6, #2
 800429c:	58eb      	ldr	r3, [r5, r3]
 800429e:	4798      	blx	r3
 80042a0:	3601      	adds	r6, #1
 80042a2:	e7f2      	b.n	800428a <__libc_init_array+0x1e>
 80042a4:	080073c4 	.word	0x080073c4
 80042a8:	080073c4 	.word	0x080073c4
 80042ac:	080073c4 	.word	0x080073c4
 80042b0:	080073c8 	.word	0x080073c8

080042b4 <memset>:
 80042b4:	0003      	movs	r3, r0
 80042b6:	1882      	adds	r2, r0, r2
 80042b8:	4293      	cmp	r3, r2
 80042ba:	d100      	bne.n	80042be <memset+0xa>
 80042bc:	4770      	bx	lr
 80042be:	7019      	strb	r1, [r3, #0]
 80042c0:	3301      	adds	r3, #1
 80042c2:	e7f9      	b.n	80042b8 <memset+0x4>

080042c4 <__cvt>:
 80042c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80042c6:	001e      	movs	r6, r3
 80042c8:	2300      	movs	r3, #0
 80042ca:	0014      	movs	r4, r2
 80042cc:	b08b      	sub	sp, #44	; 0x2c
 80042ce:	429e      	cmp	r6, r3
 80042d0:	da04      	bge.n	80042dc <__cvt+0x18>
 80042d2:	2180      	movs	r1, #128	; 0x80
 80042d4:	0609      	lsls	r1, r1, #24
 80042d6:	1873      	adds	r3, r6, r1
 80042d8:	001e      	movs	r6, r3
 80042da:	232d      	movs	r3, #45	; 0x2d
 80042dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80042de:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80042e0:	7013      	strb	r3, [r2, #0]
 80042e2:	2320      	movs	r3, #32
 80042e4:	2203      	movs	r2, #3
 80042e6:	439f      	bics	r7, r3
 80042e8:	2f46      	cmp	r7, #70	; 0x46
 80042ea:	d007      	beq.n	80042fc <__cvt+0x38>
 80042ec:	003b      	movs	r3, r7
 80042ee:	3b45      	subs	r3, #69	; 0x45
 80042f0:	4259      	negs	r1, r3
 80042f2:	414b      	adcs	r3, r1
 80042f4:	9910      	ldr	r1, [sp, #64]	; 0x40
 80042f6:	3a01      	subs	r2, #1
 80042f8:	18cb      	adds	r3, r1, r3
 80042fa:	9310      	str	r3, [sp, #64]	; 0x40
 80042fc:	ab09      	add	r3, sp, #36	; 0x24
 80042fe:	9304      	str	r3, [sp, #16]
 8004300:	ab08      	add	r3, sp, #32
 8004302:	9303      	str	r3, [sp, #12]
 8004304:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004306:	9200      	str	r2, [sp, #0]
 8004308:	9302      	str	r3, [sp, #8]
 800430a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800430c:	0022      	movs	r2, r4
 800430e:	9301      	str	r3, [sp, #4]
 8004310:	0033      	movs	r3, r6
 8004312:	f000 fe27 	bl	8004f64 <_dtoa_r>
 8004316:	0005      	movs	r5, r0
 8004318:	2f47      	cmp	r7, #71	; 0x47
 800431a:	d102      	bne.n	8004322 <__cvt+0x5e>
 800431c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800431e:	07db      	lsls	r3, r3, #31
 8004320:	d528      	bpl.n	8004374 <__cvt+0xb0>
 8004322:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004324:	18eb      	adds	r3, r5, r3
 8004326:	9307      	str	r3, [sp, #28]
 8004328:	2f46      	cmp	r7, #70	; 0x46
 800432a:	d114      	bne.n	8004356 <__cvt+0x92>
 800432c:	782b      	ldrb	r3, [r5, #0]
 800432e:	2b30      	cmp	r3, #48	; 0x30
 8004330:	d10c      	bne.n	800434c <__cvt+0x88>
 8004332:	2200      	movs	r2, #0
 8004334:	2300      	movs	r3, #0
 8004336:	0020      	movs	r0, r4
 8004338:	0031      	movs	r1, r6
 800433a:	f7fc f887 	bl	800044c <__aeabi_dcmpeq>
 800433e:	2800      	cmp	r0, #0
 8004340:	d104      	bne.n	800434c <__cvt+0x88>
 8004342:	2301      	movs	r3, #1
 8004344:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004346:	1a9b      	subs	r3, r3, r2
 8004348:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800434a:	6013      	str	r3, [r2, #0]
 800434c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800434e:	9a07      	ldr	r2, [sp, #28]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	18d3      	adds	r3, r2, r3
 8004354:	9307      	str	r3, [sp, #28]
 8004356:	2200      	movs	r2, #0
 8004358:	2300      	movs	r3, #0
 800435a:	0020      	movs	r0, r4
 800435c:	0031      	movs	r1, r6
 800435e:	f7fc f875 	bl	800044c <__aeabi_dcmpeq>
 8004362:	2800      	cmp	r0, #0
 8004364:	d001      	beq.n	800436a <__cvt+0xa6>
 8004366:	9b07      	ldr	r3, [sp, #28]
 8004368:	9309      	str	r3, [sp, #36]	; 0x24
 800436a:	2230      	movs	r2, #48	; 0x30
 800436c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800436e:	9907      	ldr	r1, [sp, #28]
 8004370:	428b      	cmp	r3, r1
 8004372:	d306      	bcc.n	8004382 <__cvt+0xbe>
 8004374:	0028      	movs	r0, r5
 8004376:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004378:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800437a:	1b5b      	subs	r3, r3, r5
 800437c:	6013      	str	r3, [r2, #0]
 800437e:	b00b      	add	sp, #44	; 0x2c
 8004380:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004382:	1c59      	adds	r1, r3, #1
 8004384:	9109      	str	r1, [sp, #36]	; 0x24
 8004386:	701a      	strb	r2, [r3, #0]
 8004388:	e7f0      	b.n	800436c <__cvt+0xa8>

0800438a <__exponent>:
 800438a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800438c:	1c83      	adds	r3, r0, #2
 800438e:	b087      	sub	sp, #28
 8004390:	9303      	str	r3, [sp, #12]
 8004392:	0005      	movs	r5, r0
 8004394:	000c      	movs	r4, r1
 8004396:	232b      	movs	r3, #43	; 0x2b
 8004398:	7002      	strb	r2, [r0, #0]
 800439a:	2900      	cmp	r1, #0
 800439c:	da01      	bge.n	80043a2 <__exponent+0x18>
 800439e:	424c      	negs	r4, r1
 80043a0:	3302      	adds	r3, #2
 80043a2:	706b      	strb	r3, [r5, #1]
 80043a4:	2c09      	cmp	r4, #9
 80043a6:	dd31      	ble.n	800440c <__exponent+0x82>
 80043a8:	270a      	movs	r7, #10
 80043aa:	ab04      	add	r3, sp, #16
 80043ac:	1dde      	adds	r6, r3, #7
 80043ae:	0020      	movs	r0, r4
 80043b0:	0039      	movs	r1, r7
 80043b2:	9601      	str	r6, [sp, #4]
 80043b4:	f7fc f834 	bl	8000420 <__aeabi_idivmod>
 80043b8:	3e01      	subs	r6, #1
 80043ba:	3130      	adds	r1, #48	; 0x30
 80043bc:	0020      	movs	r0, r4
 80043be:	7031      	strb	r1, [r6, #0]
 80043c0:	0039      	movs	r1, r7
 80043c2:	9402      	str	r4, [sp, #8]
 80043c4:	f7fb ff46 	bl	8000254 <__divsi3>
 80043c8:	9b02      	ldr	r3, [sp, #8]
 80043ca:	0004      	movs	r4, r0
 80043cc:	2b63      	cmp	r3, #99	; 0x63
 80043ce:	dcee      	bgt.n	80043ae <__exponent+0x24>
 80043d0:	9b01      	ldr	r3, [sp, #4]
 80043d2:	3430      	adds	r4, #48	; 0x30
 80043d4:	1e9a      	subs	r2, r3, #2
 80043d6:	0013      	movs	r3, r2
 80043d8:	9903      	ldr	r1, [sp, #12]
 80043da:	7014      	strb	r4, [r2, #0]
 80043dc:	a804      	add	r0, sp, #16
 80043de:	3007      	adds	r0, #7
 80043e0:	4298      	cmp	r0, r3
 80043e2:	d80e      	bhi.n	8004402 <__exponent+0x78>
 80043e4:	ab04      	add	r3, sp, #16
 80043e6:	3307      	adds	r3, #7
 80043e8:	2000      	movs	r0, #0
 80043ea:	429a      	cmp	r2, r3
 80043ec:	d804      	bhi.n	80043f8 <__exponent+0x6e>
 80043ee:	ab04      	add	r3, sp, #16
 80043f0:	3009      	adds	r0, #9
 80043f2:	18c0      	adds	r0, r0, r3
 80043f4:	9b01      	ldr	r3, [sp, #4]
 80043f6:	1ac0      	subs	r0, r0, r3
 80043f8:	9b03      	ldr	r3, [sp, #12]
 80043fa:	1818      	adds	r0, r3, r0
 80043fc:	1b40      	subs	r0, r0, r5
 80043fe:	b007      	add	sp, #28
 8004400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004402:	7818      	ldrb	r0, [r3, #0]
 8004404:	3301      	adds	r3, #1
 8004406:	7008      	strb	r0, [r1, #0]
 8004408:	3101      	adds	r1, #1
 800440a:	e7e7      	b.n	80043dc <__exponent+0x52>
 800440c:	2330      	movs	r3, #48	; 0x30
 800440e:	18e4      	adds	r4, r4, r3
 8004410:	70ab      	strb	r3, [r5, #2]
 8004412:	1d28      	adds	r0, r5, #4
 8004414:	70ec      	strb	r4, [r5, #3]
 8004416:	e7f1      	b.n	80043fc <__exponent+0x72>

08004418 <_printf_float>:
 8004418:	b5f0      	push	{r4, r5, r6, r7, lr}
 800441a:	b095      	sub	sp, #84	; 0x54
 800441c:	000c      	movs	r4, r1
 800441e:	9208      	str	r2, [sp, #32]
 8004420:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004422:	9309      	str	r3, [sp, #36]	; 0x24
 8004424:	0007      	movs	r7, r0
 8004426:	f001 fd89 	bl	8005f3c <_localeconv_r>
 800442a:	6803      	ldr	r3, [r0, #0]
 800442c:	0018      	movs	r0, r3
 800442e:	930b      	str	r3, [sp, #44]	; 0x2c
 8004430:	f7fb fe6a 	bl	8000108 <strlen>
 8004434:	2300      	movs	r3, #0
 8004436:	9312      	str	r3, [sp, #72]	; 0x48
 8004438:	7e23      	ldrb	r3, [r4, #24]
 800443a:	2207      	movs	r2, #7
 800443c:	001e      	movs	r6, r3
 800443e:	6823      	ldr	r3, [r4, #0]
 8004440:	900d      	str	r0, [sp, #52]	; 0x34
 8004442:	930c      	str	r3, [sp, #48]	; 0x30
 8004444:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004446:	682b      	ldr	r3, [r5, #0]
 8004448:	05c9      	lsls	r1, r1, #23
 800444a:	d547      	bpl.n	80044dc <_printf_float+0xc4>
 800444c:	189b      	adds	r3, r3, r2
 800444e:	4393      	bics	r3, r2
 8004450:	001a      	movs	r2, r3
 8004452:	3208      	adds	r2, #8
 8004454:	602a      	str	r2, [r5, #0]
 8004456:	681a      	ldr	r2, [r3, #0]
 8004458:	685b      	ldr	r3, [r3, #4]
 800445a:	64a2      	str	r2, [r4, #72]	; 0x48
 800445c:	64e3      	str	r3, [r4, #76]	; 0x4c
 800445e:	2201      	movs	r2, #1
 8004460:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8004462:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8004464:	930a      	str	r3, [sp, #40]	; 0x28
 8004466:	006b      	lsls	r3, r5, #1
 8004468:	085b      	lsrs	r3, r3, #1
 800446a:	930e      	str	r3, [sp, #56]	; 0x38
 800446c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800446e:	4ba8      	ldr	r3, [pc, #672]	; (8004710 <_printf_float+0x2f8>)
 8004470:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004472:	4252      	negs	r2, r2
 8004474:	f7fd fe9a 	bl	80021ac <__aeabi_dcmpun>
 8004478:	2800      	cmp	r0, #0
 800447a:	d131      	bne.n	80044e0 <_printf_float+0xc8>
 800447c:	2201      	movs	r2, #1
 800447e:	4ba4      	ldr	r3, [pc, #656]	; (8004710 <_printf_float+0x2f8>)
 8004480:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004482:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004484:	4252      	negs	r2, r2
 8004486:	f7fb fff1 	bl	800046c <__aeabi_dcmple>
 800448a:	2800      	cmp	r0, #0
 800448c:	d128      	bne.n	80044e0 <_printf_float+0xc8>
 800448e:	2200      	movs	r2, #0
 8004490:	2300      	movs	r3, #0
 8004492:	0029      	movs	r1, r5
 8004494:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004496:	f7fb ffdf 	bl	8000458 <__aeabi_dcmplt>
 800449a:	2800      	cmp	r0, #0
 800449c:	d003      	beq.n	80044a6 <_printf_float+0x8e>
 800449e:	0023      	movs	r3, r4
 80044a0:	222d      	movs	r2, #45	; 0x2d
 80044a2:	3343      	adds	r3, #67	; 0x43
 80044a4:	701a      	strb	r2, [r3, #0]
 80044a6:	4d9b      	ldr	r5, [pc, #620]	; (8004714 <_printf_float+0x2fc>)
 80044a8:	2e47      	cmp	r6, #71	; 0x47
 80044aa:	d900      	bls.n	80044ae <_printf_float+0x96>
 80044ac:	4d9a      	ldr	r5, [pc, #616]	; (8004718 <_printf_float+0x300>)
 80044ae:	2303      	movs	r3, #3
 80044b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80044b2:	6123      	str	r3, [r4, #16]
 80044b4:	3301      	adds	r3, #1
 80044b6:	439a      	bics	r2, r3
 80044b8:	2300      	movs	r3, #0
 80044ba:	6022      	str	r2, [r4, #0]
 80044bc:	930a      	str	r3, [sp, #40]	; 0x28
 80044be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044c0:	0021      	movs	r1, r4
 80044c2:	9300      	str	r3, [sp, #0]
 80044c4:	0038      	movs	r0, r7
 80044c6:	9b08      	ldr	r3, [sp, #32]
 80044c8:	aa13      	add	r2, sp, #76	; 0x4c
 80044ca:	f000 f9f3 	bl	80048b4 <_printf_common>
 80044ce:	1c43      	adds	r3, r0, #1
 80044d0:	d000      	beq.n	80044d4 <_printf_float+0xbc>
 80044d2:	e09e      	b.n	8004612 <_printf_float+0x1fa>
 80044d4:	2001      	movs	r0, #1
 80044d6:	4240      	negs	r0, r0
 80044d8:	b015      	add	sp, #84	; 0x54
 80044da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044dc:	3307      	adds	r3, #7
 80044de:	e7b6      	b.n	800444e <_printf_float+0x36>
 80044e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80044e2:	002b      	movs	r3, r5
 80044e4:	0010      	movs	r0, r2
 80044e6:	0029      	movs	r1, r5
 80044e8:	f7fd fe60 	bl	80021ac <__aeabi_dcmpun>
 80044ec:	2800      	cmp	r0, #0
 80044ee:	d00a      	beq.n	8004506 <_printf_float+0xee>
 80044f0:	2d00      	cmp	r5, #0
 80044f2:	da03      	bge.n	80044fc <_printf_float+0xe4>
 80044f4:	0023      	movs	r3, r4
 80044f6:	222d      	movs	r2, #45	; 0x2d
 80044f8:	3343      	adds	r3, #67	; 0x43
 80044fa:	701a      	strb	r2, [r3, #0]
 80044fc:	4d87      	ldr	r5, [pc, #540]	; (800471c <_printf_float+0x304>)
 80044fe:	2e47      	cmp	r6, #71	; 0x47
 8004500:	d9d5      	bls.n	80044ae <_printf_float+0x96>
 8004502:	4d87      	ldr	r5, [pc, #540]	; (8004720 <_printf_float+0x308>)
 8004504:	e7d3      	b.n	80044ae <_printf_float+0x96>
 8004506:	2220      	movs	r2, #32
 8004508:	0031      	movs	r1, r6
 800450a:	6863      	ldr	r3, [r4, #4]
 800450c:	4391      	bics	r1, r2
 800450e:	910e      	str	r1, [sp, #56]	; 0x38
 8004510:	1c5a      	adds	r2, r3, #1
 8004512:	d147      	bne.n	80045a4 <_printf_float+0x18c>
 8004514:	3307      	adds	r3, #7
 8004516:	6063      	str	r3, [r4, #4]
 8004518:	2380      	movs	r3, #128	; 0x80
 800451a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800451c:	00db      	lsls	r3, r3, #3
 800451e:	4313      	orrs	r3, r2
 8004520:	2200      	movs	r2, #0
 8004522:	9206      	str	r2, [sp, #24]
 8004524:	aa12      	add	r2, sp, #72	; 0x48
 8004526:	9205      	str	r2, [sp, #20]
 8004528:	aa11      	add	r2, sp, #68	; 0x44
 800452a:	9203      	str	r2, [sp, #12]
 800452c:	2223      	movs	r2, #35	; 0x23
 800452e:	a908      	add	r1, sp, #32
 8004530:	6023      	str	r3, [r4, #0]
 8004532:	9301      	str	r3, [sp, #4]
 8004534:	6863      	ldr	r3, [r4, #4]
 8004536:	1852      	adds	r2, r2, r1
 8004538:	9202      	str	r2, [sp, #8]
 800453a:	9300      	str	r3, [sp, #0]
 800453c:	0038      	movs	r0, r7
 800453e:	002b      	movs	r3, r5
 8004540:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004542:	9604      	str	r6, [sp, #16]
 8004544:	f7ff febe 	bl	80042c4 <__cvt>
 8004548:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800454a:	0005      	movs	r5, r0
 800454c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800454e:	2b47      	cmp	r3, #71	; 0x47
 8004550:	d108      	bne.n	8004564 <_printf_float+0x14c>
 8004552:	1ccb      	adds	r3, r1, #3
 8004554:	db02      	blt.n	800455c <_printf_float+0x144>
 8004556:	6863      	ldr	r3, [r4, #4]
 8004558:	4299      	cmp	r1, r3
 800455a:	dd46      	ble.n	80045ea <_printf_float+0x1d2>
 800455c:	0033      	movs	r3, r6
 800455e:	3b02      	subs	r3, #2
 8004560:	b2db      	uxtb	r3, r3
 8004562:	001e      	movs	r6, r3
 8004564:	2e65      	cmp	r6, #101	; 0x65
 8004566:	d824      	bhi.n	80045b2 <_printf_float+0x19a>
 8004568:	0020      	movs	r0, r4
 800456a:	0032      	movs	r2, r6
 800456c:	3901      	subs	r1, #1
 800456e:	3050      	adds	r0, #80	; 0x50
 8004570:	9111      	str	r1, [sp, #68]	; 0x44
 8004572:	f7ff ff0a 	bl	800438a <__exponent>
 8004576:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004578:	900a      	str	r0, [sp, #40]	; 0x28
 800457a:	1813      	adds	r3, r2, r0
 800457c:	6123      	str	r3, [r4, #16]
 800457e:	2a01      	cmp	r2, #1
 8004580:	dc02      	bgt.n	8004588 <_printf_float+0x170>
 8004582:	6822      	ldr	r2, [r4, #0]
 8004584:	07d2      	lsls	r2, r2, #31
 8004586:	d501      	bpl.n	800458c <_printf_float+0x174>
 8004588:	3301      	adds	r3, #1
 800458a:	6123      	str	r3, [r4, #16]
 800458c:	2323      	movs	r3, #35	; 0x23
 800458e:	aa08      	add	r2, sp, #32
 8004590:	189b      	adds	r3, r3, r2
 8004592:	781b      	ldrb	r3, [r3, #0]
 8004594:	2b00      	cmp	r3, #0
 8004596:	d100      	bne.n	800459a <_printf_float+0x182>
 8004598:	e791      	b.n	80044be <_printf_float+0xa6>
 800459a:	0023      	movs	r3, r4
 800459c:	222d      	movs	r2, #45	; 0x2d
 800459e:	3343      	adds	r3, #67	; 0x43
 80045a0:	701a      	strb	r2, [r3, #0]
 80045a2:	e78c      	b.n	80044be <_printf_float+0xa6>
 80045a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80045a6:	2a47      	cmp	r2, #71	; 0x47
 80045a8:	d1b6      	bne.n	8004518 <_printf_float+0x100>
 80045aa:	2b00      	cmp	r3, #0
 80045ac:	d1b4      	bne.n	8004518 <_printf_float+0x100>
 80045ae:	3301      	adds	r3, #1
 80045b0:	e7b1      	b.n	8004516 <_printf_float+0xfe>
 80045b2:	2e66      	cmp	r6, #102	; 0x66
 80045b4:	d11b      	bne.n	80045ee <_printf_float+0x1d6>
 80045b6:	6863      	ldr	r3, [r4, #4]
 80045b8:	2900      	cmp	r1, #0
 80045ba:	dd0d      	ble.n	80045d8 <_printf_float+0x1c0>
 80045bc:	6121      	str	r1, [r4, #16]
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d102      	bne.n	80045c8 <_printf_float+0x1b0>
 80045c2:	6822      	ldr	r2, [r4, #0]
 80045c4:	07d2      	lsls	r2, r2, #31
 80045c6:	d502      	bpl.n	80045ce <_printf_float+0x1b6>
 80045c8:	3301      	adds	r3, #1
 80045ca:	1859      	adds	r1, r3, r1
 80045cc:	6121      	str	r1, [r4, #16]
 80045ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80045d0:	65a3      	str	r3, [r4, #88]	; 0x58
 80045d2:	2300      	movs	r3, #0
 80045d4:	930a      	str	r3, [sp, #40]	; 0x28
 80045d6:	e7d9      	b.n	800458c <_printf_float+0x174>
 80045d8:	2b00      	cmp	r3, #0
 80045da:	d103      	bne.n	80045e4 <_printf_float+0x1cc>
 80045dc:	2201      	movs	r2, #1
 80045de:	6821      	ldr	r1, [r4, #0]
 80045e0:	4211      	tst	r1, r2
 80045e2:	d000      	beq.n	80045e6 <_printf_float+0x1ce>
 80045e4:	1c9a      	adds	r2, r3, #2
 80045e6:	6122      	str	r2, [r4, #16]
 80045e8:	e7f1      	b.n	80045ce <_printf_float+0x1b6>
 80045ea:	2367      	movs	r3, #103	; 0x67
 80045ec:	001e      	movs	r6, r3
 80045ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80045f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045f2:	4293      	cmp	r3, r2
 80045f4:	db06      	blt.n	8004604 <_printf_float+0x1ec>
 80045f6:	6822      	ldr	r2, [r4, #0]
 80045f8:	6123      	str	r3, [r4, #16]
 80045fa:	07d2      	lsls	r2, r2, #31
 80045fc:	d5e7      	bpl.n	80045ce <_printf_float+0x1b6>
 80045fe:	3301      	adds	r3, #1
 8004600:	6123      	str	r3, [r4, #16]
 8004602:	e7e4      	b.n	80045ce <_printf_float+0x1b6>
 8004604:	2101      	movs	r1, #1
 8004606:	2b00      	cmp	r3, #0
 8004608:	dc01      	bgt.n	800460e <_printf_float+0x1f6>
 800460a:	1849      	adds	r1, r1, r1
 800460c:	1ac9      	subs	r1, r1, r3
 800460e:	1852      	adds	r2, r2, r1
 8004610:	e7e9      	b.n	80045e6 <_printf_float+0x1ce>
 8004612:	6822      	ldr	r2, [r4, #0]
 8004614:	0553      	lsls	r3, r2, #21
 8004616:	d408      	bmi.n	800462a <_printf_float+0x212>
 8004618:	6923      	ldr	r3, [r4, #16]
 800461a:	002a      	movs	r2, r5
 800461c:	0038      	movs	r0, r7
 800461e:	9908      	ldr	r1, [sp, #32]
 8004620:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004622:	47a8      	blx	r5
 8004624:	1c43      	adds	r3, r0, #1
 8004626:	d129      	bne.n	800467c <_printf_float+0x264>
 8004628:	e754      	b.n	80044d4 <_printf_float+0xbc>
 800462a:	2e65      	cmp	r6, #101	; 0x65
 800462c:	d800      	bhi.n	8004630 <_printf_float+0x218>
 800462e:	e0ec      	b.n	800480a <_printf_float+0x3f2>
 8004630:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004632:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004634:	2200      	movs	r2, #0
 8004636:	2300      	movs	r3, #0
 8004638:	f7fb ff08 	bl	800044c <__aeabi_dcmpeq>
 800463c:	2800      	cmp	r0, #0
 800463e:	d034      	beq.n	80046aa <_printf_float+0x292>
 8004640:	2301      	movs	r3, #1
 8004642:	0038      	movs	r0, r7
 8004644:	4a37      	ldr	r2, [pc, #220]	; (8004724 <_printf_float+0x30c>)
 8004646:	9908      	ldr	r1, [sp, #32]
 8004648:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800464a:	47a8      	blx	r5
 800464c:	1c43      	adds	r3, r0, #1
 800464e:	d100      	bne.n	8004652 <_printf_float+0x23a>
 8004650:	e740      	b.n	80044d4 <_printf_float+0xbc>
 8004652:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004654:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004656:	4293      	cmp	r3, r2
 8004658:	db02      	blt.n	8004660 <_printf_float+0x248>
 800465a:	6823      	ldr	r3, [r4, #0]
 800465c:	07db      	lsls	r3, r3, #31
 800465e:	d50d      	bpl.n	800467c <_printf_float+0x264>
 8004660:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004662:	0038      	movs	r0, r7
 8004664:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004666:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004668:	9908      	ldr	r1, [sp, #32]
 800466a:	47a8      	blx	r5
 800466c:	2500      	movs	r5, #0
 800466e:	1c43      	adds	r3, r0, #1
 8004670:	d100      	bne.n	8004674 <_printf_float+0x25c>
 8004672:	e72f      	b.n	80044d4 <_printf_float+0xbc>
 8004674:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004676:	3b01      	subs	r3, #1
 8004678:	42ab      	cmp	r3, r5
 800467a:	dc0a      	bgt.n	8004692 <_printf_float+0x27a>
 800467c:	6823      	ldr	r3, [r4, #0]
 800467e:	079b      	lsls	r3, r3, #30
 8004680:	d500      	bpl.n	8004684 <_printf_float+0x26c>
 8004682:	e114      	b.n	80048ae <_printf_float+0x496>
 8004684:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004686:	68e0      	ldr	r0, [r4, #12]
 8004688:	4298      	cmp	r0, r3
 800468a:	db00      	blt.n	800468e <_printf_float+0x276>
 800468c:	e724      	b.n	80044d8 <_printf_float+0xc0>
 800468e:	0018      	movs	r0, r3
 8004690:	e722      	b.n	80044d8 <_printf_float+0xc0>
 8004692:	0022      	movs	r2, r4
 8004694:	2301      	movs	r3, #1
 8004696:	0038      	movs	r0, r7
 8004698:	9908      	ldr	r1, [sp, #32]
 800469a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800469c:	321a      	adds	r2, #26
 800469e:	47b0      	blx	r6
 80046a0:	1c43      	adds	r3, r0, #1
 80046a2:	d100      	bne.n	80046a6 <_printf_float+0x28e>
 80046a4:	e716      	b.n	80044d4 <_printf_float+0xbc>
 80046a6:	3501      	adds	r5, #1
 80046a8:	e7e4      	b.n	8004674 <_printf_float+0x25c>
 80046aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	dc3b      	bgt.n	8004728 <_printf_float+0x310>
 80046b0:	2301      	movs	r3, #1
 80046b2:	0038      	movs	r0, r7
 80046b4:	4a1b      	ldr	r2, [pc, #108]	; (8004724 <_printf_float+0x30c>)
 80046b6:	9908      	ldr	r1, [sp, #32]
 80046b8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80046ba:	47b0      	blx	r6
 80046bc:	1c43      	adds	r3, r0, #1
 80046be:	d100      	bne.n	80046c2 <_printf_float+0x2aa>
 80046c0:	e708      	b.n	80044d4 <_printf_float+0xbc>
 80046c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80046c6:	4313      	orrs	r3, r2
 80046c8:	d102      	bne.n	80046d0 <_printf_float+0x2b8>
 80046ca:	6823      	ldr	r3, [r4, #0]
 80046cc:	07db      	lsls	r3, r3, #31
 80046ce:	d5d5      	bpl.n	800467c <_printf_float+0x264>
 80046d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80046d2:	0038      	movs	r0, r7
 80046d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80046d6:	9908      	ldr	r1, [sp, #32]
 80046d8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80046da:	47b0      	blx	r6
 80046dc:	1c43      	adds	r3, r0, #1
 80046de:	d100      	bne.n	80046e2 <_printf_float+0x2ca>
 80046e0:	e6f8      	b.n	80044d4 <_printf_float+0xbc>
 80046e2:	2300      	movs	r3, #0
 80046e4:	930a      	str	r3, [sp, #40]	; 0x28
 80046e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80046ea:	425b      	negs	r3, r3
 80046ec:	4293      	cmp	r3, r2
 80046ee:	dc01      	bgt.n	80046f4 <_printf_float+0x2dc>
 80046f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80046f2:	e792      	b.n	800461a <_printf_float+0x202>
 80046f4:	0022      	movs	r2, r4
 80046f6:	2301      	movs	r3, #1
 80046f8:	0038      	movs	r0, r7
 80046fa:	9908      	ldr	r1, [sp, #32]
 80046fc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80046fe:	321a      	adds	r2, #26
 8004700:	47b0      	blx	r6
 8004702:	1c43      	adds	r3, r0, #1
 8004704:	d100      	bne.n	8004708 <_printf_float+0x2f0>
 8004706:	e6e5      	b.n	80044d4 <_printf_float+0xbc>
 8004708:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800470a:	3301      	adds	r3, #1
 800470c:	e7ea      	b.n	80046e4 <_printf_float+0x2cc>
 800470e:	46c0      	nop			; (mov r8, r8)
 8004710:	7fefffff 	.word	0x7fefffff
 8004714:	08006fe0 	.word	0x08006fe0
 8004718:	08006fe4 	.word	0x08006fe4
 800471c:	08006fe8 	.word	0x08006fe8
 8004720:	08006fec 	.word	0x08006fec
 8004724:	08006ff0 	.word	0x08006ff0
 8004728:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800472a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800472c:	920a      	str	r2, [sp, #40]	; 0x28
 800472e:	429a      	cmp	r2, r3
 8004730:	dd00      	ble.n	8004734 <_printf_float+0x31c>
 8004732:	930a      	str	r3, [sp, #40]	; 0x28
 8004734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004736:	2b00      	cmp	r3, #0
 8004738:	dc3d      	bgt.n	80047b6 <_printf_float+0x39e>
 800473a:	2300      	movs	r3, #0
 800473c:	930e      	str	r3, [sp, #56]	; 0x38
 800473e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004740:	43db      	mvns	r3, r3
 8004742:	17db      	asrs	r3, r3, #31
 8004744:	930f      	str	r3, [sp, #60]	; 0x3c
 8004746:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004748:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800474a:	930c      	str	r3, [sp, #48]	; 0x30
 800474c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800474e:	4013      	ands	r3, r2
 8004750:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004752:	1ad3      	subs	r3, r2, r3
 8004754:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004756:	4293      	cmp	r3, r2
 8004758:	dc36      	bgt.n	80047c8 <_printf_float+0x3b0>
 800475a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800475c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800475e:	4293      	cmp	r3, r2
 8004760:	db40      	blt.n	80047e4 <_printf_float+0x3cc>
 8004762:	6823      	ldr	r3, [r4, #0]
 8004764:	07db      	lsls	r3, r3, #31
 8004766:	d43d      	bmi.n	80047e4 <_printf_float+0x3cc>
 8004768:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800476a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800476c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800476e:	1ad3      	subs	r3, r2, r3
 8004770:	1a52      	subs	r2, r2, r1
 8004772:	920a      	str	r2, [sp, #40]	; 0x28
 8004774:	429a      	cmp	r2, r3
 8004776:	dd00      	ble.n	800477a <_printf_float+0x362>
 8004778:	930a      	str	r3, [sp, #40]	; 0x28
 800477a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800477c:	2b00      	cmp	r3, #0
 800477e:	dc3a      	bgt.n	80047f6 <_printf_float+0x3de>
 8004780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004782:	2500      	movs	r5, #0
 8004784:	43db      	mvns	r3, r3
 8004786:	17db      	asrs	r3, r3, #31
 8004788:	930b      	str	r3, [sp, #44]	; 0x2c
 800478a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800478c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800478e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004790:	1a9b      	subs	r3, r3, r2
 8004792:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004794:	400a      	ands	r2, r1
 8004796:	1a9b      	subs	r3, r3, r2
 8004798:	42ab      	cmp	r3, r5
 800479a:	dc00      	bgt.n	800479e <_printf_float+0x386>
 800479c:	e76e      	b.n	800467c <_printf_float+0x264>
 800479e:	0022      	movs	r2, r4
 80047a0:	2301      	movs	r3, #1
 80047a2:	0038      	movs	r0, r7
 80047a4:	9908      	ldr	r1, [sp, #32]
 80047a6:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80047a8:	321a      	adds	r2, #26
 80047aa:	47b0      	blx	r6
 80047ac:	1c43      	adds	r3, r0, #1
 80047ae:	d100      	bne.n	80047b2 <_printf_float+0x39a>
 80047b0:	e690      	b.n	80044d4 <_printf_float+0xbc>
 80047b2:	3501      	adds	r5, #1
 80047b4:	e7e9      	b.n	800478a <_printf_float+0x372>
 80047b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047b8:	002a      	movs	r2, r5
 80047ba:	0038      	movs	r0, r7
 80047bc:	9908      	ldr	r1, [sp, #32]
 80047be:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80047c0:	47b0      	blx	r6
 80047c2:	1c43      	adds	r3, r0, #1
 80047c4:	d1b9      	bne.n	800473a <_printf_float+0x322>
 80047c6:	e685      	b.n	80044d4 <_printf_float+0xbc>
 80047c8:	0022      	movs	r2, r4
 80047ca:	2301      	movs	r3, #1
 80047cc:	0038      	movs	r0, r7
 80047ce:	9908      	ldr	r1, [sp, #32]
 80047d0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80047d2:	321a      	adds	r2, #26
 80047d4:	47b0      	blx	r6
 80047d6:	1c43      	adds	r3, r0, #1
 80047d8:	d100      	bne.n	80047dc <_printf_float+0x3c4>
 80047da:	e67b      	b.n	80044d4 <_printf_float+0xbc>
 80047dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80047de:	3301      	adds	r3, #1
 80047e0:	930e      	str	r3, [sp, #56]	; 0x38
 80047e2:	e7b0      	b.n	8004746 <_printf_float+0x32e>
 80047e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80047e6:	0038      	movs	r0, r7
 80047e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80047ea:	9908      	ldr	r1, [sp, #32]
 80047ec:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80047ee:	47b0      	blx	r6
 80047f0:	1c43      	adds	r3, r0, #1
 80047f2:	d1b9      	bne.n	8004768 <_printf_float+0x350>
 80047f4:	e66e      	b.n	80044d4 <_printf_float+0xbc>
 80047f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80047f8:	0038      	movs	r0, r7
 80047fa:	18ea      	adds	r2, r5, r3
 80047fc:	9908      	ldr	r1, [sp, #32]
 80047fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004800:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004802:	47a8      	blx	r5
 8004804:	1c43      	adds	r3, r0, #1
 8004806:	d1bb      	bne.n	8004780 <_printf_float+0x368>
 8004808:	e664      	b.n	80044d4 <_printf_float+0xbc>
 800480a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800480c:	2b01      	cmp	r3, #1
 800480e:	dc02      	bgt.n	8004816 <_printf_float+0x3fe>
 8004810:	2301      	movs	r3, #1
 8004812:	421a      	tst	r2, r3
 8004814:	d038      	beq.n	8004888 <_printf_float+0x470>
 8004816:	2301      	movs	r3, #1
 8004818:	002a      	movs	r2, r5
 800481a:	0038      	movs	r0, r7
 800481c:	9908      	ldr	r1, [sp, #32]
 800481e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004820:	47b0      	blx	r6
 8004822:	1c43      	adds	r3, r0, #1
 8004824:	d100      	bne.n	8004828 <_printf_float+0x410>
 8004826:	e655      	b.n	80044d4 <_printf_float+0xbc>
 8004828:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800482a:	0038      	movs	r0, r7
 800482c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800482e:	9908      	ldr	r1, [sp, #32]
 8004830:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004832:	47b0      	blx	r6
 8004834:	1c43      	adds	r3, r0, #1
 8004836:	d100      	bne.n	800483a <_printf_float+0x422>
 8004838:	e64c      	b.n	80044d4 <_printf_float+0xbc>
 800483a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800483c:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800483e:	2200      	movs	r2, #0
 8004840:	2300      	movs	r3, #0
 8004842:	f7fb fe03 	bl	800044c <__aeabi_dcmpeq>
 8004846:	2800      	cmp	r0, #0
 8004848:	d11c      	bne.n	8004884 <_printf_float+0x46c>
 800484a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800484c:	1c6a      	adds	r2, r5, #1
 800484e:	3b01      	subs	r3, #1
 8004850:	0038      	movs	r0, r7
 8004852:	9908      	ldr	r1, [sp, #32]
 8004854:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004856:	47a8      	blx	r5
 8004858:	1c43      	adds	r3, r0, #1
 800485a:	d10f      	bne.n	800487c <_printf_float+0x464>
 800485c:	e63a      	b.n	80044d4 <_printf_float+0xbc>
 800485e:	0022      	movs	r2, r4
 8004860:	2301      	movs	r3, #1
 8004862:	0038      	movs	r0, r7
 8004864:	9908      	ldr	r1, [sp, #32]
 8004866:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004868:	321a      	adds	r2, #26
 800486a:	47b0      	blx	r6
 800486c:	1c43      	adds	r3, r0, #1
 800486e:	d100      	bne.n	8004872 <_printf_float+0x45a>
 8004870:	e630      	b.n	80044d4 <_printf_float+0xbc>
 8004872:	3501      	adds	r5, #1
 8004874:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004876:	3b01      	subs	r3, #1
 8004878:	42ab      	cmp	r3, r5
 800487a:	dcf0      	bgt.n	800485e <_printf_float+0x446>
 800487c:	0022      	movs	r2, r4
 800487e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004880:	3250      	adds	r2, #80	; 0x50
 8004882:	e6cb      	b.n	800461c <_printf_float+0x204>
 8004884:	2500      	movs	r5, #0
 8004886:	e7f5      	b.n	8004874 <_printf_float+0x45c>
 8004888:	002a      	movs	r2, r5
 800488a:	e7e1      	b.n	8004850 <_printf_float+0x438>
 800488c:	0022      	movs	r2, r4
 800488e:	2301      	movs	r3, #1
 8004890:	0038      	movs	r0, r7
 8004892:	9908      	ldr	r1, [sp, #32]
 8004894:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004896:	3219      	adds	r2, #25
 8004898:	47b0      	blx	r6
 800489a:	1c43      	adds	r3, r0, #1
 800489c:	d100      	bne.n	80048a0 <_printf_float+0x488>
 800489e:	e619      	b.n	80044d4 <_printf_float+0xbc>
 80048a0:	3501      	adds	r5, #1
 80048a2:	68e3      	ldr	r3, [r4, #12]
 80048a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80048a6:	1a9b      	subs	r3, r3, r2
 80048a8:	42ab      	cmp	r3, r5
 80048aa:	dcef      	bgt.n	800488c <_printf_float+0x474>
 80048ac:	e6ea      	b.n	8004684 <_printf_float+0x26c>
 80048ae:	2500      	movs	r5, #0
 80048b0:	e7f7      	b.n	80048a2 <_printf_float+0x48a>
 80048b2:	46c0      	nop			; (mov r8, r8)

080048b4 <_printf_common>:
 80048b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80048b6:	0015      	movs	r5, r2
 80048b8:	9301      	str	r3, [sp, #4]
 80048ba:	688a      	ldr	r2, [r1, #8]
 80048bc:	690b      	ldr	r3, [r1, #16]
 80048be:	000c      	movs	r4, r1
 80048c0:	9000      	str	r0, [sp, #0]
 80048c2:	4293      	cmp	r3, r2
 80048c4:	da00      	bge.n	80048c8 <_printf_common+0x14>
 80048c6:	0013      	movs	r3, r2
 80048c8:	0022      	movs	r2, r4
 80048ca:	602b      	str	r3, [r5, #0]
 80048cc:	3243      	adds	r2, #67	; 0x43
 80048ce:	7812      	ldrb	r2, [r2, #0]
 80048d0:	2a00      	cmp	r2, #0
 80048d2:	d001      	beq.n	80048d8 <_printf_common+0x24>
 80048d4:	3301      	adds	r3, #1
 80048d6:	602b      	str	r3, [r5, #0]
 80048d8:	6823      	ldr	r3, [r4, #0]
 80048da:	069b      	lsls	r3, r3, #26
 80048dc:	d502      	bpl.n	80048e4 <_printf_common+0x30>
 80048de:	682b      	ldr	r3, [r5, #0]
 80048e0:	3302      	adds	r3, #2
 80048e2:	602b      	str	r3, [r5, #0]
 80048e4:	6822      	ldr	r2, [r4, #0]
 80048e6:	2306      	movs	r3, #6
 80048e8:	0017      	movs	r7, r2
 80048ea:	401f      	ands	r7, r3
 80048ec:	421a      	tst	r2, r3
 80048ee:	d027      	beq.n	8004940 <_printf_common+0x8c>
 80048f0:	0023      	movs	r3, r4
 80048f2:	3343      	adds	r3, #67	; 0x43
 80048f4:	781b      	ldrb	r3, [r3, #0]
 80048f6:	1e5a      	subs	r2, r3, #1
 80048f8:	4193      	sbcs	r3, r2
 80048fa:	6822      	ldr	r2, [r4, #0]
 80048fc:	0692      	lsls	r2, r2, #26
 80048fe:	d430      	bmi.n	8004962 <_printf_common+0xae>
 8004900:	0022      	movs	r2, r4
 8004902:	9901      	ldr	r1, [sp, #4]
 8004904:	9800      	ldr	r0, [sp, #0]
 8004906:	9e08      	ldr	r6, [sp, #32]
 8004908:	3243      	adds	r2, #67	; 0x43
 800490a:	47b0      	blx	r6
 800490c:	1c43      	adds	r3, r0, #1
 800490e:	d025      	beq.n	800495c <_printf_common+0xa8>
 8004910:	2306      	movs	r3, #6
 8004912:	6820      	ldr	r0, [r4, #0]
 8004914:	682a      	ldr	r2, [r5, #0]
 8004916:	68e1      	ldr	r1, [r4, #12]
 8004918:	2500      	movs	r5, #0
 800491a:	4003      	ands	r3, r0
 800491c:	2b04      	cmp	r3, #4
 800491e:	d103      	bne.n	8004928 <_printf_common+0x74>
 8004920:	1a8d      	subs	r5, r1, r2
 8004922:	43eb      	mvns	r3, r5
 8004924:	17db      	asrs	r3, r3, #31
 8004926:	401d      	ands	r5, r3
 8004928:	68a3      	ldr	r3, [r4, #8]
 800492a:	6922      	ldr	r2, [r4, #16]
 800492c:	4293      	cmp	r3, r2
 800492e:	dd01      	ble.n	8004934 <_printf_common+0x80>
 8004930:	1a9b      	subs	r3, r3, r2
 8004932:	18ed      	adds	r5, r5, r3
 8004934:	2700      	movs	r7, #0
 8004936:	42bd      	cmp	r5, r7
 8004938:	d120      	bne.n	800497c <_printf_common+0xc8>
 800493a:	2000      	movs	r0, #0
 800493c:	e010      	b.n	8004960 <_printf_common+0xac>
 800493e:	3701      	adds	r7, #1
 8004940:	68e3      	ldr	r3, [r4, #12]
 8004942:	682a      	ldr	r2, [r5, #0]
 8004944:	1a9b      	subs	r3, r3, r2
 8004946:	42bb      	cmp	r3, r7
 8004948:	ddd2      	ble.n	80048f0 <_printf_common+0x3c>
 800494a:	0022      	movs	r2, r4
 800494c:	2301      	movs	r3, #1
 800494e:	9901      	ldr	r1, [sp, #4]
 8004950:	9800      	ldr	r0, [sp, #0]
 8004952:	9e08      	ldr	r6, [sp, #32]
 8004954:	3219      	adds	r2, #25
 8004956:	47b0      	blx	r6
 8004958:	1c43      	adds	r3, r0, #1
 800495a:	d1f0      	bne.n	800493e <_printf_common+0x8a>
 800495c:	2001      	movs	r0, #1
 800495e:	4240      	negs	r0, r0
 8004960:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004962:	2030      	movs	r0, #48	; 0x30
 8004964:	18e1      	adds	r1, r4, r3
 8004966:	3143      	adds	r1, #67	; 0x43
 8004968:	7008      	strb	r0, [r1, #0]
 800496a:	0021      	movs	r1, r4
 800496c:	1c5a      	adds	r2, r3, #1
 800496e:	3145      	adds	r1, #69	; 0x45
 8004970:	7809      	ldrb	r1, [r1, #0]
 8004972:	18a2      	adds	r2, r4, r2
 8004974:	3243      	adds	r2, #67	; 0x43
 8004976:	3302      	adds	r3, #2
 8004978:	7011      	strb	r1, [r2, #0]
 800497a:	e7c1      	b.n	8004900 <_printf_common+0x4c>
 800497c:	0022      	movs	r2, r4
 800497e:	2301      	movs	r3, #1
 8004980:	9901      	ldr	r1, [sp, #4]
 8004982:	9800      	ldr	r0, [sp, #0]
 8004984:	9e08      	ldr	r6, [sp, #32]
 8004986:	321a      	adds	r2, #26
 8004988:	47b0      	blx	r6
 800498a:	1c43      	adds	r3, r0, #1
 800498c:	d0e6      	beq.n	800495c <_printf_common+0xa8>
 800498e:	3701      	adds	r7, #1
 8004990:	e7d1      	b.n	8004936 <_printf_common+0x82>
	...

08004994 <_printf_i>:
 8004994:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004996:	b08b      	sub	sp, #44	; 0x2c
 8004998:	9206      	str	r2, [sp, #24]
 800499a:	000a      	movs	r2, r1
 800499c:	3243      	adds	r2, #67	; 0x43
 800499e:	9307      	str	r3, [sp, #28]
 80049a0:	9005      	str	r0, [sp, #20]
 80049a2:	9204      	str	r2, [sp, #16]
 80049a4:	7e0a      	ldrb	r2, [r1, #24]
 80049a6:	000c      	movs	r4, r1
 80049a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80049aa:	2a78      	cmp	r2, #120	; 0x78
 80049ac:	d806      	bhi.n	80049bc <_printf_i+0x28>
 80049ae:	2a62      	cmp	r2, #98	; 0x62
 80049b0:	d808      	bhi.n	80049c4 <_printf_i+0x30>
 80049b2:	2a00      	cmp	r2, #0
 80049b4:	d100      	bne.n	80049b8 <_printf_i+0x24>
 80049b6:	e0c0      	b.n	8004b3a <_printf_i+0x1a6>
 80049b8:	2a58      	cmp	r2, #88	; 0x58
 80049ba:	d052      	beq.n	8004a62 <_printf_i+0xce>
 80049bc:	0026      	movs	r6, r4
 80049be:	3642      	adds	r6, #66	; 0x42
 80049c0:	7032      	strb	r2, [r6, #0]
 80049c2:	e022      	b.n	8004a0a <_printf_i+0x76>
 80049c4:	0010      	movs	r0, r2
 80049c6:	3863      	subs	r0, #99	; 0x63
 80049c8:	2815      	cmp	r0, #21
 80049ca:	d8f7      	bhi.n	80049bc <_printf_i+0x28>
 80049cc:	f7fb fbae 	bl	800012c <__gnu_thumb1_case_shi>
 80049d0:	001f0016 	.word	0x001f0016
 80049d4:	fff6fff6 	.word	0xfff6fff6
 80049d8:	fff6fff6 	.word	0xfff6fff6
 80049dc:	fff6001f 	.word	0xfff6001f
 80049e0:	fff6fff6 	.word	0xfff6fff6
 80049e4:	00a8fff6 	.word	0x00a8fff6
 80049e8:	009a0036 	.word	0x009a0036
 80049ec:	fff6fff6 	.word	0xfff6fff6
 80049f0:	fff600b9 	.word	0xfff600b9
 80049f4:	fff60036 	.word	0xfff60036
 80049f8:	009efff6 	.word	0x009efff6
 80049fc:	0026      	movs	r6, r4
 80049fe:	681a      	ldr	r2, [r3, #0]
 8004a00:	3642      	adds	r6, #66	; 0x42
 8004a02:	1d11      	adds	r1, r2, #4
 8004a04:	6019      	str	r1, [r3, #0]
 8004a06:	6813      	ldr	r3, [r2, #0]
 8004a08:	7033      	strb	r3, [r6, #0]
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	e0a7      	b.n	8004b5e <_printf_i+0x1ca>
 8004a0e:	6808      	ldr	r0, [r1, #0]
 8004a10:	6819      	ldr	r1, [r3, #0]
 8004a12:	1d0a      	adds	r2, r1, #4
 8004a14:	0605      	lsls	r5, r0, #24
 8004a16:	d50b      	bpl.n	8004a30 <_printf_i+0x9c>
 8004a18:	680d      	ldr	r5, [r1, #0]
 8004a1a:	601a      	str	r2, [r3, #0]
 8004a1c:	2d00      	cmp	r5, #0
 8004a1e:	da03      	bge.n	8004a28 <_printf_i+0x94>
 8004a20:	232d      	movs	r3, #45	; 0x2d
 8004a22:	9a04      	ldr	r2, [sp, #16]
 8004a24:	426d      	negs	r5, r5
 8004a26:	7013      	strb	r3, [r2, #0]
 8004a28:	4b61      	ldr	r3, [pc, #388]	; (8004bb0 <_printf_i+0x21c>)
 8004a2a:	270a      	movs	r7, #10
 8004a2c:	9303      	str	r3, [sp, #12]
 8004a2e:	e032      	b.n	8004a96 <_printf_i+0x102>
 8004a30:	680d      	ldr	r5, [r1, #0]
 8004a32:	601a      	str	r2, [r3, #0]
 8004a34:	0641      	lsls	r1, r0, #25
 8004a36:	d5f1      	bpl.n	8004a1c <_printf_i+0x88>
 8004a38:	b22d      	sxth	r5, r5
 8004a3a:	e7ef      	b.n	8004a1c <_printf_i+0x88>
 8004a3c:	680d      	ldr	r5, [r1, #0]
 8004a3e:	6819      	ldr	r1, [r3, #0]
 8004a40:	1d08      	adds	r0, r1, #4
 8004a42:	6018      	str	r0, [r3, #0]
 8004a44:	062e      	lsls	r6, r5, #24
 8004a46:	d501      	bpl.n	8004a4c <_printf_i+0xb8>
 8004a48:	680d      	ldr	r5, [r1, #0]
 8004a4a:	e003      	b.n	8004a54 <_printf_i+0xc0>
 8004a4c:	066d      	lsls	r5, r5, #25
 8004a4e:	d5fb      	bpl.n	8004a48 <_printf_i+0xb4>
 8004a50:	680d      	ldr	r5, [r1, #0]
 8004a52:	b2ad      	uxth	r5, r5
 8004a54:	4b56      	ldr	r3, [pc, #344]	; (8004bb0 <_printf_i+0x21c>)
 8004a56:	270a      	movs	r7, #10
 8004a58:	9303      	str	r3, [sp, #12]
 8004a5a:	2a6f      	cmp	r2, #111	; 0x6f
 8004a5c:	d117      	bne.n	8004a8e <_printf_i+0xfa>
 8004a5e:	2708      	movs	r7, #8
 8004a60:	e015      	b.n	8004a8e <_printf_i+0xfa>
 8004a62:	3145      	adds	r1, #69	; 0x45
 8004a64:	700a      	strb	r2, [r1, #0]
 8004a66:	4a52      	ldr	r2, [pc, #328]	; (8004bb0 <_printf_i+0x21c>)
 8004a68:	9203      	str	r2, [sp, #12]
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	6821      	ldr	r1, [r4, #0]
 8004a6e:	ca20      	ldmia	r2!, {r5}
 8004a70:	601a      	str	r2, [r3, #0]
 8004a72:	0608      	lsls	r0, r1, #24
 8004a74:	d550      	bpl.n	8004b18 <_printf_i+0x184>
 8004a76:	07cb      	lsls	r3, r1, #31
 8004a78:	d502      	bpl.n	8004a80 <_printf_i+0xec>
 8004a7a:	2320      	movs	r3, #32
 8004a7c:	4319      	orrs	r1, r3
 8004a7e:	6021      	str	r1, [r4, #0]
 8004a80:	2710      	movs	r7, #16
 8004a82:	2d00      	cmp	r5, #0
 8004a84:	d103      	bne.n	8004a8e <_printf_i+0xfa>
 8004a86:	2320      	movs	r3, #32
 8004a88:	6822      	ldr	r2, [r4, #0]
 8004a8a:	439a      	bics	r2, r3
 8004a8c:	6022      	str	r2, [r4, #0]
 8004a8e:	0023      	movs	r3, r4
 8004a90:	2200      	movs	r2, #0
 8004a92:	3343      	adds	r3, #67	; 0x43
 8004a94:	701a      	strb	r2, [r3, #0]
 8004a96:	6863      	ldr	r3, [r4, #4]
 8004a98:	60a3      	str	r3, [r4, #8]
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	db03      	blt.n	8004aa6 <_printf_i+0x112>
 8004a9e:	2204      	movs	r2, #4
 8004aa0:	6821      	ldr	r1, [r4, #0]
 8004aa2:	4391      	bics	r1, r2
 8004aa4:	6021      	str	r1, [r4, #0]
 8004aa6:	2d00      	cmp	r5, #0
 8004aa8:	d102      	bne.n	8004ab0 <_printf_i+0x11c>
 8004aaa:	9e04      	ldr	r6, [sp, #16]
 8004aac:	2b00      	cmp	r3, #0
 8004aae:	d00c      	beq.n	8004aca <_printf_i+0x136>
 8004ab0:	9e04      	ldr	r6, [sp, #16]
 8004ab2:	0028      	movs	r0, r5
 8004ab4:	0039      	movs	r1, r7
 8004ab6:	f7fb fbc9 	bl	800024c <__aeabi_uidivmod>
 8004aba:	9b03      	ldr	r3, [sp, #12]
 8004abc:	3e01      	subs	r6, #1
 8004abe:	5c5b      	ldrb	r3, [r3, r1]
 8004ac0:	7033      	strb	r3, [r6, #0]
 8004ac2:	002b      	movs	r3, r5
 8004ac4:	0005      	movs	r5, r0
 8004ac6:	429f      	cmp	r7, r3
 8004ac8:	d9f3      	bls.n	8004ab2 <_printf_i+0x11e>
 8004aca:	2f08      	cmp	r7, #8
 8004acc:	d109      	bne.n	8004ae2 <_printf_i+0x14e>
 8004ace:	6823      	ldr	r3, [r4, #0]
 8004ad0:	07db      	lsls	r3, r3, #31
 8004ad2:	d506      	bpl.n	8004ae2 <_printf_i+0x14e>
 8004ad4:	6863      	ldr	r3, [r4, #4]
 8004ad6:	6922      	ldr	r2, [r4, #16]
 8004ad8:	4293      	cmp	r3, r2
 8004ada:	dc02      	bgt.n	8004ae2 <_printf_i+0x14e>
 8004adc:	2330      	movs	r3, #48	; 0x30
 8004ade:	3e01      	subs	r6, #1
 8004ae0:	7033      	strb	r3, [r6, #0]
 8004ae2:	9b04      	ldr	r3, [sp, #16]
 8004ae4:	1b9b      	subs	r3, r3, r6
 8004ae6:	6123      	str	r3, [r4, #16]
 8004ae8:	9b07      	ldr	r3, [sp, #28]
 8004aea:	0021      	movs	r1, r4
 8004aec:	9300      	str	r3, [sp, #0]
 8004aee:	9805      	ldr	r0, [sp, #20]
 8004af0:	9b06      	ldr	r3, [sp, #24]
 8004af2:	aa09      	add	r2, sp, #36	; 0x24
 8004af4:	f7ff fede 	bl	80048b4 <_printf_common>
 8004af8:	1c43      	adds	r3, r0, #1
 8004afa:	d135      	bne.n	8004b68 <_printf_i+0x1d4>
 8004afc:	2001      	movs	r0, #1
 8004afe:	4240      	negs	r0, r0
 8004b00:	b00b      	add	sp, #44	; 0x2c
 8004b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b04:	2220      	movs	r2, #32
 8004b06:	6809      	ldr	r1, [r1, #0]
 8004b08:	430a      	orrs	r2, r1
 8004b0a:	6022      	str	r2, [r4, #0]
 8004b0c:	0022      	movs	r2, r4
 8004b0e:	2178      	movs	r1, #120	; 0x78
 8004b10:	3245      	adds	r2, #69	; 0x45
 8004b12:	7011      	strb	r1, [r2, #0]
 8004b14:	4a27      	ldr	r2, [pc, #156]	; (8004bb4 <_printf_i+0x220>)
 8004b16:	e7a7      	b.n	8004a68 <_printf_i+0xd4>
 8004b18:	0648      	lsls	r0, r1, #25
 8004b1a:	d5ac      	bpl.n	8004a76 <_printf_i+0xe2>
 8004b1c:	b2ad      	uxth	r5, r5
 8004b1e:	e7aa      	b.n	8004a76 <_printf_i+0xe2>
 8004b20:	681a      	ldr	r2, [r3, #0]
 8004b22:	680d      	ldr	r5, [r1, #0]
 8004b24:	1d10      	adds	r0, r2, #4
 8004b26:	6949      	ldr	r1, [r1, #20]
 8004b28:	6018      	str	r0, [r3, #0]
 8004b2a:	6813      	ldr	r3, [r2, #0]
 8004b2c:	062e      	lsls	r6, r5, #24
 8004b2e:	d501      	bpl.n	8004b34 <_printf_i+0x1a0>
 8004b30:	6019      	str	r1, [r3, #0]
 8004b32:	e002      	b.n	8004b3a <_printf_i+0x1a6>
 8004b34:	066d      	lsls	r5, r5, #25
 8004b36:	d5fb      	bpl.n	8004b30 <_printf_i+0x19c>
 8004b38:	8019      	strh	r1, [r3, #0]
 8004b3a:	2300      	movs	r3, #0
 8004b3c:	9e04      	ldr	r6, [sp, #16]
 8004b3e:	6123      	str	r3, [r4, #16]
 8004b40:	e7d2      	b.n	8004ae8 <_printf_i+0x154>
 8004b42:	681a      	ldr	r2, [r3, #0]
 8004b44:	1d11      	adds	r1, r2, #4
 8004b46:	6019      	str	r1, [r3, #0]
 8004b48:	6816      	ldr	r6, [r2, #0]
 8004b4a:	2100      	movs	r1, #0
 8004b4c:	0030      	movs	r0, r6
 8004b4e:	6862      	ldr	r2, [r4, #4]
 8004b50:	f001 fa72 	bl	8006038 <memchr>
 8004b54:	2800      	cmp	r0, #0
 8004b56:	d001      	beq.n	8004b5c <_printf_i+0x1c8>
 8004b58:	1b80      	subs	r0, r0, r6
 8004b5a:	6060      	str	r0, [r4, #4]
 8004b5c:	6863      	ldr	r3, [r4, #4]
 8004b5e:	6123      	str	r3, [r4, #16]
 8004b60:	2300      	movs	r3, #0
 8004b62:	9a04      	ldr	r2, [sp, #16]
 8004b64:	7013      	strb	r3, [r2, #0]
 8004b66:	e7bf      	b.n	8004ae8 <_printf_i+0x154>
 8004b68:	6923      	ldr	r3, [r4, #16]
 8004b6a:	0032      	movs	r2, r6
 8004b6c:	9906      	ldr	r1, [sp, #24]
 8004b6e:	9805      	ldr	r0, [sp, #20]
 8004b70:	9d07      	ldr	r5, [sp, #28]
 8004b72:	47a8      	blx	r5
 8004b74:	1c43      	adds	r3, r0, #1
 8004b76:	d0c1      	beq.n	8004afc <_printf_i+0x168>
 8004b78:	6823      	ldr	r3, [r4, #0]
 8004b7a:	079b      	lsls	r3, r3, #30
 8004b7c:	d415      	bmi.n	8004baa <_printf_i+0x216>
 8004b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b80:	68e0      	ldr	r0, [r4, #12]
 8004b82:	4298      	cmp	r0, r3
 8004b84:	dabc      	bge.n	8004b00 <_printf_i+0x16c>
 8004b86:	0018      	movs	r0, r3
 8004b88:	e7ba      	b.n	8004b00 <_printf_i+0x16c>
 8004b8a:	0022      	movs	r2, r4
 8004b8c:	2301      	movs	r3, #1
 8004b8e:	9906      	ldr	r1, [sp, #24]
 8004b90:	9805      	ldr	r0, [sp, #20]
 8004b92:	9e07      	ldr	r6, [sp, #28]
 8004b94:	3219      	adds	r2, #25
 8004b96:	47b0      	blx	r6
 8004b98:	1c43      	adds	r3, r0, #1
 8004b9a:	d0af      	beq.n	8004afc <_printf_i+0x168>
 8004b9c:	3501      	adds	r5, #1
 8004b9e:	68e3      	ldr	r3, [r4, #12]
 8004ba0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004ba2:	1a9b      	subs	r3, r3, r2
 8004ba4:	42ab      	cmp	r3, r5
 8004ba6:	dcf0      	bgt.n	8004b8a <_printf_i+0x1f6>
 8004ba8:	e7e9      	b.n	8004b7e <_printf_i+0x1ea>
 8004baa:	2500      	movs	r5, #0
 8004bac:	e7f7      	b.n	8004b9e <_printf_i+0x20a>
 8004bae:	46c0      	nop			; (mov r8, r8)
 8004bb0:	08006ff2 	.word	0x08006ff2
 8004bb4:	08007003 	.word	0x08007003

08004bb8 <_puts_r>:
 8004bb8:	b570      	push	{r4, r5, r6, lr}
 8004bba:	0005      	movs	r5, r0
 8004bbc:	000e      	movs	r6, r1
 8004bbe:	2800      	cmp	r0, #0
 8004bc0:	d004      	beq.n	8004bcc <_puts_r+0x14>
 8004bc2:	6983      	ldr	r3, [r0, #24]
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d101      	bne.n	8004bcc <_puts_r+0x14>
 8004bc8:	f001 f918 	bl	8005dfc <__sinit>
 8004bcc:	69ab      	ldr	r3, [r5, #24]
 8004bce:	68ac      	ldr	r4, [r5, #8]
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d102      	bne.n	8004bda <_puts_r+0x22>
 8004bd4:	0028      	movs	r0, r5
 8004bd6:	f001 f911 	bl	8005dfc <__sinit>
 8004bda:	4b2d      	ldr	r3, [pc, #180]	; (8004c90 <_puts_r+0xd8>)
 8004bdc:	429c      	cmp	r4, r3
 8004bde:	d122      	bne.n	8004c26 <_puts_r+0x6e>
 8004be0:	686c      	ldr	r4, [r5, #4]
 8004be2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004be4:	07db      	lsls	r3, r3, #31
 8004be6:	d405      	bmi.n	8004bf4 <_puts_r+0x3c>
 8004be8:	89a3      	ldrh	r3, [r4, #12]
 8004bea:	059b      	lsls	r3, r3, #22
 8004bec:	d402      	bmi.n	8004bf4 <_puts_r+0x3c>
 8004bee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004bf0:	f001 f9a9 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8004bf4:	89a3      	ldrh	r3, [r4, #12]
 8004bf6:	071b      	lsls	r3, r3, #28
 8004bf8:	d502      	bpl.n	8004c00 <_puts_r+0x48>
 8004bfa:	6923      	ldr	r3, [r4, #16]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d129      	bne.n	8004c54 <_puts_r+0x9c>
 8004c00:	0021      	movs	r1, r4
 8004c02:	0028      	movs	r0, r5
 8004c04:	f000 f8aa 	bl	8004d5c <__swsetup_r>
 8004c08:	2800      	cmp	r0, #0
 8004c0a:	d023      	beq.n	8004c54 <_puts_r+0x9c>
 8004c0c:	2501      	movs	r5, #1
 8004c0e:	426d      	negs	r5, r5
 8004c10:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004c12:	07db      	lsls	r3, r3, #31
 8004c14:	d405      	bmi.n	8004c22 <_puts_r+0x6a>
 8004c16:	89a3      	ldrh	r3, [r4, #12]
 8004c18:	059b      	lsls	r3, r3, #22
 8004c1a:	d402      	bmi.n	8004c22 <_puts_r+0x6a>
 8004c1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004c1e:	f001 f993 	bl	8005f48 <__retarget_lock_release_recursive>
 8004c22:	0028      	movs	r0, r5
 8004c24:	bd70      	pop	{r4, r5, r6, pc}
 8004c26:	4b1b      	ldr	r3, [pc, #108]	; (8004c94 <_puts_r+0xdc>)
 8004c28:	429c      	cmp	r4, r3
 8004c2a:	d101      	bne.n	8004c30 <_puts_r+0x78>
 8004c2c:	68ac      	ldr	r4, [r5, #8]
 8004c2e:	e7d8      	b.n	8004be2 <_puts_r+0x2a>
 8004c30:	4b19      	ldr	r3, [pc, #100]	; (8004c98 <_puts_r+0xe0>)
 8004c32:	429c      	cmp	r4, r3
 8004c34:	d1d5      	bne.n	8004be2 <_puts_r+0x2a>
 8004c36:	68ec      	ldr	r4, [r5, #12]
 8004c38:	e7d3      	b.n	8004be2 <_puts_r+0x2a>
 8004c3a:	3601      	adds	r6, #1
 8004c3c:	60a3      	str	r3, [r4, #8]
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	da04      	bge.n	8004c4c <_puts_r+0x94>
 8004c42:	69a2      	ldr	r2, [r4, #24]
 8004c44:	429a      	cmp	r2, r3
 8004c46:	dc16      	bgt.n	8004c76 <_puts_r+0xbe>
 8004c48:	290a      	cmp	r1, #10
 8004c4a:	d014      	beq.n	8004c76 <_puts_r+0xbe>
 8004c4c:	6823      	ldr	r3, [r4, #0]
 8004c4e:	1c5a      	adds	r2, r3, #1
 8004c50:	6022      	str	r2, [r4, #0]
 8004c52:	7019      	strb	r1, [r3, #0]
 8004c54:	68a3      	ldr	r3, [r4, #8]
 8004c56:	7831      	ldrb	r1, [r6, #0]
 8004c58:	3b01      	subs	r3, #1
 8004c5a:	2900      	cmp	r1, #0
 8004c5c:	d1ed      	bne.n	8004c3a <_puts_r+0x82>
 8004c5e:	60a3      	str	r3, [r4, #8]
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	da0f      	bge.n	8004c84 <_puts_r+0xcc>
 8004c64:	0028      	movs	r0, r5
 8004c66:	0022      	movs	r2, r4
 8004c68:	310a      	adds	r1, #10
 8004c6a:	f000 f821 	bl	8004cb0 <__swbuf_r>
 8004c6e:	250a      	movs	r5, #10
 8004c70:	1c43      	adds	r3, r0, #1
 8004c72:	d1cd      	bne.n	8004c10 <_puts_r+0x58>
 8004c74:	e7ca      	b.n	8004c0c <_puts_r+0x54>
 8004c76:	0022      	movs	r2, r4
 8004c78:	0028      	movs	r0, r5
 8004c7a:	f000 f819 	bl	8004cb0 <__swbuf_r>
 8004c7e:	1c43      	adds	r3, r0, #1
 8004c80:	d1e8      	bne.n	8004c54 <_puts_r+0x9c>
 8004c82:	e7c3      	b.n	8004c0c <_puts_r+0x54>
 8004c84:	250a      	movs	r5, #10
 8004c86:	6823      	ldr	r3, [r4, #0]
 8004c88:	1c5a      	adds	r2, r3, #1
 8004c8a:	6022      	str	r2, [r4, #0]
 8004c8c:	701d      	strb	r5, [r3, #0]
 8004c8e:	e7bf      	b.n	8004c10 <_puts_r+0x58>
 8004c90:	080070c8 	.word	0x080070c8
 8004c94:	080070e8 	.word	0x080070e8
 8004c98:	080070a8 	.word	0x080070a8

08004c9c <puts>:
 8004c9c:	b510      	push	{r4, lr}
 8004c9e:	4b03      	ldr	r3, [pc, #12]	; (8004cac <puts+0x10>)
 8004ca0:	0001      	movs	r1, r0
 8004ca2:	6818      	ldr	r0, [r3, #0]
 8004ca4:	f7ff ff88 	bl	8004bb8 <_puts_r>
 8004ca8:	bd10      	pop	{r4, pc}
 8004caa:	46c0      	nop			; (mov r8, r8)
 8004cac:	2000000c 	.word	0x2000000c

08004cb0 <__swbuf_r>:
 8004cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cb2:	0005      	movs	r5, r0
 8004cb4:	000e      	movs	r6, r1
 8004cb6:	0014      	movs	r4, r2
 8004cb8:	2800      	cmp	r0, #0
 8004cba:	d004      	beq.n	8004cc6 <__swbuf_r+0x16>
 8004cbc:	6983      	ldr	r3, [r0, #24]
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d101      	bne.n	8004cc6 <__swbuf_r+0x16>
 8004cc2:	f001 f89b 	bl	8005dfc <__sinit>
 8004cc6:	4b22      	ldr	r3, [pc, #136]	; (8004d50 <__swbuf_r+0xa0>)
 8004cc8:	429c      	cmp	r4, r3
 8004cca:	d12e      	bne.n	8004d2a <__swbuf_r+0x7a>
 8004ccc:	686c      	ldr	r4, [r5, #4]
 8004cce:	69a3      	ldr	r3, [r4, #24]
 8004cd0:	60a3      	str	r3, [r4, #8]
 8004cd2:	89a3      	ldrh	r3, [r4, #12]
 8004cd4:	071b      	lsls	r3, r3, #28
 8004cd6:	d532      	bpl.n	8004d3e <__swbuf_r+0x8e>
 8004cd8:	6923      	ldr	r3, [r4, #16]
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d02f      	beq.n	8004d3e <__swbuf_r+0x8e>
 8004cde:	6823      	ldr	r3, [r4, #0]
 8004ce0:	6922      	ldr	r2, [r4, #16]
 8004ce2:	b2f7      	uxtb	r7, r6
 8004ce4:	1a98      	subs	r0, r3, r2
 8004ce6:	6963      	ldr	r3, [r4, #20]
 8004ce8:	b2f6      	uxtb	r6, r6
 8004cea:	4283      	cmp	r3, r0
 8004cec:	dc05      	bgt.n	8004cfa <__swbuf_r+0x4a>
 8004cee:	0021      	movs	r1, r4
 8004cf0:	0028      	movs	r0, r5
 8004cf2:	f000 ffe1 	bl	8005cb8 <_fflush_r>
 8004cf6:	2800      	cmp	r0, #0
 8004cf8:	d127      	bne.n	8004d4a <__swbuf_r+0x9a>
 8004cfa:	68a3      	ldr	r3, [r4, #8]
 8004cfc:	3001      	adds	r0, #1
 8004cfe:	3b01      	subs	r3, #1
 8004d00:	60a3      	str	r3, [r4, #8]
 8004d02:	6823      	ldr	r3, [r4, #0]
 8004d04:	1c5a      	adds	r2, r3, #1
 8004d06:	6022      	str	r2, [r4, #0]
 8004d08:	701f      	strb	r7, [r3, #0]
 8004d0a:	6963      	ldr	r3, [r4, #20]
 8004d0c:	4283      	cmp	r3, r0
 8004d0e:	d004      	beq.n	8004d1a <__swbuf_r+0x6a>
 8004d10:	89a3      	ldrh	r3, [r4, #12]
 8004d12:	07db      	lsls	r3, r3, #31
 8004d14:	d507      	bpl.n	8004d26 <__swbuf_r+0x76>
 8004d16:	2e0a      	cmp	r6, #10
 8004d18:	d105      	bne.n	8004d26 <__swbuf_r+0x76>
 8004d1a:	0021      	movs	r1, r4
 8004d1c:	0028      	movs	r0, r5
 8004d1e:	f000 ffcb 	bl	8005cb8 <_fflush_r>
 8004d22:	2800      	cmp	r0, #0
 8004d24:	d111      	bne.n	8004d4a <__swbuf_r+0x9a>
 8004d26:	0030      	movs	r0, r6
 8004d28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d2a:	4b0a      	ldr	r3, [pc, #40]	; (8004d54 <__swbuf_r+0xa4>)
 8004d2c:	429c      	cmp	r4, r3
 8004d2e:	d101      	bne.n	8004d34 <__swbuf_r+0x84>
 8004d30:	68ac      	ldr	r4, [r5, #8]
 8004d32:	e7cc      	b.n	8004cce <__swbuf_r+0x1e>
 8004d34:	4b08      	ldr	r3, [pc, #32]	; (8004d58 <__swbuf_r+0xa8>)
 8004d36:	429c      	cmp	r4, r3
 8004d38:	d1c9      	bne.n	8004cce <__swbuf_r+0x1e>
 8004d3a:	68ec      	ldr	r4, [r5, #12]
 8004d3c:	e7c7      	b.n	8004cce <__swbuf_r+0x1e>
 8004d3e:	0021      	movs	r1, r4
 8004d40:	0028      	movs	r0, r5
 8004d42:	f000 f80b 	bl	8004d5c <__swsetup_r>
 8004d46:	2800      	cmp	r0, #0
 8004d48:	d0c9      	beq.n	8004cde <__swbuf_r+0x2e>
 8004d4a:	2601      	movs	r6, #1
 8004d4c:	4276      	negs	r6, r6
 8004d4e:	e7ea      	b.n	8004d26 <__swbuf_r+0x76>
 8004d50:	080070c8 	.word	0x080070c8
 8004d54:	080070e8 	.word	0x080070e8
 8004d58:	080070a8 	.word	0x080070a8

08004d5c <__swsetup_r>:
 8004d5c:	4b37      	ldr	r3, [pc, #220]	; (8004e3c <__swsetup_r+0xe0>)
 8004d5e:	b570      	push	{r4, r5, r6, lr}
 8004d60:	681d      	ldr	r5, [r3, #0]
 8004d62:	0006      	movs	r6, r0
 8004d64:	000c      	movs	r4, r1
 8004d66:	2d00      	cmp	r5, #0
 8004d68:	d005      	beq.n	8004d76 <__swsetup_r+0x1a>
 8004d6a:	69ab      	ldr	r3, [r5, #24]
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	d102      	bne.n	8004d76 <__swsetup_r+0x1a>
 8004d70:	0028      	movs	r0, r5
 8004d72:	f001 f843 	bl	8005dfc <__sinit>
 8004d76:	4b32      	ldr	r3, [pc, #200]	; (8004e40 <__swsetup_r+0xe4>)
 8004d78:	429c      	cmp	r4, r3
 8004d7a:	d10f      	bne.n	8004d9c <__swsetup_r+0x40>
 8004d7c:	686c      	ldr	r4, [r5, #4]
 8004d7e:	230c      	movs	r3, #12
 8004d80:	5ee2      	ldrsh	r2, [r4, r3]
 8004d82:	b293      	uxth	r3, r2
 8004d84:	0711      	lsls	r1, r2, #28
 8004d86:	d42d      	bmi.n	8004de4 <__swsetup_r+0x88>
 8004d88:	06d9      	lsls	r1, r3, #27
 8004d8a:	d411      	bmi.n	8004db0 <__swsetup_r+0x54>
 8004d8c:	2309      	movs	r3, #9
 8004d8e:	2001      	movs	r0, #1
 8004d90:	6033      	str	r3, [r6, #0]
 8004d92:	3337      	adds	r3, #55	; 0x37
 8004d94:	4313      	orrs	r3, r2
 8004d96:	81a3      	strh	r3, [r4, #12]
 8004d98:	4240      	negs	r0, r0
 8004d9a:	bd70      	pop	{r4, r5, r6, pc}
 8004d9c:	4b29      	ldr	r3, [pc, #164]	; (8004e44 <__swsetup_r+0xe8>)
 8004d9e:	429c      	cmp	r4, r3
 8004da0:	d101      	bne.n	8004da6 <__swsetup_r+0x4a>
 8004da2:	68ac      	ldr	r4, [r5, #8]
 8004da4:	e7eb      	b.n	8004d7e <__swsetup_r+0x22>
 8004da6:	4b28      	ldr	r3, [pc, #160]	; (8004e48 <__swsetup_r+0xec>)
 8004da8:	429c      	cmp	r4, r3
 8004daa:	d1e8      	bne.n	8004d7e <__swsetup_r+0x22>
 8004dac:	68ec      	ldr	r4, [r5, #12]
 8004dae:	e7e6      	b.n	8004d7e <__swsetup_r+0x22>
 8004db0:	075b      	lsls	r3, r3, #29
 8004db2:	d513      	bpl.n	8004ddc <__swsetup_r+0x80>
 8004db4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004db6:	2900      	cmp	r1, #0
 8004db8:	d008      	beq.n	8004dcc <__swsetup_r+0x70>
 8004dba:	0023      	movs	r3, r4
 8004dbc:	3344      	adds	r3, #68	; 0x44
 8004dbe:	4299      	cmp	r1, r3
 8004dc0:	d002      	beq.n	8004dc8 <__swsetup_r+0x6c>
 8004dc2:	0030      	movs	r0, r6
 8004dc4:	f001 fcf8 	bl	80067b8 <_free_r>
 8004dc8:	2300      	movs	r3, #0
 8004dca:	6363      	str	r3, [r4, #52]	; 0x34
 8004dcc:	2224      	movs	r2, #36	; 0x24
 8004dce:	89a3      	ldrh	r3, [r4, #12]
 8004dd0:	4393      	bics	r3, r2
 8004dd2:	81a3      	strh	r3, [r4, #12]
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	6063      	str	r3, [r4, #4]
 8004dd8:	6923      	ldr	r3, [r4, #16]
 8004dda:	6023      	str	r3, [r4, #0]
 8004ddc:	2308      	movs	r3, #8
 8004dde:	89a2      	ldrh	r2, [r4, #12]
 8004de0:	4313      	orrs	r3, r2
 8004de2:	81a3      	strh	r3, [r4, #12]
 8004de4:	6923      	ldr	r3, [r4, #16]
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d10b      	bne.n	8004e02 <__swsetup_r+0xa6>
 8004dea:	21a0      	movs	r1, #160	; 0xa0
 8004dec:	2280      	movs	r2, #128	; 0x80
 8004dee:	89a3      	ldrh	r3, [r4, #12]
 8004df0:	0089      	lsls	r1, r1, #2
 8004df2:	0092      	lsls	r2, r2, #2
 8004df4:	400b      	ands	r3, r1
 8004df6:	4293      	cmp	r3, r2
 8004df8:	d003      	beq.n	8004e02 <__swsetup_r+0xa6>
 8004dfa:	0021      	movs	r1, r4
 8004dfc:	0030      	movs	r0, r6
 8004dfe:	f001 f8cd 	bl	8005f9c <__smakebuf_r>
 8004e02:	220c      	movs	r2, #12
 8004e04:	5ea3      	ldrsh	r3, [r4, r2]
 8004e06:	2001      	movs	r0, #1
 8004e08:	001a      	movs	r2, r3
 8004e0a:	b299      	uxth	r1, r3
 8004e0c:	4002      	ands	r2, r0
 8004e0e:	4203      	tst	r3, r0
 8004e10:	d00f      	beq.n	8004e32 <__swsetup_r+0xd6>
 8004e12:	2200      	movs	r2, #0
 8004e14:	60a2      	str	r2, [r4, #8]
 8004e16:	6962      	ldr	r2, [r4, #20]
 8004e18:	4252      	negs	r2, r2
 8004e1a:	61a2      	str	r2, [r4, #24]
 8004e1c:	2000      	movs	r0, #0
 8004e1e:	6922      	ldr	r2, [r4, #16]
 8004e20:	4282      	cmp	r2, r0
 8004e22:	d1ba      	bne.n	8004d9a <__swsetup_r+0x3e>
 8004e24:	060a      	lsls	r2, r1, #24
 8004e26:	d5b8      	bpl.n	8004d9a <__swsetup_r+0x3e>
 8004e28:	2240      	movs	r2, #64	; 0x40
 8004e2a:	4313      	orrs	r3, r2
 8004e2c:	81a3      	strh	r3, [r4, #12]
 8004e2e:	3801      	subs	r0, #1
 8004e30:	e7b3      	b.n	8004d9a <__swsetup_r+0x3e>
 8004e32:	0788      	lsls	r0, r1, #30
 8004e34:	d400      	bmi.n	8004e38 <__swsetup_r+0xdc>
 8004e36:	6962      	ldr	r2, [r4, #20]
 8004e38:	60a2      	str	r2, [r4, #8]
 8004e3a:	e7ef      	b.n	8004e1c <__swsetup_r+0xc0>
 8004e3c:	2000000c 	.word	0x2000000c
 8004e40:	080070c8 	.word	0x080070c8
 8004e44:	080070e8 	.word	0x080070e8
 8004e48:	080070a8 	.word	0x080070a8

08004e4c <quorem>:
 8004e4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e4e:	0006      	movs	r6, r0
 8004e50:	690d      	ldr	r5, [r1, #16]
 8004e52:	6933      	ldr	r3, [r6, #16]
 8004e54:	b087      	sub	sp, #28
 8004e56:	2000      	movs	r0, #0
 8004e58:	9102      	str	r1, [sp, #8]
 8004e5a:	42ab      	cmp	r3, r5
 8004e5c:	db6b      	blt.n	8004f36 <quorem+0xea>
 8004e5e:	000b      	movs	r3, r1
 8004e60:	3d01      	subs	r5, #1
 8004e62:	00ac      	lsls	r4, r5, #2
 8004e64:	3314      	adds	r3, #20
 8004e66:	9305      	str	r3, [sp, #20]
 8004e68:	191b      	adds	r3, r3, r4
 8004e6a:	9303      	str	r3, [sp, #12]
 8004e6c:	0033      	movs	r3, r6
 8004e6e:	3314      	adds	r3, #20
 8004e70:	9301      	str	r3, [sp, #4]
 8004e72:	191c      	adds	r4, r3, r4
 8004e74:	9b03      	ldr	r3, [sp, #12]
 8004e76:	6827      	ldr	r7, [r4, #0]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	0038      	movs	r0, r7
 8004e7c:	9300      	str	r3, [sp, #0]
 8004e7e:	3301      	adds	r3, #1
 8004e80:	0019      	movs	r1, r3
 8004e82:	9304      	str	r3, [sp, #16]
 8004e84:	f7fb f95c 	bl	8000140 <__udivsi3>
 8004e88:	9b04      	ldr	r3, [sp, #16]
 8004e8a:	9000      	str	r0, [sp, #0]
 8004e8c:	429f      	cmp	r7, r3
 8004e8e:	d329      	bcc.n	8004ee4 <quorem+0x98>
 8004e90:	2300      	movs	r3, #0
 8004e92:	469c      	mov	ip, r3
 8004e94:	9801      	ldr	r0, [sp, #4]
 8004e96:	9f05      	ldr	r7, [sp, #20]
 8004e98:	9304      	str	r3, [sp, #16]
 8004e9a:	cf08      	ldmia	r7!, {r3}
 8004e9c:	9a00      	ldr	r2, [sp, #0]
 8004e9e:	b299      	uxth	r1, r3
 8004ea0:	4351      	muls	r1, r2
 8004ea2:	0c1b      	lsrs	r3, r3, #16
 8004ea4:	4353      	muls	r3, r2
 8004ea6:	4461      	add	r1, ip
 8004ea8:	0c0a      	lsrs	r2, r1, #16
 8004eaa:	189b      	adds	r3, r3, r2
 8004eac:	0c1a      	lsrs	r2, r3, #16
 8004eae:	9305      	str	r3, [sp, #20]
 8004eb0:	6803      	ldr	r3, [r0, #0]
 8004eb2:	4694      	mov	ip, r2
 8004eb4:	b29a      	uxth	r2, r3
 8004eb6:	9b04      	ldr	r3, [sp, #16]
 8004eb8:	b289      	uxth	r1, r1
 8004eba:	18d2      	adds	r2, r2, r3
 8004ebc:	6803      	ldr	r3, [r0, #0]
 8004ebe:	1a52      	subs	r2, r2, r1
 8004ec0:	0c19      	lsrs	r1, r3, #16
 8004ec2:	466b      	mov	r3, sp
 8004ec4:	8a9b      	ldrh	r3, [r3, #20]
 8004ec6:	1acb      	subs	r3, r1, r3
 8004ec8:	1411      	asrs	r1, r2, #16
 8004eca:	185b      	adds	r3, r3, r1
 8004ecc:	1419      	asrs	r1, r3, #16
 8004ece:	b292      	uxth	r2, r2
 8004ed0:	041b      	lsls	r3, r3, #16
 8004ed2:	431a      	orrs	r2, r3
 8004ed4:	9b03      	ldr	r3, [sp, #12]
 8004ed6:	9104      	str	r1, [sp, #16]
 8004ed8:	c004      	stmia	r0!, {r2}
 8004eda:	42bb      	cmp	r3, r7
 8004edc:	d2dd      	bcs.n	8004e9a <quorem+0x4e>
 8004ede:	6823      	ldr	r3, [r4, #0]
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d02e      	beq.n	8004f42 <quorem+0xf6>
 8004ee4:	0030      	movs	r0, r6
 8004ee6:	9902      	ldr	r1, [sp, #8]
 8004ee8:	f001 fb40 	bl	800656c <__mcmp>
 8004eec:	2800      	cmp	r0, #0
 8004eee:	db21      	blt.n	8004f34 <quorem+0xe8>
 8004ef0:	0030      	movs	r0, r6
 8004ef2:	2400      	movs	r4, #0
 8004ef4:	9b00      	ldr	r3, [sp, #0]
 8004ef6:	9902      	ldr	r1, [sp, #8]
 8004ef8:	3301      	adds	r3, #1
 8004efa:	9300      	str	r3, [sp, #0]
 8004efc:	3014      	adds	r0, #20
 8004efe:	3114      	adds	r1, #20
 8004f00:	6802      	ldr	r2, [r0, #0]
 8004f02:	c908      	ldmia	r1!, {r3}
 8004f04:	b292      	uxth	r2, r2
 8004f06:	1914      	adds	r4, r2, r4
 8004f08:	b29a      	uxth	r2, r3
 8004f0a:	1aa2      	subs	r2, r4, r2
 8004f0c:	6804      	ldr	r4, [r0, #0]
 8004f0e:	0c1b      	lsrs	r3, r3, #16
 8004f10:	0c24      	lsrs	r4, r4, #16
 8004f12:	1ae3      	subs	r3, r4, r3
 8004f14:	1414      	asrs	r4, r2, #16
 8004f16:	191b      	adds	r3, r3, r4
 8004f18:	141c      	asrs	r4, r3, #16
 8004f1a:	b292      	uxth	r2, r2
 8004f1c:	041b      	lsls	r3, r3, #16
 8004f1e:	4313      	orrs	r3, r2
 8004f20:	c008      	stmia	r0!, {r3}
 8004f22:	9b03      	ldr	r3, [sp, #12]
 8004f24:	428b      	cmp	r3, r1
 8004f26:	d2eb      	bcs.n	8004f00 <quorem+0xb4>
 8004f28:	9a01      	ldr	r2, [sp, #4]
 8004f2a:	00ab      	lsls	r3, r5, #2
 8004f2c:	18d3      	adds	r3, r2, r3
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	2a00      	cmp	r2, #0
 8004f32:	d010      	beq.n	8004f56 <quorem+0x10a>
 8004f34:	9800      	ldr	r0, [sp, #0]
 8004f36:	b007      	add	sp, #28
 8004f38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f3a:	6823      	ldr	r3, [r4, #0]
 8004f3c:	2b00      	cmp	r3, #0
 8004f3e:	d104      	bne.n	8004f4a <quorem+0xfe>
 8004f40:	3d01      	subs	r5, #1
 8004f42:	9b01      	ldr	r3, [sp, #4]
 8004f44:	3c04      	subs	r4, #4
 8004f46:	42a3      	cmp	r3, r4
 8004f48:	d3f7      	bcc.n	8004f3a <quorem+0xee>
 8004f4a:	6135      	str	r5, [r6, #16]
 8004f4c:	e7ca      	b.n	8004ee4 <quorem+0x98>
 8004f4e:	681a      	ldr	r2, [r3, #0]
 8004f50:	2a00      	cmp	r2, #0
 8004f52:	d104      	bne.n	8004f5e <quorem+0x112>
 8004f54:	3d01      	subs	r5, #1
 8004f56:	9a01      	ldr	r2, [sp, #4]
 8004f58:	3b04      	subs	r3, #4
 8004f5a:	429a      	cmp	r2, r3
 8004f5c:	d3f7      	bcc.n	8004f4e <quorem+0x102>
 8004f5e:	6135      	str	r5, [r6, #16]
 8004f60:	e7e8      	b.n	8004f34 <quorem+0xe8>
	...

08004f64 <_dtoa_r>:
 8004f64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f66:	b09d      	sub	sp, #116	; 0x74
 8004f68:	9202      	str	r2, [sp, #8]
 8004f6a:	9303      	str	r3, [sp, #12]
 8004f6c:	9b02      	ldr	r3, [sp, #8]
 8004f6e:	9c03      	ldr	r4, [sp, #12]
 8004f70:	930a      	str	r3, [sp, #40]	; 0x28
 8004f72:	940b      	str	r4, [sp, #44]	; 0x2c
 8004f74:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004f76:	0007      	movs	r7, r0
 8004f78:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004f7a:	2c00      	cmp	r4, #0
 8004f7c:	d10e      	bne.n	8004f9c <_dtoa_r+0x38>
 8004f7e:	2010      	movs	r0, #16
 8004f80:	f001 f850 	bl	8006024 <malloc>
 8004f84:	1e02      	subs	r2, r0, #0
 8004f86:	6278      	str	r0, [r7, #36]	; 0x24
 8004f88:	d104      	bne.n	8004f94 <_dtoa_r+0x30>
 8004f8a:	21ea      	movs	r1, #234	; 0xea
 8004f8c:	4bc0      	ldr	r3, [pc, #768]	; (8005290 <_dtoa_r+0x32c>)
 8004f8e:	48c1      	ldr	r0, [pc, #772]	; (8005294 <_dtoa_r+0x330>)
 8004f90:	f001 fd2c 	bl	80069ec <__assert_func>
 8004f94:	6044      	str	r4, [r0, #4]
 8004f96:	6084      	str	r4, [r0, #8]
 8004f98:	6004      	str	r4, [r0, #0]
 8004f9a:	60c4      	str	r4, [r0, #12]
 8004f9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f9e:	6819      	ldr	r1, [r3, #0]
 8004fa0:	2900      	cmp	r1, #0
 8004fa2:	d00a      	beq.n	8004fba <_dtoa_r+0x56>
 8004fa4:	685a      	ldr	r2, [r3, #4]
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	4093      	lsls	r3, r2
 8004faa:	604a      	str	r2, [r1, #4]
 8004fac:	608b      	str	r3, [r1, #8]
 8004fae:	0038      	movs	r0, r7
 8004fb0:	f001 f89a 	bl	80060e8 <_Bfree>
 8004fb4:	2200      	movs	r2, #0
 8004fb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fb8:	601a      	str	r2, [r3, #0]
 8004fba:	9b03      	ldr	r3, [sp, #12]
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	da21      	bge.n	8005004 <_dtoa_r+0xa0>
 8004fc0:	2301      	movs	r3, #1
 8004fc2:	602b      	str	r3, [r5, #0]
 8004fc4:	9b03      	ldr	r3, [sp, #12]
 8004fc6:	005b      	lsls	r3, r3, #1
 8004fc8:	085b      	lsrs	r3, r3, #1
 8004fca:	930b      	str	r3, [sp, #44]	; 0x2c
 8004fcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004fce:	4bb2      	ldr	r3, [pc, #712]	; (8005298 <_dtoa_r+0x334>)
 8004fd0:	002a      	movs	r2, r5
 8004fd2:	9318      	str	r3, [sp, #96]	; 0x60
 8004fd4:	401a      	ands	r2, r3
 8004fd6:	429a      	cmp	r2, r3
 8004fd8:	d117      	bne.n	800500a <_dtoa_r+0xa6>
 8004fda:	4bb0      	ldr	r3, [pc, #704]	; (800529c <_dtoa_r+0x338>)
 8004fdc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004fde:	0328      	lsls	r0, r5, #12
 8004fe0:	6013      	str	r3, [r2, #0]
 8004fe2:	9b02      	ldr	r3, [sp, #8]
 8004fe4:	0b00      	lsrs	r0, r0, #12
 8004fe6:	4318      	orrs	r0, r3
 8004fe8:	d101      	bne.n	8004fee <_dtoa_r+0x8a>
 8004fea:	f000 fdc3 	bl	8005b74 <_dtoa_r+0xc10>
 8004fee:	48ac      	ldr	r0, [pc, #688]	; (80052a0 <_dtoa_r+0x33c>)
 8004ff0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004ff2:	9005      	str	r0, [sp, #20]
 8004ff4:	2b00      	cmp	r3, #0
 8004ff6:	d002      	beq.n	8004ffe <_dtoa_r+0x9a>
 8004ff8:	4baa      	ldr	r3, [pc, #680]	; (80052a4 <_dtoa_r+0x340>)
 8004ffa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004ffc:	6013      	str	r3, [r2, #0]
 8004ffe:	9805      	ldr	r0, [sp, #20]
 8005000:	b01d      	add	sp, #116	; 0x74
 8005002:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005004:	2300      	movs	r3, #0
 8005006:	602b      	str	r3, [r5, #0]
 8005008:	e7e0      	b.n	8004fcc <_dtoa_r+0x68>
 800500a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800500c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800500e:	9312      	str	r3, [sp, #72]	; 0x48
 8005010:	9413      	str	r4, [sp, #76]	; 0x4c
 8005012:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005014:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005016:	2200      	movs	r2, #0
 8005018:	2300      	movs	r3, #0
 800501a:	f7fb fa17 	bl	800044c <__aeabi_dcmpeq>
 800501e:	1e04      	subs	r4, r0, #0
 8005020:	d00b      	beq.n	800503a <_dtoa_r+0xd6>
 8005022:	2301      	movs	r3, #1
 8005024:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005026:	6013      	str	r3, [r2, #0]
 8005028:	4b9f      	ldr	r3, [pc, #636]	; (80052a8 <_dtoa_r+0x344>)
 800502a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800502c:	9305      	str	r3, [sp, #20]
 800502e:	2a00      	cmp	r2, #0
 8005030:	d0e5      	beq.n	8004ffe <_dtoa_r+0x9a>
 8005032:	4a9e      	ldr	r2, [pc, #632]	; (80052ac <_dtoa_r+0x348>)
 8005034:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005036:	600a      	str	r2, [r1, #0]
 8005038:	e7e1      	b.n	8004ffe <_dtoa_r+0x9a>
 800503a:	ab1a      	add	r3, sp, #104	; 0x68
 800503c:	9301      	str	r3, [sp, #4]
 800503e:	ab1b      	add	r3, sp, #108	; 0x6c
 8005040:	9300      	str	r3, [sp, #0]
 8005042:	0038      	movs	r0, r7
 8005044:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005046:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005048:	f001 fb44 	bl	80066d4 <__d2b>
 800504c:	006e      	lsls	r6, r5, #1
 800504e:	9004      	str	r0, [sp, #16]
 8005050:	0d76      	lsrs	r6, r6, #21
 8005052:	d100      	bne.n	8005056 <_dtoa_r+0xf2>
 8005054:	e07c      	b.n	8005150 <_dtoa_r+0x1ec>
 8005056:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005058:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800505a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800505c:	4a94      	ldr	r2, [pc, #592]	; (80052b0 <_dtoa_r+0x34c>)
 800505e:	031b      	lsls	r3, r3, #12
 8005060:	0b1b      	lsrs	r3, r3, #12
 8005062:	431a      	orrs	r2, r3
 8005064:	0011      	movs	r1, r2
 8005066:	4b93      	ldr	r3, [pc, #588]	; (80052b4 <_dtoa_r+0x350>)
 8005068:	9416      	str	r4, [sp, #88]	; 0x58
 800506a:	18f6      	adds	r6, r6, r3
 800506c:	2200      	movs	r2, #0
 800506e:	4b92      	ldr	r3, [pc, #584]	; (80052b8 <_dtoa_r+0x354>)
 8005070:	f7fc fd0a 	bl	8001a88 <__aeabi_dsub>
 8005074:	4a91      	ldr	r2, [pc, #580]	; (80052bc <_dtoa_r+0x358>)
 8005076:	4b92      	ldr	r3, [pc, #584]	; (80052c0 <_dtoa_r+0x35c>)
 8005078:	f7fc fa9a 	bl	80015b0 <__aeabi_dmul>
 800507c:	4a91      	ldr	r2, [pc, #580]	; (80052c4 <_dtoa_r+0x360>)
 800507e:	4b92      	ldr	r3, [pc, #584]	; (80052c8 <_dtoa_r+0x364>)
 8005080:	f7fb fb26 	bl	80006d0 <__aeabi_dadd>
 8005084:	0004      	movs	r4, r0
 8005086:	0030      	movs	r0, r6
 8005088:	000d      	movs	r5, r1
 800508a:	f7fd f8e3 	bl	8002254 <__aeabi_i2d>
 800508e:	4a8f      	ldr	r2, [pc, #572]	; (80052cc <_dtoa_r+0x368>)
 8005090:	4b8f      	ldr	r3, [pc, #572]	; (80052d0 <_dtoa_r+0x36c>)
 8005092:	f7fc fa8d 	bl	80015b0 <__aeabi_dmul>
 8005096:	0002      	movs	r2, r0
 8005098:	000b      	movs	r3, r1
 800509a:	0020      	movs	r0, r4
 800509c:	0029      	movs	r1, r5
 800509e:	f7fb fb17 	bl	80006d0 <__aeabi_dadd>
 80050a2:	0004      	movs	r4, r0
 80050a4:	000d      	movs	r5, r1
 80050a6:	f7fd f89f 	bl	80021e8 <__aeabi_d2iz>
 80050aa:	2200      	movs	r2, #0
 80050ac:	9002      	str	r0, [sp, #8]
 80050ae:	2300      	movs	r3, #0
 80050b0:	0020      	movs	r0, r4
 80050b2:	0029      	movs	r1, r5
 80050b4:	f7fb f9d0 	bl	8000458 <__aeabi_dcmplt>
 80050b8:	2800      	cmp	r0, #0
 80050ba:	d00b      	beq.n	80050d4 <_dtoa_r+0x170>
 80050bc:	9802      	ldr	r0, [sp, #8]
 80050be:	f7fd f8c9 	bl	8002254 <__aeabi_i2d>
 80050c2:	002b      	movs	r3, r5
 80050c4:	0022      	movs	r2, r4
 80050c6:	f7fb f9c1 	bl	800044c <__aeabi_dcmpeq>
 80050ca:	4243      	negs	r3, r0
 80050cc:	4158      	adcs	r0, r3
 80050ce:	9b02      	ldr	r3, [sp, #8]
 80050d0:	1a1b      	subs	r3, r3, r0
 80050d2:	9302      	str	r3, [sp, #8]
 80050d4:	2301      	movs	r3, #1
 80050d6:	9315      	str	r3, [sp, #84]	; 0x54
 80050d8:	9b02      	ldr	r3, [sp, #8]
 80050da:	2b16      	cmp	r3, #22
 80050dc:	d80f      	bhi.n	80050fe <_dtoa_r+0x19a>
 80050de:	9812      	ldr	r0, [sp, #72]	; 0x48
 80050e0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80050e2:	00da      	lsls	r2, r3, #3
 80050e4:	4b7b      	ldr	r3, [pc, #492]	; (80052d4 <_dtoa_r+0x370>)
 80050e6:	189b      	adds	r3, r3, r2
 80050e8:	681a      	ldr	r2, [r3, #0]
 80050ea:	685b      	ldr	r3, [r3, #4]
 80050ec:	f7fb f9b4 	bl	8000458 <__aeabi_dcmplt>
 80050f0:	2800      	cmp	r0, #0
 80050f2:	d049      	beq.n	8005188 <_dtoa_r+0x224>
 80050f4:	9b02      	ldr	r3, [sp, #8]
 80050f6:	3b01      	subs	r3, #1
 80050f8:	9302      	str	r3, [sp, #8]
 80050fa:	2300      	movs	r3, #0
 80050fc:	9315      	str	r3, [sp, #84]	; 0x54
 80050fe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005100:	1b9e      	subs	r6, r3, r6
 8005102:	2300      	movs	r3, #0
 8005104:	9308      	str	r3, [sp, #32]
 8005106:	0033      	movs	r3, r6
 8005108:	3b01      	subs	r3, #1
 800510a:	930d      	str	r3, [sp, #52]	; 0x34
 800510c:	d504      	bpl.n	8005118 <_dtoa_r+0x1b4>
 800510e:	2301      	movs	r3, #1
 8005110:	1b9b      	subs	r3, r3, r6
 8005112:	9308      	str	r3, [sp, #32]
 8005114:	2300      	movs	r3, #0
 8005116:	930d      	str	r3, [sp, #52]	; 0x34
 8005118:	9b02      	ldr	r3, [sp, #8]
 800511a:	2b00      	cmp	r3, #0
 800511c:	db36      	blt.n	800518c <_dtoa_r+0x228>
 800511e:	9a02      	ldr	r2, [sp, #8]
 8005120:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005122:	4694      	mov	ip, r2
 8005124:	4463      	add	r3, ip
 8005126:	930d      	str	r3, [sp, #52]	; 0x34
 8005128:	2300      	movs	r3, #0
 800512a:	9214      	str	r2, [sp, #80]	; 0x50
 800512c:	930e      	str	r3, [sp, #56]	; 0x38
 800512e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005130:	2401      	movs	r4, #1
 8005132:	2b09      	cmp	r3, #9
 8005134:	d862      	bhi.n	80051fc <_dtoa_r+0x298>
 8005136:	2b05      	cmp	r3, #5
 8005138:	dd02      	ble.n	8005140 <_dtoa_r+0x1dc>
 800513a:	2400      	movs	r4, #0
 800513c:	3b04      	subs	r3, #4
 800513e:	9322      	str	r3, [sp, #136]	; 0x88
 8005140:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005142:	1e98      	subs	r0, r3, #2
 8005144:	2803      	cmp	r0, #3
 8005146:	d862      	bhi.n	800520e <_dtoa_r+0x2aa>
 8005148:	f7fa ffe6 	bl	8000118 <__gnu_thumb1_case_uqi>
 800514c:	56343629 	.word	0x56343629
 8005150:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005152:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005154:	189e      	adds	r6, r3, r2
 8005156:	4b60      	ldr	r3, [pc, #384]	; (80052d8 <_dtoa_r+0x374>)
 8005158:	18f2      	adds	r2, r6, r3
 800515a:	2a20      	cmp	r2, #32
 800515c:	dd0f      	ble.n	800517e <_dtoa_r+0x21a>
 800515e:	2340      	movs	r3, #64	; 0x40
 8005160:	1a9b      	subs	r3, r3, r2
 8005162:	409d      	lsls	r5, r3
 8005164:	4b5d      	ldr	r3, [pc, #372]	; (80052dc <_dtoa_r+0x378>)
 8005166:	9802      	ldr	r0, [sp, #8]
 8005168:	18f3      	adds	r3, r6, r3
 800516a:	40d8      	lsrs	r0, r3
 800516c:	4328      	orrs	r0, r5
 800516e:	f7fd f8a1 	bl	80022b4 <__aeabi_ui2d>
 8005172:	2301      	movs	r3, #1
 8005174:	4c5a      	ldr	r4, [pc, #360]	; (80052e0 <_dtoa_r+0x37c>)
 8005176:	3e01      	subs	r6, #1
 8005178:	1909      	adds	r1, r1, r4
 800517a:	9316      	str	r3, [sp, #88]	; 0x58
 800517c:	e776      	b.n	800506c <_dtoa_r+0x108>
 800517e:	2320      	movs	r3, #32
 8005180:	9802      	ldr	r0, [sp, #8]
 8005182:	1a9b      	subs	r3, r3, r2
 8005184:	4098      	lsls	r0, r3
 8005186:	e7f2      	b.n	800516e <_dtoa_r+0x20a>
 8005188:	9015      	str	r0, [sp, #84]	; 0x54
 800518a:	e7b8      	b.n	80050fe <_dtoa_r+0x19a>
 800518c:	9b08      	ldr	r3, [sp, #32]
 800518e:	9a02      	ldr	r2, [sp, #8]
 8005190:	1a9b      	subs	r3, r3, r2
 8005192:	9308      	str	r3, [sp, #32]
 8005194:	4253      	negs	r3, r2
 8005196:	930e      	str	r3, [sp, #56]	; 0x38
 8005198:	2300      	movs	r3, #0
 800519a:	9314      	str	r3, [sp, #80]	; 0x50
 800519c:	e7c7      	b.n	800512e <_dtoa_r+0x1ca>
 800519e:	2300      	movs	r3, #0
 80051a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80051a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80051a4:	2b00      	cmp	r3, #0
 80051a6:	dc36      	bgt.n	8005216 <_dtoa_r+0x2b2>
 80051a8:	2301      	movs	r3, #1
 80051aa:	001a      	movs	r2, r3
 80051ac:	930c      	str	r3, [sp, #48]	; 0x30
 80051ae:	9306      	str	r3, [sp, #24]
 80051b0:	9223      	str	r2, [sp, #140]	; 0x8c
 80051b2:	e00d      	b.n	80051d0 <_dtoa_r+0x26c>
 80051b4:	2301      	movs	r3, #1
 80051b6:	e7f3      	b.n	80051a0 <_dtoa_r+0x23c>
 80051b8:	2300      	movs	r3, #0
 80051ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80051bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80051be:	4694      	mov	ip, r2
 80051c0:	9b02      	ldr	r3, [sp, #8]
 80051c2:	4463      	add	r3, ip
 80051c4:	930c      	str	r3, [sp, #48]	; 0x30
 80051c6:	3301      	adds	r3, #1
 80051c8:	9306      	str	r3, [sp, #24]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	dc00      	bgt.n	80051d0 <_dtoa_r+0x26c>
 80051ce:	2301      	movs	r3, #1
 80051d0:	2200      	movs	r2, #0
 80051d2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80051d4:	6042      	str	r2, [r0, #4]
 80051d6:	3204      	adds	r2, #4
 80051d8:	0015      	movs	r5, r2
 80051da:	3514      	adds	r5, #20
 80051dc:	6841      	ldr	r1, [r0, #4]
 80051de:	429d      	cmp	r5, r3
 80051e0:	d91d      	bls.n	800521e <_dtoa_r+0x2ba>
 80051e2:	0038      	movs	r0, r7
 80051e4:	f000 ff3c 	bl	8006060 <_Balloc>
 80051e8:	9005      	str	r0, [sp, #20]
 80051ea:	2800      	cmp	r0, #0
 80051ec:	d11b      	bne.n	8005226 <_dtoa_r+0x2c2>
 80051ee:	21d5      	movs	r1, #213	; 0xd5
 80051f0:	0002      	movs	r2, r0
 80051f2:	4b3c      	ldr	r3, [pc, #240]	; (80052e4 <_dtoa_r+0x380>)
 80051f4:	0049      	lsls	r1, r1, #1
 80051f6:	e6ca      	b.n	8004f8e <_dtoa_r+0x2a>
 80051f8:	2301      	movs	r3, #1
 80051fa:	e7de      	b.n	80051ba <_dtoa_r+0x256>
 80051fc:	2300      	movs	r3, #0
 80051fe:	940f      	str	r4, [sp, #60]	; 0x3c
 8005200:	9322      	str	r3, [sp, #136]	; 0x88
 8005202:	3b01      	subs	r3, #1
 8005204:	930c      	str	r3, [sp, #48]	; 0x30
 8005206:	9306      	str	r3, [sp, #24]
 8005208:	2200      	movs	r2, #0
 800520a:	3313      	adds	r3, #19
 800520c:	e7d0      	b.n	80051b0 <_dtoa_r+0x24c>
 800520e:	2301      	movs	r3, #1
 8005210:	930f      	str	r3, [sp, #60]	; 0x3c
 8005212:	3b02      	subs	r3, #2
 8005214:	e7f6      	b.n	8005204 <_dtoa_r+0x2a0>
 8005216:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005218:	930c      	str	r3, [sp, #48]	; 0x30
 800521a:	9306      	str	r3, [sp, #24]
 800521c:	e7d8      	b.n	80051d0 <_dtoa_r+0x26c>
 800521e:	3101      	adds	r1, #1
 8005220:	6041      	str	r1, [r0, #4]
 8005222:	0052      	lsls	r2, r2, #1
 8005224:	e7d8      	b.n	80051d8 <_dtoa_r+0x274>
 8005226:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005228:	9a05      	ldr	r2, [sp, #20]
 800522a:	601a      	str	r2, [r3, #0]
 800522c:	9b06      	ldr	r3, [sp, #24]
 800522e:	2b0e      	cmp	r3, #14
 8005230:	d900      	bls.n	8005234 <_dtoa_r+0x2d0>
 8005232:	e0eb      	b.n	800540c <_dtoa_r+0x4a8>
 8005234:	2c00      	cmp	r4, #0
 8005236:	d100      	bne.n	800523a <_dtoa_r+0x2d6>
 8005238:	e0e8      	b.n	800540c <_dtoa_r+0x4a8>
 800523a:	9b02      	ldr	r3, [sp, #8]
 800523c:	2b00      	cmp	r3, #0
 800523e:	dd68      	ble.n	8005312 <_dtoa_r+0x3ae>
 8005240:	001a      	movs	r2, r3
 8005242:	210f      	movs	r1, #15
 8005244:	4b23      	ldr	r3, [pc, #140]	; (80052d4 <_dtoa_r+0x370>)
 8005246:	400a      	ands	r2, r1
 8005248:	00d2      	lsls	r2, r2, #3
 800524a:	189b      	adds	r3, r3, r2
 800524c:	681d      	ldr	r5, [r3, #0]
 800524e:	685e      	ldr	r6, [r3, #4]
 8005250:	9b02      	ldr	r3, [sp, #8]
 8005252:	111c      	asrs	r4, r3, #4
 8005254:	2302      	movs	r3, #2
 8005256:	9310      	str	r3, [sp, #64]	; 0x40
 8005258:	9b02      	ldr	r3, [sp, #8]
 800525a:	05db      	lsls	r3, r3, #23
 800525c:	d50b      	bpl.n	8005276 <_dtoa_r+0x312>
 800525e:	4b22      	ldr	r3, [pc, #136]	; (80052e8 <_dtoa_r+0x384>)
 8005260:	400c      	ands	r4, r1
 8005262:	6a1a      	ldr	r2, [r3, #32]
 8005264:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005266:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005268:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800526a:	f7fb fd9b 	bl	8000da4 <__aeabi_ddiv>
 800526e:	2303      	movs	r3, #3
 8005270:	900a      	str	r0, [sp, #40]	; 0x28
 8005272:	910b      	str	r1, [sp, #44]	; 0x2c
 8005274:	9310      	str	r3, [sp, #64]	; 0x40
 8005276:	4b1c      	ldr	r3, [pc, #112]	; (80052e8 <_dtoa_r+0x384>)
 8005278:	9307      	str	r3, [sp, #28]
 800527a:	2c00      	cmp	r4, #0
 800527c:	d136      	bne.n	80052ec <_dtoa_r+0x388>
 800527e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005280:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005282:	002a      	movs	r2, r5
 8005284:	0033      	movs	r3, r6
 8005286:	f7fb fd8d 	bl	8000da4 <__aeabi_ddiv>
 800528a:	900a      	str	r0, [sp, #40]	; 0x28
 800528c:	910b      	str	r1, [sp, #44]	; 0x2c
 800528e:	e05c      	b.n	800534a <_dtoa_r+0x3e6>
 8005290:	08007021 	.word	0x08007021
 8005294:	08007038 	.word	0x08007038
 8005298:	7ff00000 	.word	0x7ff00000
 800529c:	0000270f 	.word	0x0000270f
 80052a0:	0800701d 	.word	0x0800701d
 80052a4:	08007020 	.word	0x08007020
 80052a8:	08006ff0 	.word	0x08006ff0
 80052ac:	08006ff1 	.word	0x08006ff1
 80052b0:	3ff00000 	.word	0x3ff00000
 80052b4:	fffffc01 	.word	0xfffffc01
 80052b8:	3ff80000 	.word	0x3ff80000
 80052bc:	636f4361 	.word	0x636f4361
 80052c0:	3fd287a7 	.word	0x3fd287a7
 80052c4:	8b60c8b3 	.word	0x8b60c8b3
 80052c8:	3fc68a28 	.word	0x3fc68a28
 80052cc:	509f79fb 	.word	0x509f79fb
 80052d0:	3fd34413 	.word	0x3fd34413
 80052d4:	08007190 	.word	0x08007190
 80052d8:	00000432 	.word	0x00000432
 80052dc:	00000412 	.word	0x00000412
 80052e0:	fe100000 	.word	0xfe100000
 80052e4:	08007097 	.word	0x08007097
 80052e8:	08007168 	.word	0x08007168
 80052ec:	2301      	movs	r3, #1
 80052ee:	421c      	tst	r4, r3
 80052f0:	d00b      	beq.n	800530a <_dtoa_r+0x3a6>
 80052f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80052f4:	0028      	movs	r0, r5
 80052f6:	3301      	adds	r3, #1
 80052f8:	9310      	str	r3, [sp, #64]	; 0x40
 80052fa:	9b07      	ldr	r3, [sp, #28]
 80052fc:	0031      	movs	r1, r6
 80052fe:	681a      	ldr	r2, [r3, #0]
 8005300:	685b      	ldr	r3, [r3, #4]
 8005302:	f7fc f955 	bl	80015b0 <__aeabi_dmul>
 8005306:	0005      	movs	r5, r0
 8005308:	000e      	movs	r6, r1
 800530a:	9b07      	ldr	r3, [sp, #28]
 800530c:	1064      	asrs	r4, r4, #1
 800530e:	3308      	adds	r3, #8
 8005310:	e7b2      	b.n	8005278 <_dtoa_r+0x314>
 8005312:	2302      	movs	r3, #2
 8005314:	9310      	str	r3, [sp, #64]	; 0x40
 8005316:	9b02      	ldr	r3, [sp, #8]
 8005318:	2b00      	cmp	r3, #0
 800531a:	d016      	beq.n	800534a <_dtoa_r+0x3e6>
 800531c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800531e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005320:	425c      	negs	r4, r3
 8005322:	230f      	movs	r3, #15
 8005324:	4ab5      	ldr	r2, [pc, #724]	; (80055fc <_dtoa_r+0x698>)
 8005326:	4023      	ands	r3, r4
 8005328:	00db      	lsls	r3, r3, #3
 800532a:	18d3      	adds	r3, r2, r3
 800532c:	681a      	ldr	r2, [r3, #0]
 800532e:	685b      	ldr	r3, [r3, #4]
 8005330:	f7fc f93e 	bl	80015b0 <__aeabi_dmul>
 8005334:	2601      	movs	r6, #1
 8005336:	2300      	movs	r3, #0
 8005338:	900a      	str	r0, [sp, #40]	; 0x28
 800533a:	910b      	str	r1, [sp, #44]	; 0x2c
 800533c:	4db0      	ldr	r5, [pc, #704]	; (8005600 <_dtoa_r+0x69c>)
 800533e:	1124      	asrs	r4, r4, #4
 8005340:	2c00      	cmp	r4, #0
 8005342:	d000      	beq.n	8005346 <_dtoa_r+0x3e2>
 8005344:	e094      	b.n	8005470 <_dtoa_r+0x50c>
 8005346:	2b00      	cmp	r3, #0
 8005348:	d19f      	bne.n	800528a <_dtoa_r+0x326>
 800534a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800534c:	2b00      	cmp	r3, #0
 800534e:	d100      	bne.n	8005352 <_dtoa_r+0x3ee>
 8005350:	e09b      	b.n	800548a <_dtoa_r+0x526>
 8005352:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005354:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005356:	2200      	movs	r2, #0
 8005358:	0020      	movs	r0, r4
 800535a:	0029      	movs	r1, r5
 800535c:	4ba9      	ldr	r3, [pc, #676]	; (8005604 <_dtoa_r+0x6a0>)
 800535e:	f7fb f87b 	bl	8000458 <__aeabi_dcmplt>
 8005362:	2800      	cmp	r0, #0
 8005364:	d100      	bne.n	8005368 <_dtoa_r+0x404>
 8005366:	e090      	b.n	800548a <_dtoa_r+0x526>
 8005368:	9b06      	ldr	r3, [sp, #24]
 800536a:	2b00      	cmp	r3, #0
 800536c:	d100      	bne.n	8005370 <_dtoa_r+0x40c>
 800536e:	e08c      	b.n	800548a <_dtoa_r+0x526>
 8005370:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005372:	2b00      	cmp	r3, #0
 8005374:	dd46      	ble.n	8005404 <_dtoa_r+0x4a0>
 8005376:	9b02      	ldr	r3, [sp, #8]
 8005378:	2200      	movs	r2, #0
 800537a:	0020      	movs	r0, r4
 800537c:	0029      	movs	r1, r5
 800537e:	1e5e      	subs	r6, r3, #1
 8005380:	4ba1      	ldr	r3, [pc, #644]	; (8005608 <_dtoa_r+0x6a4>)
 8005382:	f7fc f915 	bl	80015b0 <__aeabi_dmul>
 8005386:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005388:	900a      	str	r0, [sp, #40]	; 0x28
 800538a:	910b      	str	r1, [sp, #44]	; 0x2c
 800538c:	3301      	adds	r3, #1
 800538e:	9310      	str	r3, [sp, #64]	; 0x40
 8005390:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005392:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005394:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005396:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005398:	9307      	str	r3, [sp, #28]
 800539a:	f7fc ff5b 	bl	8002254 <__aeabi_i2d>
 800539e:	0022      	movs	r2, r4
 80053a0:	002b      	movs	r3, r5
 80053a2:	f7fc f905 	bl	80015b0 <__aeabi_dmul>
 80053a6:	2200      	movs	r2, #0
 80053a8:	4b98      	ldr	r3, [pc, #608]	; (800560c <_dtoa_r+0x6a8>)
 80053aa:	f7fb f991 	bl	80006d0 <__aeabi_dadd>
 80053ae:	9010      	str	r0, [sp, #64]	; 0x40
 80053b0:	9111      	str	r1, [sp, #68]	; 0x44
 80053b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80053b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053b6:	920a      	str	r2, [sp, #40]	; 0x28
 80053b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80053ba:	4a95      	ldr	r2, [pc, #596]	; (8005610 <_dtoa_r+0x6ac>)
 80053bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053be:	4694      	mov	ip, r2
 80053c0:	4463      	add	r3, ip
 80053c2:	9317      	str	r3, [sp, #92]	; 0x5c
 80053c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80053c6:	9b07      	ldr	r3, [sp, #28]
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	d161      	bne.n	8005490 <_dtoa_r+0x52c>
 80053cc:	2200      	movs	r2, #0
 80053ce:	0020      	movs	r0, r4
 80053d0:	0029      	movs	r1, r5
 80053d2:	4b90      	ldr	r3, [pc, #576]	; (8005614 <_dtoa_r+0x6b0>)
 80053d4:	f7fc fb58 	bl	8001a88 <__aeabi_dsub>
 80053d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80053da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80053dc:	0004      	movs	r4, r0
 80053de:	000d      	movs	r5, r1
 80053e0:	f7fb f84e 	bl	8000480 <__aeabi_dcmpgt>
 80053e4:	2800      	cmp	r0, #0
 80053e6:	d000      	beq.n	80053ea <_dtoa_r+0x486>
 80053e8:	e2b5      	b.n	8005956 <_dtoa_r+0x9f2>
 80053ea:	488b      	ldr	r0, [pc, #556]	; (8005618 <_dtoa_r+0x6b4>)
 80053ec:	9911      	ldr	r1, [sp, #68]	; 0x44
 80053ee:	4684      	mov	ip, r0
 80053f0:	4461      	add	r1, ip
 80053f2:	000b      	movs	r3, r1
 80053f4:	0020      	movs	r0, r4
 80053f6:	0029      	movs	r1, r5
 80053f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80053fa:	f7fb f82d 	bl	8000458 <__aeabi_dcmplt>
 80053fe:	2800      	cmp	r0, #0
 8005400:	d000      	beq.n	8005404 <_dtoa_r+0x4a0>
 8005402:	e2a5      	b.n	8005950 <_dtoa_r+0x9ec>
 8005404:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005406:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8005408:	930a      	str	r3, [sp, #40]	; 0x28
 800540a:	940b      	str	r4, [sp, #44]	; 0x2c
 800540c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800540e:	2b00      	cmp	r3, #0
 8005410:	da00      	bge.n	8005414 <_dtoa_r+0x4b0>
 8005412:	e171      	b.n	80056f8 <_dtoa_r+0x794>
 8005414:	9a02      	ldr	r2, [sp, #8]
 8005416:	2a0e      	cmp	r2, #14
 8005418:	dd00      	ble.n	800541c <_dtoa_r+0x4b8>
 800541a:	e16d      	b.n	80056f8 <_dtoa_r+0x794>
 800541c:	4b77      	ldr	r3, [pc, #476]	; (80055fc <_dtoa_r+0x698>)
 800541e:	00d2      	lsls	r2, r2, #3
 8005420:	189b      	adds	r3, r3, r2
 8005422:	685c      	ldr	r4, [r3, #4]
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	9308      	str	r3, [sp, #32]
 8005428:	9409      	str	r4, [sp, #36]	; 0x24
 800542a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800542c:	2b00      	cmp	r3, #0
 800542e:	db00      	blt.n	8005432 <_dtoa_r+0x4ce>
 8005430:	e0f6      	b.n	8005620 <_dtoa_r+0x6bc>
 8005432:	9b06      	ldr	r3, [sp, #24]
 8005434:	2b00      	cmp	r3, #0
 8005436:	dd00      	ble.n	800543a <_dtoa_r+0x4d6>
 8005438:	e0f2      	b.n	8005620 <_dtoa_r+0x6bc>
 800543a:	d000      	beq.n	800543e <_dtoa_r+0x4da>
 800543c:	e288      	b.n	8005950 <_dtoa_r+0x9ec>
 800543e:	9808      	ldr	r0, [sp, #32]
 8005440:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005442:	2200      	movs	r2, #0
 8005444:	4b73      	ldr	r3, [pc, #460]	; (8005614 <_dtoa_r+0x6b0>)
 8005446:	f7fc f8b3 	bl	80015b0 <__aeabi_dmul>
 800544a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800544c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800544e:	f7fb f821 	bl	8000494 <__aeabi_dcmpge>
 8005452:	9e06      	ldr	r6, [sp, #24]
 8005454:	0035      	movs	r5, r6
 8005456:	2800      	cmp	r0, #0
 8005458:	d000      	beq.n	800545c <_dtoa_r+0x4f8>
 800545a:	e25f      	b.n	800591c <_dtoa_r+0x9b8>
 800545c:	9b05      	ldr	r3, [sp, #20]
 800545e:	9a05      	ldr	r2, [sp, #20]
 8005460:	3301      	adds	r3, #1
 8005462:	9307      	str	r3, [sp, #28]
 8005464:	2331      	movs	r3, #49	; 0x31
 8005466:	7013      	strb	r3, [r2, #0]
 8005468:	9b02      	ldr	r3, [sp, #8]
 800546a:	3301      	adds	r3, #1
 800546c:	9302      	str	r3, [sp, #8]
 800546e:	e25a      	b.n	8005926 <_dtoa_r+0x9c2>
 8005470:	4234      	tst	r4, r6
 8005472:	d007      	beq.n	8005484 <_dtoa_r+0x520>
 8005474:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005476:	3301      	adds	r3, #1
 8005478:	9310      	str	r3, [sp, #64]	; 0x40
 800547a:	682a      	ldr	r2, [r5, #0]
 800547c:	686b      	ldr	r3, [r5, #4]
 800547e:	f7fc f897 	bl	80015b0 <__aeabi_dmul>
 8005482:	0033      	movs	r3, r6
 8005484:	1064      	asrs	r4, r4, #1
 8005486:	3508      	adds	r5, #8
 8005488:	e75a      	b.n	8005340 <_dtoa_r+0x3dc>
 800548a:	9e02      	ldr	r6, [sp, #8]
 800548c:	9b06      	ldr	r3, [sp, #24]
 800548e:	e780      	b.n	8005392 <_dtoa_r+0x42e>
 8005490:	9b07      	ldr	r3, [sp, #28]
 8005492:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005494:	1e5a      	subs	r2, r3, #1
 8005496:	4b59      	ldr	r3, [pc, #356]	; (80055fc <_dtoa_r+0x698>)
 8005498:	00d2      	lsls	r2, r2, #3
 800549a:	189b      	adds	r3, r3, r2
 800549c:	681a      	ldr	r2, [r3, #0]
 800549e:	685b      	ldr	r3, [r3, #4]
 80054a0:	2900      	cmp	r1, #0
 80054a2:	d051      	beq.n	8005548 <_dtoa_r+0x5e4>
 80054a4:	2000      	movs	r0, #0
 80054a6:	495d      	ldr	r1, [pc, #372]	; (800561c <_dtoa_r+0x6b8>)
 80054a8:	f7fb fc7c 	bl	8000da4 <__aeabi_ddiv>
 80054ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80054ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80054b0:	f7fc faea 	bl	8001a88 <__aeabi_dsub>
 80054b4:	9a05      	ldr	r2, [sp, #20]
 80054b6:	9b05      	ldr	r3, [sp, #20]
 80054b8:	4694      	mov	ip, r2
 80054ba:	9310      	str	r3, [sp, #64]	; 0x40
 80054bc:	9b07      	ldr	r3, [sp, #28]
 80054be:	900a      	str	r0, [sp, #40]	; 0x28
 80054c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80054c2:	4463      	add	r3, ip
 80054c4:	9319      	str	r3, [sp, #100]	; 0x64
 80054c6:	0029      	movs	r1, r5
 80054c8:	0020      	movs	r0, r4
 80054ca:	f7fc fe8d 	bl	80021e8 <__aeabi_d2iz>
 80054ce:	9017      	str	r0, [sp, #92]	; 0x5c
 80054d0:	f7fc fec0 	bl	8002254 <__aeabi_i2d>
 80054d4:	0002      	movs	r2, r0
 80054d6:	000b      	movs	r3, r1
 80054d8:	0020      	movs	r0, r4
 80054da:	0029      	movs	r1, r5
 80054dc:	f7fc fad4 	bl	8001a88 <__aeabi_dsub>
 80054e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80054e4:	3301      	adds	r3, #1
 80054e6:	9307      	str	r3, [sp, #28]
 80054e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80054ea:	0004      	movs	r4, r0
 80054ec:	3330      	adds	r3, #48	; 0x30
 80054ee:	7013      	strb	r3, [r2, #0]
 80054f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80054f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80054f4:	000d      	movs	r5, r1
 80054f6:	f7fa ffaf 	bl	8000458 <__aeabi_dcmplt>
 80054fa:	2800      	cmp	r0, #0
 80054fc:	d175      	bne.n	80055ea <_dtoa_r+0x686>
 80054fe:	0022      	movs	r2, r4
 8005500:	002b      	movs	r3, r5
 8005502:	2000      	movs	r0, #0
 8005504:	493f      	ldr	r1, [pc, #252]	; (8005604 <_dtoa_r+0x6a0>)
 8005506:	f7fc fabf 	bl	8001a88 <__aeabi_dsub>
 800550a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800550c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800550e:	f7fa ffa3 	bl	8000458 <__aeabi_dcmplt>
 8005512:	2800      	cmp	r0, #0
 8005514:	d000      	beq.n	8005518 <_dtoa_r+0x5b4>
 8005516:	e0d1      	b.n	80056bc <_dtoa_r+0x758>
 8005518:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800551a:	9a07      	ldr	r2, [sp, #28]
 800551c:	4293      	cmp	r3, r2
 800551e:	d100      	bne.n	8005522 <_dtoa_r+0x5be>
 8005520:	e770      	b.n	8005404 <_dtoa_r+0x4a0>
 8005522:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005524:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005526:	2200      	movs	r2, #0
 8005528:	4b37      	ldr	r3, [pc, #220]	; (8005608 <_dtoa_r+0x6a4>)
 800552a:	f7fc f841 	bl	80015b0 <__aeabi_dmul>
 800552e:	4b36      	ldr	r3, [pc, #216]	; (8005608 <_dtoa_r+0x6a4>)
 8005530:	900a      	str	r0, [sp, #40]	; 0x28
 8005532:	910b      	str	r1, [sp, #44]	; 0x2c
 8005534:	2200      	movs	r2, #0
 8005536:	0020      	movs	r0, r4
 8005538:	0029      	movs	r1, r5
 800553a:	f7fc f839 	bl	80015b0 <__aeabi_dmul>
 800553e:	9b07      	ldr	r3, [sp, #28]
 8005540:	0004      	movs	r4, r0
 8005542:	000d      	movs	r5, r1
 8005544:	9310      	str	r3, [sp, #64]	; 0x40
 8005546:	e7be      	b.n	80054c6 <_dtoa_r+0x562>
 8005548:	980a      	ldr	r0, [sp, #40]	; 0x28
 800554a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800554c:	f7fc f830 	bl	80015b0 <__aeabi_dmul>
 8005550:	9a05      	ldr	r2, [sp, #20]
 8005552:	9b05      	ldr	r3, [sp, #20]
 8005554:	4694      	mov	ip, r2
 8005556:	930a      	str	r3, [sp, #40]	; 0x28
 8005558:	9b07      	ldr	r3, [sp, #28]
 800555a:	9010      	str	r0, [sp, #64]	; 0x40
 800555c:	9111      	str	r1, [sp, #68]	; 0x44
 800555e:	4463      	add	r3, ip
 8005560:	9319      	str	r3, [sp, #100]	; 0x64
 8005562:	0029      	movs	r1, r5
 8005564:	0020      	movs	r0, r4
 8005566:	f7fc fe3f 	bl	80021e8 <__aeabi_d2iz>
 800556a:	9017      	str	r0, [sp, #92]	; 0x5c
 800556c:	f7fc fe72 	bl	8002254 <__aeabi_i2d>
 8005570:	0002      	movs	r2, r0
 8005572:	000b      	movs	r3, r1
 8005574:	0020      	movs	r0, r4
 8005576:	0029      	movs	r1, r5
 8005578:	f7fc fa86 	bl	8001a88 <__aeabi_dsub>
 800557c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800557e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005580:	3330      	adds	r3, #48	; 0x30
 8005582:	7013      	strb	r3, [r2, #0]
 8005584:	0013      	movs	r3, r2
 8005586:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005588:	3301      	adds	r3, #1
 800558a:	0004      	movs	r4, r0
 800558c:	000d      	movs	r5, r1
 800558e:	930a      	str	r3, [sp, #40]	; 0x28
 8005590:	4293      	cmp	r3, r2
 8005592:	d12c      	bne.n	80055ee <_dtoa_r+0x68a>
 8005594:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005596:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005598:	9a05      	ldr	r2, [sp, #20]
 800559a:	9b07      	ldr	r3, [sp, #28]
 800559c:	4694      	mov	ip, r2
 800559e:	4463      	add	r3, ip
 80055a0:	2200      	movs	r2, #0
 80055a2:	9307      	str	r3, [sp, #28]
 80055a4:	4b1d      	ldr	r3, [pc, #116]	; (800561c <_dtoa_r+0x6b8>)
 80055a6:	f7fb f893 	bl	80006d0 <__aeabi_dadd>
 80055aa:	0002      	movs	r2, r0
 80055ac:	000b      	movs	r3, r1
 80055ae:	0020      	movs	r0, r4
 80055b0:	0029      	movs	r1, r5
 80055b2:	f7fa ff65 	bl	8000480 <__aeabi_dcmpgt>
 80055b6:	2800      	cmp	r0, #0
 80055b8:	d000      	beq.n	80055bc <_dtoa_r+0x658>
 80055ba:	e07f      	b.n	80056bc <_dtoa_r+0x758>
 80055bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80055be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80055c0:	2000      	movs	r0, #0
 80055c2:	4916      	ldr	r1, [pc, #88]	; (800561c <_dtoa_r+0x6b8>)
 80055c4:	f7fc fa60 	bl	8001a88 <__aeabi_dsub>
 80055c8:	0002      	movs	r2, r0
 80055ca:	000b      	movs	r3, r1
 80055cc:	0020      	movs	r0, r4
 80055ce:	0029      	movs	r1, r5
 80055d0:	f7fa ff42 	bl	8000458 <__aeabi_dcmplt>
 80055d4:	2800      	cmp	r0, #0
 80055d6:	d100      	bne.n	80055da <_dtoa_r+0x676>
 80055d8:	e714      	b.n	8005404 <_dtoa_r+0x4a0>
 80055da:	9b07      	ldr	r3, [sp, #28]
 80055dc:	001a      	movs	r2, r3
 80055de:	3a01      	subs	r2, #1
 80055e0:	9207      	str	r2, [sp, #28]
 80055e2:	7812      	ldrb	r2, [r2, #0]
 80055e4:	2a30      	cmp	r2, #48	; 0x30
 80055e6:	d0f8      	beq.n	80055da <_dtoa_r+0x676>
 80055e8:	9307      	str	r3, [sp, #28]
 80055ea:	9602      	str	r6, [sp, #8]
 80055ec:	e054      	b.n	8005698 <_dtoa_r+0x734>
 80055ee:	2200      	movs	r2, #0
 80055f0:	4b05      	ldr	r3, [pc, #20]	; (8005608 <_dtoa_r+0x6a4>)
 80055f2:	f7fb ffdd 	bl	80015b0 <__aeabi_dmul>
 80055f6:	0004      	movs	r4, r0
 80055f8:	000d      	movs	r5, r1
 80055fa:	e7b2      	b.n	8005562 <_dtoa_r+0x5fe>
 80055fc:	08007190 	.word	0x08007190
 8005600:	08007168 	.word	0x08007168
 8005604:	3ff00000 	.word	0x3ff00000
 8005608:	40240000 	.word	0x40240000
 800560c:	401c0000 	.word	0x401c0000
 8005610:	fcc00000 	.word	0xfcc00000
 8005614:	40140000 	.word	0x40140000
 8005618:	7cc00000 	.word	0x7cc00000
 800561c:	3fe00000 	.word	0x3fe00000
 8005620:	9b06      	ldr	r3, [sp, #24]
 8005622:	9e05      	ldr	r6, [sp, #20]
 8005624:	3b01      	subs	r3, #1
 8005626:	199b      	adds	r3, r3, r6
 8005628:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800562a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800562c:	930a      	str	r3, [sp, #40]	; 0x28
 800562e:	9a08      	ldr	r2, [sp, #32]
 8005630:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005632:	0020      	movs	r0, r4
 8005634:	0029      	movs	r1, r5
 8005636:	f7fb fbb5 	bl	8000da4 <__aeabi_ddiv>
 800563a:	f7fc fdd5 	bl	80021e8 <__aeabi_d2iz>
 800563e:	9006      	str	r0, [sp, #24]
 8005640:	f7fc fe08 	bl	8002254 <__aeabi_i2d>
 8005644:	9a08      	ldr	r2, [sp, #32]
 8005646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005648:	f7fb ffb2 	bl	80015b0 <__aeabi_dmul>
 800564c:	0002      	movs	r2, r0
 800564e:	000b      	movs	r3, r1
 8005650:	0020      	movs	r0, r4
 8005652:	0029      	movs	r1, r5
 8005654:	f7fc fa18 	bl	8001a88 <__aeabi_dsub>
 8005658:	0033      	movs	r3, r6
 800565a:	9a06      	ldr	r2, [sp, #24]
 800565c:	3601      	adds	r6, #1
 800565e:	3230      	adds	r2, #48	; 0x30
 8005660:	701a      	strb	r2, [r3, #0]
 8005662:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005664:	9607      	str	r6, [sp, #28]
 8005666:	429a      	cmp	r2, r3
 8005668:	d139      	bne.n	80056de <_dtoa_r+0x77a>
 800566a:	0002      	movs	r2, r0
 800566c:	000b      	movs	r3, r1
 800566e:	f7fb f82f 	bl	80006d0 <__aeabi_dadd>
 8005672:	9a08      	ldr	r2, [sp, #32]
 8005674:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005676:	0004      	movs	r4, r0
 8005678:	000d      	movs	r5, r1
 800567a:	f7fa ff01 	bl	8000480 <__aeabi_dcmpgt>
 800567e:	2800      	cmp	r0, #0
 8005680:	d11b      	bne.n	80056ba <_dtoa_r+0x756>
 8005682:	9a08      	ldr	r2, [sp, #32]
 8005684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005686:	0020      	movs	r0, r4
 8005688:	0029      	movs	r1, r5
 800568a:	f7fa fedf 	bl	800044c <__aeabi_dcmpeq>
 800568e:	2800      	cmp	r0, #0
 8005690:	d002      	beq.n	8005698 <_dtoa_r+0x734>
 8005692:	9b06      	ldr	r3, [sp, #24]
 8005694:	07db      	lsls	r3, r3, #31
 8005696:	d410      	bmi.n	80056ba <_dtoa_r+0x756>
 8005698:	0038      	movs	r0, r7
 800569a:	9904      	ldr	r1, [sp, #16]
 800569c:	f000 fd24 	bl	80060e8 <_Bfree>
 80056a0:	2300      	movs	r3, #0
 80056a2:	9a07      	ldr	r2, [sp, #28]
 80056a4:	9802      	ldr	r0, [sp, #8]
 80056a6:	7013      	strb	r3, [r2, #0]
 80056a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80056aa:	3001      	adds	r0, #1
 80056ac:	6018      	str	r0, [r3, #0]
 80056ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	d100      	bne.n	80056b6 <_dtoa_r+0x752>
 80056b4:	e4a3      	b.n	8004ffe <_dtoa_r+0x9a>
 80056b6:	601a      	str	r2, [r3, #0]
 80056b8:	e4a1      	b.n	8004ffe <_dtoa_r+0x9a>
 80056ba:	9e02      	ldr	r6, [sp, #8]
 80056bc:	9b07      	ldr	r3, [sp, #28]
 80056be:	9307      	str	r3, [sp, #28]
 80056c0:	3b01      	subs	r3, #1
 80056c2:	781a      	ldrb	r2, [r3, #0]
 80056c4:	2a39      	cmp	r2, #57	; 0x39
 80056c6:	d106      	bne.n	80056d6 <_dtoa_r+0x772>
 80056c8:	9a05      	ldr	r2, [sp, #20]
 80056ca:	429a      	cmp	r2, r3
 80056cc:	d1f7      	bne.n	80056be <_dtoa_r+0x75a>
 80056ce:	2230      	movs	r2, #48	; 0x30
 80056d0:	9905      	ldr	r1, [sp, #20]
 80056d2:	3601      	adds	r6, #1
 80056d4:	700a      	strb	r2, [r1, #0]
 80056d6:	781a      	ldrb	r2, [r3, #0]
 80056d8:	3201      	adds	r2, #1
 80056da:	701a      	strb	r2, [r3, #0]
 80056dc:	e785      	b.n	80055ea <_dtoa_r+0x686>
 80056de:	2200      	movs	r2, #0
 80056e0:	4bad      	ldr	r3, [pc, #692]	; (8005998 <_dtoa_r+0xa34>)
 80056e2:	f7fb ff65 	bl	80015b0 <__aeabi_dmul>
 80056e6:	2200      	movs	r2, #0
 80056e8:	2300      	movs	r3, #0
 80056ea:	0004      	movs	r4, r0
 80056ec:	000d      	movs	r5, r1
 80056ee:	f7fa fead 	bl	800044c <__aeabi_dcmpeq>
 80056f2:	2800      	cmp	r0, #0
 80056f4:	d09b      	beq.n	800562e <_dtoa_r+0x6ca>
 80056f6:	e7cf      	b.n	8005698 <_dtoa_r+0x734>
 80056f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80056fa:	2a00      	cmp	r2, #0
 80056fc:	d100      	bne.n	8005700 <_dtoa_r+0x79c>
 80056fe:	e082      	b.n	8005806 <_dtoa_r+0x8a2>
 8005700:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005702:	2a01      	cmp	r2, #1
 8005704:	dc66      	bgt.n	80057d4 <_dtoa_r+0x870>
 8005706:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8005708:	2a00      	cmp	r2, #0
 800570a:	d05f      	beq.n	80057cc <_dtoa_r+0x868>
 800570c:	4aa3      	ldr	r2, [pc, #652]	; (800599c <_dtoa_r+0xa38>)
 800570e:	189b      	adds	r3, r3, r2
 8005710:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005712:	9c08      	ldr	r4, [sp, #32]
 8005714:	9a08      	ldr	r2, [sp, #32]
 8005716:	2101      	movs	r1, #1
 8005718:	18d2      	adds	r2, r2, r3
 800571a:	9208      	str	r2, [sp, #32]
 800571c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800571e:	0038      	movs	r0, r7
 8005720:	18d3      	adds	r3, r2, r3
 8005722:	930d      	str	r3, [sp, #52]	; 0x34
 8005724:	f000 fd90 	bl	8006248 <__i2b>
 8005728:	0005      	movs	r5, r0
 800572a:	2c00      	cmp	r4, #0
 800572c:	dd0e      	ble.n	800574c <_dtoa_r+0x7e8>
 800572e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005730:	2b00      	cmp	r3, #0
 8005732:	dd0b      	ble.n	800574c <_dtoa_r+0x7e8>
 8005734:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005736:	0023      	movs	r3, r4
 8005738:	4294      	cmp	r4, r2
 800573a:	dd00      	ble.n	800573e <_dtoa_r+0x7da>
 800573c:	0013      	movs	r3, r2
 800573e:	9a08      	ldr	r2, [sp, #32]
 8005740:	1ae4      	subs	r4, r4, r3
 8005742:	1ad2      	subs	r2, r2, r3
 8005744:	9208      	str	r2, [sp, #32]
 8005746:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005748:	1ad3      	subs	r3, r2, r3
 800574a:	930d      	str	r3, [sp, #52]	; 0x34
 800574c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800574e:	2b00      	cmp	r3, #0
 8005750:	d01f      	beq.n	8005792 <_dtoa_r+0x82e>
 8005752:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005754:	2b00      	cmp	r3, #0
 8005756:	d05a      	beq.n	800580e <_dtoa_r+0x8aa>
 8005758:	2e00      	cmp	r6, #0
 800575a:	dd11      	ble.n	8005780 <_dtoa_r+0x81c>
 800575c:	0029      	movs	r1, r5
 800575e:	0032      	movs	r2, r6
 8005760:	0038      	movs	r0, r7
 8005762:	f000 fe37 	bl	80063d4 <__pow5mult>
 8005766:	9a04      	ldr	r2, [sp, #16]
 8005768:	0001      	movs	r1, r0
 800576a:	0005      	movs	r5, r0
 800576c:	0038      	movs	r0, r7
 800576e:	f000 fd81 	bl	8006274 <__multiply>
 8005772:	9904      	ldr	r1, [sp, #16]
 8005774:	9007      	str	r0, [sp, #28]
 8005776:	0038      	movs	r0, r7
 8005778:	f000 fcb6 	bl	80060e8 <_Bfree>
 800577c:	9b07      	ldr	r3, [sp, #28]
 800577e:	9304      	str	r3, [sp, #16]
 8005780:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005782:	1b9a      	subs	r2, r3, r6
 8005784:	42b3      	cmp	r3, r6
 8005786:	d004      	beq.n	8005792 <_dtoa_r+0x82e>
 8005788:	0038      	movs	r0, r7
 800578a:	9904      	ldr	r1, [sp, #16]
 800578c:	f000 fe22 	bl	80063d4 <__pow5mult>
 8005790:	9004      	str	r0, [sp, #16]
 8005792:	2101      	movs	r1, #1
 8005794:	0038      	movs	r0, r7
 8005796:	f000 fd57 	bl	8006248 <__i2b>
 800579a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800579c:	0006      	movs	r6, r0
 800579e:	2b00      	cmp	r3, #0
 80057a0:	dd37      	ble.n	8005812 <_dtoa_r+0x8ae>
 80057a2:	001a      	movs	r2, r3
 80057a4:	0001      	movs	r1, r0
 80057a6:	0038      	movs	r0, r7
 80057a8:	f000 fe14 	bl	80063d4 <__pow5mult>
 80057ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80057ae:	0006      	movs	r6, r0
 80057b0:	2b01      	cmp	r3, #1
 80057b2:	dd33      	ble.n	800581c <_dtoa_r+0x8b8>
 80057b4:	2300      	movs	r3, #0
 80057b6:	9307      	str	r3, [sp, #28]
 80057b8:	6933      	ldr	r3, [r6, #16]
 80057ba:	3303      	adds	r3, #3
 80057bc:	009b      	lsls	r3, r3, #2
 80057be:	18f3      	adds	r3, r6, r3
 80057c0:	6858      	ldr	r0, [r3, #4]
 80057c2:	f000 fcf9 	bl	80061b8 <__hi0bits>
 80057c6:	2320      	movs	r3, #32
 80057c8:	1a18      	subs	r0, r3, r0
 80057ca:	e03f      	b.n	800584c <_dtoa_r+0x8e8>
 80057cc:	2336      	movs	r3, #54	; 0x36
 80057ce:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80057d0:	1a9b      	subs	r3, r3, r2
 80057d2:	e79d      	b.n	8005710 <_dtoa_r+0x7ac>
 80057d4:	9b06      	ldr	r3, [sp, #24]
 80057d6:	1e5e      	subs	r6, r3, #1
 80057d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057da:	42b3      	cmp	r3, r6
 80057dc:	db08      	blt.n	80057f0 <_dtoa_r+0x88c>
 80057de:	1b9e      	subs	r6, r3, r6
 80057e0:	9b06      	ldr	r3, [sp, #24]
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	da0c      	bge.n	8005800 <_dtoa_r+0x89c>
 80057e6:	9b08      	ldr	r3, [sp, #32]
 80057e8:	9a06      	ldr	r2, [sp, #24]
 80057ea:	1a9c      	subs	r4, r3, r2
 80057ec:	2300      	movs	r3, #0
 80057ee:	e791      	b.n	8005714 <_dtoa_r+0x7b0>
 80057f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80057f4:	1af3      	subs	r3, r6, r3
 80057f6:	18d3      	adds	r3, r2, r3
 80057f8:	960e      	str	r6, [sp, #56]	; 0x38
 80057fa:	9314      	str	r3, [sp, #80]	; 0x50
 80057fc:	2600      	movs	r6, #0
 80057fe:	e7ef      	b.n	80057e0 <_dtoa_r+0x87c>
 8005800:	9c08      	ldr	r4, [sp, #32]
 8005802:	9b06      	ldr	r3, [sp, #24]
 8005804:	e786      	b.n	8005714 <_dtoa_r+0x7b0>
 8005806:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005808:	9c08      	ldr	r4, [sp, #32]
 800580a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800580c:	e78d      	b.n	800572a <_dtoa_r+0x7c6>
 800580e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005810:	e7ba      	b.n	8005788 <_dtoa_r+0x824>
 8005812:	2300      	movs	r3, #0
 8005814:	9307      	str	r3, [sp, #28]
 8005816:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005818:	2b01      	cmp	r3, #1
 800581a:	dc13      	bgt.n	8005844 <_dtoa_r+0x8e0>
 800581c:	2300      	movs	r3, #0
 800581e:	9307      	str	r3, [sp, #28]
 8005820:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005822:	2b00      	cmp	r3, #0
 8005824:	d10e      	bne.n	8005844 <_dtoa_r+0x8e0>
 8005826:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005828:	031b      	lsls	r3, r3, #12
 800582a:	d10b      	bne.n	8005844 <_dtoa_r+0x8e0>
 800582c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800582e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005830:	4213      	tst	r3, r2
 8005832:	d007      	beq.n	8005844 <_dtoa_r+0x8e0>
 8005834:	9b08      	ldr	r3, [sp, #32]
 8005836:	3301      	adds	r3, #1
 8005838:	9308      	str	r3, [sp, #32]
 800583a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800583c:	3301      	adds	r3, #1
 800583e:	930d      	str	r3, [sp, #52]	; 0x34
 8005840:	2301      	movs	r3, #1
 8005842:	9307      	str	r3, [sp, #28]
 8005844:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005846:	2001      	movs	r0, #1
 8005848:	2b00      	cmp	r3, #0
 800584a:	d1b5      	bne.n	80057b8 <_dtoa_r+0x854>
 800584c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800584e:	221f      	movs	r2, #31
 8005850:	1818      	adds	r0, r3, r0
 8005852:	0003      	movs	r3, r0
 8005854:	4013      	ands	r3, r2
 8005856:	4210      	tst	r0, r2
 8005858:	d046      	beq.n	80058e8 <_dtoa_r+0x984>
 800585a:	3201      	adds	r2, #1
 800585c:	1ad2      	subs	r2, r2, r3
 800585e:	2a04      	cmp	r2, #4
 8005860:	dd3f      	ble.n	80058e2 <_dtoa_r+0x97e>
 8005862:	221c      	movs	r2, #28
 8005864:	1ad3      	subs	r3, r2, r3
 8005866:	9a08      	ldr	r2, [sp, #32]
 8005868:	18e4      	adds	r4, r4, r3
 800586a:	18d2      	adds	r2, r2, r3
 800586c:	9208      	str	r2, [sp, #32]
 800586e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005870:	18d3      	adds	r3, r2, r3
 8005872:	930d      	str	r3, [sp, #52]	; 0x34
 8005874:	9b08      	ldr	r3, [sp, #32]
 8005876:	2b00      	cmp	r3, #0
 8005878:	dd05      	ble.n	8005886 <_dtoa_r+0x922>
 800587a:	001a      	movs	r2, r3
 800587c:	0038      	movs	r0, r7
 800587e:	9904      	ldr	r1, [sp, #16]
 8005880:	f000 fe04 	bl	800648c <__lshift>
 8005884:	9004      	str	r0, [sp, #16]
 8005886:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005888:	2b00      	cmp	r3, #0
 800588a:	dd05      	ble.n	8005898 <_dtoa_r+0x934>
 800588c:	0031      	movs	r1, r6
 800588e:	001a      	movs	r2, r3
 8005890:	0038      	movs	r0, r7
 8005892:	f000 fdfb 	bl	800648c <__lshift>
 8005896:	0006      	movs	r6, r0
 8005898:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800589a:	2b00      	cmp	r3, #0
 800589c:	d026      	beq.n	80058ec <_dtoa_r+0x988>
 800589e:	0031      	movs	r1, r6
 80058a0:	9804      	ldr	r0, [sp, #16]
 80058a2:	f000 fe63 	bl	800656c <__mcmp>
 80058a6:	2800      	cmp	r0, #0
 80058a8:	da20      	bge.n	80058ec <_dtoa_r+0x988>
 80058aa:	9b02      	ldr	r3, [sp, #8]
 80058ac:	220a      	movs	r2, #10
 80058ae:	3b01      	subs	r3, #1
 80058b0:	9302      	str	r3, [sp, #8]
 80058b2:	0038      	movs	r0, r7
 80058b4:	2300      	movs	r3, #0
 80058b6:	9904      	ldr	r1, [sp, #16]
 80058b8:	f000 fc3a 	bl	8006130 <__multadd>
 80058bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80058be:	9004      	str	r0, [sp, #16]
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d100      	bne.n	80058c6 <_dtoa_r+0x962>
 80058c4:	e160      	b.n	8005b88 <_dtoa_r+0xc24>
 80058c6:	2300      	movs	r3, #0
 80058c8:	0029      	movs	r1, r5
 80058ca:	220a      	movs	r2, #10
 80058cc:	0038      	movs	r0, r7
 80058ce:	f000 fc2f 	bl	8006130 <__multadd>
 80058d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80058d4:	0005      	movs	r5, r0
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	dc47      	bgt.n	800596a <_dtoa_r+0xa06>
 80058da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80058dc:	2b02      	cmp	r3, #2
 80058de:	dc0d      	bgt.n	80058fc <_dtoa_r+0x998>
 80058e0:	e043      	b.n	800596a <_dtoa_r+0xa06>
 80058e2:	2a04      	cmp	r2, #4
 80058e4:	d0c6      	beq.n	8005874 <_dtoa_r+0x910>
 80058e6:	0013      	movs	r3, r2
 80058e8:	331c      	adds	r3, #28
 80058ea:	e7bc      	b.n	8005866 <_dtoa_r+0x902>
 80058ec:	9b06      	ldr	r3, [sp, #24]
 80058ee:	2b00      	cmp	r3, #0
 80058f0:	dc35      	bgt.n	800595e <_dtoa_r+0x9fa>
 80058f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80058f4:	2b02      	cmp	r3, #2
 80058f6:	dd32      	ble.n	800595e <_dtoa_r+0x9fa>
 80058f8:	9b06      	ldr	r3, [sp, #24]
 80058fa:	930c      	str	r3, [sp, #48]	; 0x30
 80058fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d10c      	bne.n	800591c <_dtoa_r+0x9b8>
 8005902:	0031      	movs	r1, r6
 8005904:	2205      	movs	r2, #5
 8005906:	0038      	movs	r0, r7
 8005908:	f000 fc12 	bl	8006130 <__multadd>
 800590c:	0006      	movs	r6, r0
 800590e:	0001      	movs	r1, r0
 8005910:	9804      	ldr	r0, [sp, #16]
 8005912:	f000 fe2b 	bl	800656c <__mcmp>
 8005916:	2800      	cmp	r0, #0
 8005918:	dd00      	ble.n	800591c <_dtoa_r+0x9b8>
 800591a:	e59f      	b.n	800545c <_dtoa_r+0x4f8>
 800591c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800591e:	43db      	mvns	r3, r3
 8005920:	9302      	str	r3, [sp, #8]
 8005922:	9b05      	ldr	r3, [sp, #20]
 8005924:	9307      	str	r3, [sp, #28]
 8005926:	2400      	movs	r4, #0
 8005928:	0031      	movs	r1, r6
 800592a:	0038      	movs	r0, r7
 800592c:	f000 fbdc 	bl	80060e8 <_Bfree>
 8005930:	2d00      	cmp	r5, #0
 8005932:	d100      	bne.n	8005936 <_dtoa_r+0x9d2>
 8005934:	e6b0      	b.n	8005698 <_dtoa_r+0x734>
 8005936:	2c00      	cmp	r4, #0
 8005938:	d005      	beq.n	8005946 <_dtoa_r+0x9e2>
 800593a:	42ac      	cmp	r4, r5
 800593c:	d003      	beq.n	8005946 <_dtoa_r+0x9e2>
 800593e:	0021      	movs	r1, r4
 8005940:	0038      	movs	r0, r7
 8005942:	f000 fbd1 	bl	80060e8 <_Bfree>
 8005946:	0029      	movs	r1, r5
 8005948:	0038      	movs	r0, r7
 800594a:	f000 fbcd 	bl	80060e8 <_Bfree>
 800594e:	e6a3      	b.n	8005698 <_dtoa_r+0x734>
 8005950:	2600      	movs	r6, #0
 8005952:	0035      	movs	r5, r6
 8005954:	e7e2      	b.n	800591c <_dtoa_r+0x9b8>
 8005956:	9602      	str	r6, [sp, #8]
 8005958:	9e07      	ldr	r6, [sp, #28]
 800595a:	0035      	movs	r5, r6
 800595c:	e57e      	b.n	800545c <_dtoa_r+0x4f8>
 800595e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005960:	2b00      	cmp	r3, #0
 8005962:	d100      	bne.n	8005966 <_dtoa_r+0xa02>
 8005964:	e0c8      	b.n	8005af8 <_dtoa_r+0xb94>
 8005966:	9b06      	ldr	r3, [sp, #24]
 8005968:	930c      	str	r3, [sp, #48]	; 0x30
 800596a:	2c00      	cmp	r4, #0
 800596c:	dd05      	ble.n	800597a <_dtoa_r+0xa16>
 800596e:	0029      	movs	r1, r5
 8005970:	0022      	movs	r2, r4
 8005972:	0038      	movs	r0, r7
 8005974:	f000 fd8a 	bl	800648c <__lshift>
 8005978:	0005      	movs	r5, r0
 800597a:	9b07      	ldr	r3, [sp, #28]
 800597c:	0028      	movs	r0, r5
 800597e:	2b00      	cmp	r3, #0
 8005980:	d01f      	beq.n	80059c2 <_dtoa_r+0xa5e>
 8005982:	0038      	movs	r0, r7
 8005984:	6869      	ldr	r1, [r5, #4]
 8005986:	f000 fb6b 	bl	8006060 <_Balloc>
 800598a:	1e04      	subs	r4, r0, #0
 800598c:	d10c      	bne.n	80059a8 <_dtoa_r+0xa44>
 800598e:	0002      	movs	r2, r0
 8005990:	4b03      	ldr	r3, [pc, #12]	; (80059a0 <_dtoa_r+0xa3c>)
 8005992:	4904      	ldr	r1, [pc, #16]	; (80059a4 <_dtoa_r+0xa40>)
 8005994:	f7ff fafb 	bl	8004f8e <_dtoa_r+0x2a>
 8005998:	40240000 	.word	0x40240000
 800599c:	00000433 	.word	0x00000433
 80059a0:	08007097 	.word	0x08007097
 80059a4:	000002ea 	.word	0x000002ea
 80059a8:	0029      	movs	r1, r5
 80059aa:	692b      	ldr	r3, [r5, #16]
 80059ac:	310c      	adds	r1, #12
 80059ae:	1c9a      	adds	r2, r3, #2
 80059b0:	0092      	lsls	r2, r2, #2
 80059b2:	300c      	adds	r0, #12
 80059b4:	f000 fb4b 	bl	800604e <memcpy>
 80059b8:	2201      	movs	r2, #1
 80059ba:	0021      	movs	r1, r4
 80059bc:	0038      	movs	r0, r7
 80059be:	f000 fd65 	bl	800648c <__lshift>
 80059c2:	002c      	movs	r4, r5
 80059c4:	0005      	movs	r5, r0
 80059c6:	9b05      	ldr	r3, [sp, #20]
 80059c8:	9308      	str	r3, [sp, #32]
 80059ca:	0031      	movs	r1, r6
 80059cc:	9804      	ldr	r0, [sp, #16]
 80059ce:	f7ff fa3d 	bl	8004e4c <quorem>
 80059d2:	0003      	movs	r3, r0
 80059d4:	0021      	movs	r1, r4
 80059d6:	3330      	adds	r3, #48	; 0x30
 80059d8:	900e      	str	r0, [sp, #56]	; 0x38
 80059da:	9804      	ldr	r0, [sp, #16]
 80059dc:	9306      	str	r3, [sp, #24]
 80059de:	f000 fdc5 	bl	800656c <__mcmp>
 80059e2:	002a      	movs	r2, r5
 80059e4:	900f      	str	r0, [sp, #60]	; 0x3c
 80059e6:	0031      	movs	r1, r6
 80059e8:	0038      	movs	r0, r7
 80059ea:	f000 fddb 	bl	80065a4 <__mdiff>
 80059ee:	68c3      	ldr	r3, [r0, #12]
 80059f0:	9007      	str	r0, [sp, #28]
 80059f2:	9310      	str	r3, [sp, #64]	; 0x40
 80059f4:	2301      	movs	r3, #1
 80059f6:	930d      	str	r3, [sp, #52]	; 0x34
 80059f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d104      	bne.n	8005a08 <_dtoa_r+0xaa4>
 80059fe:	0001      	movs	r1, r0
 8005a00:	9804      	ldr	r0, [sp, #16]
 8005a02:	f000 fdb3 	bl	800656c <__mcmp>
 8005a06:	900d      	str	r0, [sp, #52]	; 0x34
 8005a08:	0038      	movs	r0, r7
 8005a0a:	9907      	ldr	r1, [sp, #28]
 8005a0c:	f000 fb6c 	bl	80060e8 <_Bfree>
 8005a10:	2301      	movs	r3, #1
 8005a12:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005a14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005a16:	4018      	ands	r0, r3
 8005a18:	9b08      	ldr	r3, [sp, #32]
 8005a1a:	3301      	adds	r3, #1
 8005a1c:	9307      	str	r3, [sp, #28]
 8005a1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005a20:	4313      	orrs	r3, r2
 8005a22:	4303      	orrs	r3, r0
 8005a24:	d10c      	bne.n	8005a40 <_dtoa_r+0xadc>
 8005a26:	9b06      	ldr	r3, [sp, #24]
 8005a28:	2b39      	cmp	r3, #57	; 0x39
 8005a2a:	d025      	beq.n	8005a78 <_dtoa_r+0xb14>
 8005a2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	dd02      	ble.n	8005a38 <_dtoa_r+0xad4>
 8005a32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a34:	3331      	adds	r3, #49	; 0x31
 8005a36:	9306      	str	r3, [sp, #24]
 8005a38:	9b08      	ldr	r3, [sp, #32]
 8005a3a:	9a06      	ldr	r2, [sp, #24]
 8005a3c:	701a      	strb	r2, [r3, #0]
 8005a3e:	e773      	b.n	8005928 <_dtoa_r+0x9c4>
 8005a40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	db03      	blt.n	8005a4e <_dtoa_r+0xaea>
 8005a46:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005a48:	4313      	orrs	r3, r2
 8005a4a:	4303      	orrs	r3, r0
 8005a4c:	d11f      	bne.n	8005a8e <_dtoa_r+0xb2a>
 8005a4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	ddf1      	ble.n	8005a38 <_dtoa_r+0xad4>
 8005a54:	9904      	ldr	r1, [sp, #16]
 8005a56:	2201      	movs	r2, #1
 8005a58:	0038      	movs	r0, r7
 8005a5a:	f000 fd17 	bl	800648c <__lshift>
 8005a5e:	0031      	movs	r1, r6
 8005a60:	9004      	str	r0, [sp, #16]
 8005a62:	f000 fd83 	bl	800656c <__mcmp>
 8005a66:	2800      	cmp	r0, #0
 8005a68:	dc03      	bgt.n	8005a72 <_dtoa_r+0xb0e>
 8005a6a:	d1e5      	bne.n	8005a38 <_dtoa_r+0xad4>
 8005a6c:	9b06      	ldr	r3, [sp, #24]
 8005a6e:	07db      	lsls	r3, r3, #31
 8005a70:	d5e2      	bpl.n	8005a38 <_dtoa_r+0xad4>
 8005a72:	9b06      	ldr	r3, [sp, #24]
 8005a74:	2b39      	cmp	r3, #57	; 0x39
 8005a76:	d1dc      	bne.n	8005a32 <_dtoa_r+0xace>
 8005a78:	2339      	movs	r3, #57	; 0x39
 8005a7a:	9a08      	ldr	r2, [sp, #32]
 8005a7c:	7013      	strb	r3, [r2, #0]
 8005a7e:	9b07      	ldr	r3, [sp, #28]
 8005a80:	9307      	str	r3, [sp, #28]
 8005a82:	3b01      	subs	r3, #1
 8005a84:	781a      	ldrb	r2, [r3, #0]
 8005a86:	2a39      	cmp	r2, #57	; 0x39
 8005a88:	d06c      	beq.n	8005b64 <_dtoa_r+0xc00>
 8005a8a:	3201      	adds	r2, #1
 8005a8c:	e7d6      	b.n	8005a3c <_dtoa_r+0xad8>
 8005a8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	dd07      	ble.n	8005aa4 <_dtoa_r+0xb40>
 8005a94:	9b06      	ldr	r3, [sp, #24]
 8005a96:	2b39      	cmp	r3, #57	; 0x39
 8005a98:	d0ee      	beq.n	8005a78 <_dtoa_r+0xb14>
 8005a9a:	9b06      	ldr	r3, [sp, #24]
 8005a9c:	9a08      	ldr	r2, [sp, #32]
 8005a9e:	3301      	adds	r3, #1
 8005aa0:	7013      	strb	r3, [r2, #0]
 8005aa2:	e741      	b.n	8005928 <_dtoa_r+0x9c4>
 8005aa4:	9b08      	ldr	r3, [sp, #32]
 8005aa6:	9a06      	ldr	r2, [sp, #24]
 8005aa8:	701a      	strb	r2, [r3, #0]
 8005aaa:	2301      	movs	r3, #1
 8005aac:	9a05      	ldr	r2, [sp, #20]
 8005aae:	1a9b      	subs	r3, r3, r2
 8005ab0:	9a08      	ldr	r2, [sp, #32]
 8005ab2:	189b      	adds	r3, r3, r2
 8005ab4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005ab6:	429a      	cmp	r2, r3
 8005ab8:	d03e      	beq.n	8005b38 <_dtoa_r+0xbd4>
 8005aba:	2300      	movs	r3, #0
 8005abc:	220a      	movs	r2, #10
 8005abe:	9904      	ldr	r1, [sp, #16]
 8005ac0:	0038      	movs	r0, r7
 8005ac2:	f000 fb35 	bl	8006130 <__multadd>
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	9004      	str	r0, [sp, #16]
 8005aca:	220a      	movs	r2, #10
 8005acc:	0021      	movs	r1, r4
 8005ace:	0038      	movs	r0, r7
 8005ad0:	42ac      	cmp	r4, r5
 8005ad2:	d106      	bne.n	8005ae2 <_dtoa_r+0xb7e>
 8005ad4:	f000 fb2c 	bl	8006130 <__multadd>
 8005ad8:	0004      	movs	r4, r0
 8005ada:	0005      	movs	r5, r0
 8005adc:	9b07      	ldr	r3, [sp, #28]
 8005ade:	9308      	str	r3, [sp, #32]
 8005ae0:	e773      	b.n	80059ca <_dtoa_r+0xa66>
 8005ae2:	f000 fb25 	bl	8006130 <__multadd>
 8005ae6:	0029      	movs	r1, r5
 8005ae8:	0004      	movs	r4, r0
 8005aea:	2300      	movs	r3, #0
 8005aec:	220a      	movs	r2, #10
 8005aee:	0038      	movs	r0, r7
 8005af0:	f000 fb1e 	bl	8006130 <__multadd>
 8005af4:	0005      	movs	r5, r0
 8005af6:	e7f1      	b.n	8005adc <_dtoa_r+0xb78>
 8005af8:	9b06      	ldr	r3, [sp, #24]
 8005afa:	930c      	str	r3, [sp, #48]	; 0x30
 8005afc:	2400      	movs	r4, #0
 8005afe:	0031      	movs	r1, r6
 8005b00:	9804      	ldr	r0, [sp, #16]
 8005b02:	f7ff f9a3 	bl	8004e4c <quorem>
 8005b06:	9b05      	ldr	r3, [sp, #20]
 8005b08:	3030      	adds	r0, #48	; 0x30
 8005b0a:	5518      	strb	r0, [r3, r4]
 8005b0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b0e:	3401      	adds	r4, #1
 8005b10:	9006      	str	r0, [sp, #24]
 8005b12:	42a3      	cmp	r3, r4
 8005b14:	dd07      	ble.n	8005b26 <_dtoa_r+0xbc2>
 8005b16:	2300      	movs	r3, #0
 8005b18:	220a      	movs	r2, #10
 8005b1a:	0038      	movs	r0, r7
 8005b1c:	9904      	ldr	r1, [sp, #16]
 8005b1e:	f000 fb07 	bl	8006130 <__multadd>
 8005b22:	9004      	str	r0, [sp, #16]
 8005b24:	e7eb      	b.n	8005afe <_dtoa_r+0xb9a>
 8005b26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b28:	2001      	movs	r0, #1
 8005b2a:	2b00      	cmp	r3, #0
 8005b2c:	dd00      	ble.n	8005b30 <_dtoa_r+0xbcc>
 8005b2e:	0018      	movs	r0, r3
 8005b30:	2400      	movs	r4, #0
 8005b32:	9b05      	ldr	r3, [sp, #20]
 8005b34:	181b      	adds	r3, r3, r0
 8005b36:	9307      	str	r3, [sp, #28]
 8005b38:	9904      	ldr	r1, [sp, #16]
 8005b3a:	2201      	movs	r2, #1
 8005b3c:	0038      	movs	r0, r7
 8005b3e:	f000 fca5 	bl	800648c <__lshift>
 8005b42:	0031      	movs	r1, r6
 8005b44:	9004      	str	r0, [sp, #16]
 8005b46:	f000 fd11 	bl	800656c <__mcmp>
 8005b4a:	2800      	cmp	r0, #0
 8005b4c:	dc97      	bgt.n	8005a7e <_dtoa_r+0xb1a>
 8005b4e:	d102      	bne.n	8005b56 <_dtoa_r+0xbf2>
 8005b50:	9b06      	ldr	r3, [sp, #24]
 8005b52:	07db      	lsls	r3, r3, #31
 8005b54:	d493      	bmi.n	8005a7e <_dtoa_r+0xb1a>
 8005b56:	9b07      	ldr	r3, [sp, #28]
 8005b58:	9307      	str	r3, [sp, #28]
 8005b5a:	3b01      	subs	r3, #1
 8005b5c:	781a      	ldrb	r2, [r3, #0]
 8005b5e:	2a30      	cmp	r2, #48	; 0x30
 8005b60:	d0fa      	beq.n	8005b58 <_dtoa_r+0xbf4>
 8005b62:	e6e1      	b.n	8005928 <_dtoa_r+0x9c4>
 8005b64:	9a05      	ldr	r2, [sp, #20]
 8005b66:	429a      	cmp	r2, r3
 8005b68:	d18a      	bne.n	8005a80 <_dtoa_r+0xb1c>
 8005b6a:	9b02      	ldr	r3, [sp, #8]
 8005b6c:	3301      	adds	r3, #1
 8005b6e:	9302      	str	r3, [sp, #8]
 8005b70:	2331      	movs	r3, #49	; 0x31
 8005b72:	e795      	b.n	8005aa0 <_dtoa_r+0xb3c>
 8005b74:	4b08      	ldr	r3, [pc, #32]	; (8005b98 <_dtoa_r+0xc34>)
 8005b76:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005b78:	9305      	str	r3, [sp, #20]
 8005b7a:	4b08      	ldr	r3, [pc, #32]	; (8005b9c <_dtoa_r+0xc38>)
 8005b7c:	2a00      	cmp	r2, #0
 8005b7e:	d001      	beq.n	8005b84 <_dtoa_r+0xc20>
 8005b80:	f7ff fa3b 	bl	8004ffa <_dtoa_r+0x96>
 8005b84:	f7ff fa3b 	bl	8004ffe <_dtoa_r+0x9a>
 8005b88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	dcb6      	bgt.n	8005afc <_dtoa_r+0xb98>
 8005b8e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005b90:	2b02      	cmp	r3, #2
 8005b92:	dd00      	ble.n	8005b96 <_dtoa_r+0xc32>
 8005b94:	e6b2      	b.n	80058fc <_dtoa_r+0x998>
 8005b96:	e7b1      	b.n	8005afc <_dtoa_r+0xb98>
 8005b98:	08007014 	.word	0x08007014
 8005b9c:	0800701c 	.word	0x0800701c

08005ba0 <__sflush_r>:
 8005ba0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ba2:	898b      	ldrh	r3, [r1, #12]
 8005ba4:	0005      	movs	r5, r0
 8005ba6:	000c      	movs	r4, r1
 8005ba8:	071a      	lsls	r2, r3, #28
 8005baa:	d45f      	bmi.n	8005c6c <__sflush_r+0xcc>
 8005bac:	684a      	ldr	r2, [r1, #4]
 8005bae:	2a00      	cmp	r2, #0
 8005bb0:	dc04      	bgt.n	8005bbc <__sflush_r+0x1c>
 8005bb2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8005bb4:	2a00      	cmp	r2, #0
 8005bb6:	dc01      	bgt.n	8005bbc <__sflush_r+0x1c>
 8005bb8:	2000      	movs	r0, #0
 8005bba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005bbc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8005bbe:	2f00      	cmp	r7, #0
 8005bc0:	d0fa      	beq.n	8005bb8 <__sflush_r+0x18>
 8005bc2:	2200      	movs	r2, #0
 8005bc4:	2180      	movs	r1, #128	; 0x80
 8005bc6:	682e      	ldr	r6, [r5, #0]
 8005bc8:	602a      	str	r2, [r5, #0]
 8005bca:	001a      	movs	r2, r3
 8005bcc:	0149      	lsls	r1, r1, #5
 8005bce:	400a      	ands	r2, r1
 8005bd0:	420b      	tst	r3, r1
 8005bd2:	d034      	beq.n	8005c3e <__sflush_r+0x9e>
 8005bd4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005bd6:	89a3      	ldrh	r3, [r4, #12]
 8005bd8:	075b      	lsls	r3, r3, #29
 8005bda:	d506      	bpl.n	8005bea <__sflush_r+0x4a>
 8005bdc:	6863      	ldr	r3, [r4, #4]
 8005bde:	1ac0      	subs	r0, r0, r3
 8005be0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005be2:	2b00      	cmp	r3, #0
 8005be4:	d001      	beq.n	8005bea <__sflush_r+0x4a>
 8005be6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005be8:	1ac0      	subs	r0, r0, r3
 8005bea:	0002      	movs	r2, r0
 8005bec:	6a21      	ldr	r1, [r4, #32]
 8005bee:	2300      	movs	r3, #0
 8005bf0:	0028      	movs	r0, r5
 8005bf2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8005bf4:	47b8      	blx	r7
 8005bf6:	89a1      	ldrh	r1, [r4, #12]
 8005bf8:	1c43      	adds	r3, r0, #1
 8005bfa:	d106      	bne.n	8005c0a <__sflush_r+0x6a>
 8005bfc:	682b      	ldr	r3, [r5, #0]
 8005bfe:	2b1d      	cmp	r3, #29
 8005c00:	d831      	bhi.n	8005c66 <__sflush_r+0xc6>
 8005c02:	4a2c      	ldr	r2, [pc, #176]	; (8005cb4 <__sflush_r+0x114>)
 8005c04:	40da      	lsrs	r2, r3
 8005c06:	07d3      	lsls	r3, r2, #31
 8005c08:	d52d      	bpl.n	8005c66 <__sflush_r+0xc6>
 8005c0a:	2300      	movs	r3, #0
 8005c0c:	6063      	str	r3, [r4, #4]
 8005c0e:	6923      	ldr	r3, [r4, #16]
 8005c10:	6023      	str	r3, [r4, #0]
 8005c12:	04cb      	lsls	r3, r1, #19
 8005c14:	d505      	bpl.n	8005c22 <__sflush_r+0x82>
 8005c16:	1c43      	adds	r3, r0, #1
 8005c18:	d102      	bne.n	8005c20 <__sflush_r+0x80>
 8005c1a:	682b      	ldr	r3, [r5, #0]
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d100      	bne.n	8005c22 <__sflush_r+0x82>
 8005c20:	6560      	str	r0, [r4, #84]	; 0x54
 8005c22:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005c24:	602e      	str	r6, [r5, #0]
 8005c26:	2900      	cmp	r1, #0
 8005c28:	d0c6      	beq.n	8005bb8 <__sflush_r+0x18>
 8005c2a:	0023      	movs	r3, r4
 8005c2c:	3344      	adds	r3, #68	; 0x44
 8005c2e:	4299      	cmp	r1, r3
 8005c30:	d002      	beq.n	8005c38 <__sflush_r+0x98>
 8005c32:	0028      	movs	r0, r5
 8005c34:	f000 fdc0 	bl	80067b8 <_free_r>
 8005c38:	2000      	movs	r0, #0
 8005c3a:	6360      	str	r0, [r4, #52]	; 0x34
 8005c3c:	e7bd      	b.n	8005bba <__sflush_r+0x1a>
 8005c3e:	2301      	movs	r3, #1
 8005c40:	0028      	movs	r0, r5
 8005c42:	6a21      	ldr	r1, [r4, #32]
 8005c44:	47b8      	blx	r7
 8005c46:	1c43      	adds	r3, r0, #1
 8005c48:	d1c5      	bne.n	8005bd6 <__sflush_r+0x36>
 8005c4a:	682b      	ldr	r3, [r5, #0]
 8005c4c:	2b00      	cmp	r3, #0
 8005c4e:	d0c2      	beq.n	8005bd6 <__sflush_r+0x36>
 8005c50:	2b1d      	cmp	r3, #29
 8005c52:	d001      	beq.n	8005c58 <__sflush_r+0xb8>
 8005c54:	2b16      	cmp	r3, #22
 8005c56:	d101      	bne.n	8005c5c <__sflush_r+0xbc>
 8005c58:	602e      	str	r6, [r5, #0]
 8005c5a:	e7ad      	b.n	8005bb8 <__sflush_r+0x18>
 8005c5c:	2340      	movs	r3, #64	; 0x40
 8005c5e:	89a2      	ldrh	r2, [r4, #12]
 8005c60:	4313      	orrs	r3, r2
 8005c62:	81a3      	strh	r3, [r4, #12]
 8005c64:	e7a9      	b.n	8005bba <__sflush_r+0x1a>
 8005c66:	2340      	movs	r3, #64	; 0x40
 8005c68:	430b      	orrs	r3, r1
 8005c6a:	e7fa      	b.n	8005c62 <__sflush_r+0xc2>
 8005c6c:	690f      	ldr	r7, [r1, #16]
 8005c6e:	2f00      	cmp	r7, #0
 8005c70:	d0a2      	beq.n	8005bb8 <__sflush_r+0x18>
 8005c72:	680a      	ldr	r2, [r1, #0]
 8005c74:	600f      	str	r7, [r1, #0]
 8005c76:	1bd2      	subs	r2, r2, r7
 8005c78:	9201      	str	r2, [sp, #4]
 8005c7a:	2200      	movs	r2, #0
 8005c7c:	079b      	lsls	r3, r3, #30
 8005c7e:	d100      	bne.n	8005c82 <__sflush_r+0xe2>
 8005c80:	694a      	ldr	r2, [r1, #20]
 8005c82:	60a2      	str	r2, [r4, #8]
 8005c84:	9b01      	ldr	r3, [sp, #4]
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	dc00      	bgt.n	8005c8c <__sflush_r+0xec>
 8005c8a:	e795      	b.n	8005bb8 <__sflush_r+0x18>
 8005c8c:	003a      	movs	r2, r7
 8005c8e:	0028      	movs	r0, r5
 8005c90:	9b01      	ldr	r3, [sp, #4]
 8005c92:	6a21      	ldr	r1, [r4, #32]
 8005c94:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005c96:	47b0      	blx	r6
 8005c98:	2800      	cmp	r0, #0
 8005c9a:	dc06      	bgt.n	8005caa <__sflush_r+0x10a>
 8005c9c:	2340      	movs	r3, #64	; 0x40
 8005c9e:	2001      	movs	r0, #1
 8005ca0:	89a2      	ldrh	r2, [r4, #12]
 8005ca2:	4240      	negs	r0, r0
 8005ca4:	4313      	orrs	r3, r2
 8005ca6:	81a3      	strh	r3, [r4, #12]
 8005ca8:	e787      	b.n	8005bba <__sflush_r+0x1a>
 8005caa:	9b01      	ldr	r3, [sp, #4]
 8005cac:	183f      	adds	r7, r7, r0
 8005cae:	1a1b      	subs	r3, r3, r0
 8005cb0:	9301      	str	r3, [sp, #4]
 8005cb2:	e7e7      	b.n	8005c84 <__sflush_r+0xe4>
 8005cb4:	20400001 	.word	0x20400001

08005cb8 <_fflush_r>:
 8005cb8:	690b      	ldr	r3, [r1, #16]
 8005cba:	b570      	push	{r4, r5, r6, lr}
 8005cbc:	0005      	movs	r5, r0
 8005cbe:	000c      	movs	r4, r1
 8005cc0:	2b00      	cmp	r3, #0
 8005cc2:	d102      	bne.n	8005cca <_fflush_r+0x12>
 8005cc4:	2500      	movs	r5, #0
 8005cc6:	0028      	movs	r0, r5
 8005cc8:	bd70      	pop	{r4, r5, r6, pc}
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d004      	beq.n	8005cd8 <_fflush_r+0x20>
 8005cce:	6983      	ldr	r3, [r0, #24]
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	d101      	bne.n	8005cd8 <_fflush_r+0x20>
 8005cd4:	f000 f892 	bl	8005dfc <__sinit>
 8005cd8:	4b14      	ldr	r3, [pc, #80]	; (8005d2c <_fflush_r+0x74>)
 8005cda:	429c      	cmp	r4, r3
 8005cdc:	d11b      	bne.n	8005d16 <_fflush_r+0x5e>
 8005cde:	686c      	ldr	r4, [r5, #4]
 8005ce0:	220c      	movs	r2, #12
 8005ce2:	5ea3      	ldrsh	r3, [r4, r2]
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d0ed      	beq.n	8005cc4 <_fflush_r+0xc>
 8005ce8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005cea:	07d2      	lsls	r2, r2, #31
 8005cec:	d404      	bmi.n	8005cf8 <_fflush_r+0x40>
 8005cee:	059b      	lsls	r3, r3, #22
 8005cf0:	d402      	bmi.n	8005cf8 <_fflush_r+0x40>
 8005cf2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005cf4:	f000 f927 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8005cf8:	0028      	movs	r0, r5
 8005cfa:	0021      	movs	r1, r4
 8005cfc:	f7ff ff50 	bl	8005ba0 <__sflush_r>
 8005d00:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005d02:	0005      	movs	r5, r0
 8005d04:	07db      	lsls	r3, r3, #31
 8005d06:	d4de      	bmi.n	8005cc6 <_fflush_r+0xe>
 8005d08:	89a3      	ldrh	r3, [r4, #12]
 8005d0a:	059b      	lsls	r3, r3, #22
 8005d0c:	d4db      	bmi.n	8005cc6 <_fflush_r+0xe>
 8005d0e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005d10:	f000 f91a 	bl	8005f48 <__retarget_lock_release_recursive>
 8005d14:	e7d7      	b.n	8005cc6 <_fflush_r+0xe>
 8005d16:	4b06      	ldr	r3, [pc, #24]	; (8005d30 <_fflush_r+0x78>)
 8005d18:	429c      	cmp	r4, r3
 8005d1a:	d101      	bne.n	8005d20 <_fflush_r+0x68>
 8005d1c:	68ac      	ldr	r4, [r5, #8]
 8005d1e:	e7df      	b.n	8005ce0 <_fflush_r+0x28>
 8005d20:	4b04      	ldr	r3, [pc, #16]	; (8005d34 <_fflush_r+0x7c>)
 8005d22:	429c      	cmp	r4, r3
 8005d24:	d1dc      	bne.n	8005ce0 <_fflush_r+0x28>
 8005d26:	68ec      	ldr	r4, [r5, #12]
 8005d28:	e7da      	b.n	8005ce0 <_fflush_r+0x28>
 8005d2a:	46c0      	nop			; (mov r8, r8)
 8005d2c:	080070c8 	.word	0x080070c8
 8005d30:	080070e8 	.word	0x080070e8
 8005d34:	080070a8 	.word	0x080070a8

08005d38 <std>:
 8005d38:	2300      	movs	r3, #0
 8005d3a:	b510      	push	{r4, lr}
 8005d3c:	0004      	movs	r4, r0
 8005d3e:	6003      	str	r3, [r0, #0]
 8005d40:	6043      	str	r3, [r0, #4]
 8005d42:	6083      	str	r3, [r0, #8]
 8005d44:	8181      	strh	r1, [r0, #12]
 8005d46:	6643      	str	r3, [r0, #100]	; 0x64
 8005d48:	0019      	movs	r1, r3
 8005d4a:	81c2      	strh	r2, [r0, #14]
 8005d4c:	6103      	str	r3, [r0, #16]
 8005d4e:	6143      	str	r3, [r0, #20]
 8005d50:	6183      	str	r3, [r0, #24]
 8005d52:	2208      	movs	r2, #8
 8005d54:	305c      	adds	r0, #92	; 0x5c
 8005d56:	f7fe faad 	bl	80042b4 <memset>
 8005d5a:	4b05      	ldr	r3, [pc, #20]	; (8005d70 <std+0x38>)
 8005d5c:	6263      	str	r3, [r4, #36]	; 0x24
 8005d5e:	4b05      	ldr	r3, [pc, #20]	; (8005d74 <std+0x3c>)
 8005d60:	6224      	str	r4, [r4, #32]
 8005d62:	62a3      	str	r3, [r4, #40]	; 0x28
 8005d64:	4b04      	ldr	r3, [pc, #16]	; (8005d78 <std+0x40>)
 8005d66:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005d68:	4b04      	ldr	r3, [pc, #16]	; (8005d7c <std+0x44>)
 8005d6a:	6323      	str	r3, [r4, #48]	; 0x30
 8005d6c:	bd10      	pop	{r4, pc}
 8005d6e:	46c0      	nop			; (mov r8, r8)
 8005d70:	0800692d 	.word	0x0800692d
 8005d74:	08006955 	.word	0x08006955
 8005d78:	0800698d 	.word	0x0800698d
 8005d7c:	080069b9 	.word	0x080069b9

08005d80 <_cleanup_r>:
 8005d80:	b510      	push	{r4, lr}
 8005d82:	4902      	ldr	r1, [pc, #8]	; (8005d8c <_cleanup_r+0xc>)
 8005d84:	f000 f8ba 	bl	8005efc <_fwalk_reent>
 8005d88:	bd10      	pop	{r4, pc}
 8005d8a:	46c0      	nop			; (mov r8, r8)
 8005d8c:	08005cb9 	.word	0x08005cb9

08005d90 <__sfmoreglue>:
 8005d90:	b570      	push	{r4, r5, r6, lr}
 8005d92:	2568      	movs	r5, #104	; 0x68
 8005d94:	1e4a      	subs	r2, r1, #1
 8005d96:	4355      	muls	r5, r2
 8005d98:	000e      	movs	r6, r1
 8005d9a:	0029      	movs	r1, r5
 8005d9c:	3174      	adds	r1, #116	; 0x74
 8005d9e:	f000 fd55 	bl	800684c <_malloc_r>
 8005da2:	1e04      	subs	r4, r0, #0
 8005da4:	d008      	beq.n	8005db8 <__sfmoreglue+0x28>
 8005da6:	2100      	movs	r1, #0
 8005da8:	002a      	movs	r2, r5
 8005daa:	6001      	str	r1, [r0, #0]
 8005dac:	6046      	str	r6, [r0, #4]
 8005dae:	300c      	adds	r0, #12
 8005db0:	60a0      	str	r0, [r4, #8]
 8005db2:	3268      	adds	r2, #104	; 0x68
 8005db4:	f7fe fa7e 	bl	80042b4 <memset>
 8005db8:	0020      	movs	r0, r4
 8005dba:	bd70      	pop	{r4, r5, r6, pc}

08005dbc <__sfp_lock_acquire>:
 8005dbc:	b510      	push	{r4, lr}
 8005dbe:	4802      	ldr	r0, [pc, #8]	; (8005dc8 <__sfp_lock_acquire+0xc>)
 8005dc0:	f000 f8c1 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8005dc4:	bd10      	pop	{r4, pc}
 8005dc6:	46c0      	nop			; (mov r8, r8)
 8005dc8:	20000294 	.word	0x20000294

08005dcc <__sfp_lock_release>:
 8005dcc:	b510      	push	{r4, lr}
 8005dce:	4802      	ldr	r0, [pc, #8]	; (8005dd8 <__sfp_lock_release+0xc>)
 8005dd0:	f000 f8ba 	bl	8005f48 <__retarget_lock_release_recursive>
 8005dd4:	bd10      	pop	{r4, pc}
 8005dd6:	46c0      	nop			; (mov r8, r8)
 8005dd8:	20000294 	.word	0x20000294

08005ddc <__sinit_lock_acquire>:
 8005ddc:	b510      	push	{r4, lr}
 8005dde:	4802      	ldr	r0, [pc, #8]	; (8005de8 <__sinit_lock_acquire+0xc>)
 8005de0:	f000 f8b1 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8005de4:	bd10      	pop	{r4, pc}
 8005de6:	46c0      	nop			; (mov r8, r8)
 8005de8:	2000028f 	.word	0x2000028f

08005dec <__sinit_lock_release>:
 8005dec:	b510      	push	{r4, lr}
 8005dee:	4802      	ldr	r0, [pc, #8]	; (8005df8 <__sinit_lock_release+0xc>)
 8005df0:	f000 f8aa 	bl	8005f48 <__retarget_lock_release_recursive>
 8005df4:	bd10      	pop	{r4, pc}
 8005df6:	46c0      	nop			; (mov r8, r8)
 8005df8:	2000028f 	.word	0x2000028f

08005dfc <__sinit>:
 8005dfc:	b513      	push	{r0, r1, r4, lr}
 8005dfe:	0004      	movs	r4, r0
 8005e00:	f7ff ffec 	bl	8005ddc <__sinit_lock_acquire>
 8005e04:	69a3      	ldr	r3, [r4, #24]
 8005e06:	2b00      	cmp	r3, #0
 8005e08:	d002      	beq.n	8005e10 <__sinit+0x14>
 8005e0a:	f7ff ffef 	bl	8005dec <__sinit_lock_release>
 8005e0e:	bd13      	pop	{r0, r1, r4, pc}
 8005e10:	64a3      	str	r3, [r4, #72]	; 0x48
 8005e12:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005e14:	6523      	str	r3, [r4, #80]	; 0x50
 8005e16:	4b13      	ldr	r3, [pc, #76]	; (8005e64 <__sinit+0x68>)
 8005e18:	4a13      	ldr	r2, [pc, #76]	; (8005e68 <__sinit+0x6c>)
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	62a2      	str	r2, [r4, #40]	; 0x28
 8005e1e:	9301      	str	r3, [sp, #4]
 8005e20:	42a3      	cmp	r3, r4
 8005e22:	d101      	bne.n	8005e28 <__sinit+0x2c>
 8005e24:	2301      	movs	r3, #1
 8005e26:	61a3      	str	r3, [r4, #24]
 8005e28:	0020      	movs	r0, r4
 8005e2a:	f000 f81f 	bl	8005e6c <__sfp>
 8005e2e:	6060      	str	r0, [r4, #4]
 8005e30:	0020      	movs	r0, r4
 8005e32:	f000 f81b 	bl	8005e6c <__sfp>
 8005e36:	60a0      	str	r0, [r4, #8]
 8005e38:	0020      	movs	r0, r4
 8005e3a:	f000 f817 	bl	8005e6c <__sfp>
 8005e3e:	2200      	movs	r2, #0
 8005e40:	2104      	movs	r1, #4
 8005e42:	60e0      	str	r0, [r4, #12]
 8005e44:	6860      	ldr	r0, [r4, #4]
 8005e46:	f7ff ff77 	bl	8005d38 <std>
 8005e4a:	2201      	movs	r2, #1
 8005e4c:	2109      	movs	r1, #9
 8005e4e:	68a0      	ldr	r0, [r4, #8]
 8005e50:	f7ff ff72 	bl	8005d38 <std>
 8005e54:	2202      	movs	r2, #2
 8005e56:	2112      	movs	r1, #18
 8005e58:	68e0      	ldr	r0, [r4, #12]
 8005e5a:	f7ff ff6d 	bl	8005d38 <std>
 8005e5e:	2301      	movs	r3, #1
 8005e60:	61a3      	str	r3, [r4, #24]
 8005e62:	e7d2      	b.n	8005e0a <__sinit+0xe>
 8005e64:	08006fdc 	.word	0x08006fdc
 8005e68:	08005d81 	.word	0x08005d81

08005e6c <__sfp>:
 8005e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e6e:	0007      	movs	r7, r0
 8005e70:	f7ff ffa4 	bl	8005dbc <__sfp_lock_acquire>
 8005e74:	4b1f      	ldr	r3, [pc, #124]	; (8005ef4 <__sfp+0x88>)
 8005e76:	681e      	ldr	r6, [r3, #0]
 8005e78:	69b3      	ldr	r3, [r6, #24]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d102      	bne.n	8005e84 <__sfp+0x18>
 8005e7e:	0030      	movs	r0, r6
 8005e80:	f7ff ffbc 	bl	8005dfc <__sinit>
 8005e84:	3648      	adds	r6, #72	; 0x48
 8005e86:	68b4      	ldr	r4, [r6, #8]
 8005e88:	6873      	ldr	r3, [r6, #4]
 8005e8a:	3b01      	subs	r3, #1
 8005e8c:	d504      	bpl.n	8005e98 <__sfp+0x2c>
 8005e8e:	6833      	ldr	r3, [r6, #0]
 8005e90:	2b00      	cmp	r3, #0
 8005e92:	d022      	beq.n	8005eda <__sfp+0x6e>
 8005e94:	6836      	ldr	r6, [r6, #0]
 8005e96:	e7f6      	b.n	8005e86 <__sfp+0x1a>
 8005e98:	220c      	movs	r2, #12
 8005e9a:	5ea5      	ldrsh	r5, [r4, r2]
 8005e9c:	2d00      	cmp	r5, #0
 8005e9e:	d11a      	bne.n	8005ed6 <__sfp+0x6a>
 8005ea0:	0020      	movs	r0, r4
 8005ea2:	4b15      	ldr	r3, [pc, #84]	; (8005ef8 <__sfp+0x8c>)
 8005ea4:	3058      	adds	r0, #88	; 0x58
 8005ea6:	60e3      	str	r3, [r4, #12]
 8005ea8:	6665      	str	r5, [r4, #100]	; 0x64
 8005eaa:	f000 f84b 	bl	8005f44 <__retarget_lock_init_recursive>
 8005eae:	f7ff ff8d 	bl	8005dcc <__sfp_lock_release>
 8005eb2:	0020      	movs	r0, r4
 8005eb4:	2208      	movs	r2, #8
 8005eb6:	0029      	movs	r1, r5
 8005eb8:	6025      	str	r5, [r4, #0]
 8005eba:	60a5      	str	r5, [r4, #8]
 8005ebc:	6065      	str	r5, [r4, #4]
 8005ebe:	6125      	str	r5, [r4, #16]
 8005ec0:	6165      	str	r5, [r4, #20]
 8005ec2:	61a5      	str	r5, [r4, #24]
 8005ec4:	305c      	adds	r0, #92	; 0x5c
 8005ec6:	f7fe f9f5 	bl	80042b4 <memset>
 8005eca:	6365      	str	r5, [r4, #52]	; 0x34
 8005ecc:	63a5      	str	r5, [r4, #56]	; 0x38
 8005ece:	64a5      	str	r5, [r4, #72]	; 0x48
 8005ed0:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005ed2:	0020      	movs	r0, r4
 8005ed4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005ed6:	3468      	adds	r4, #104	; 0x68
 8005ed8:	e7d7      	b.n	8005e8a <__sfp+0x1e>
 8005eda:	2104      	movs	r1, #4
 8005edc:	0038      	movs	r0, r7
 8005ede:	f7ff ff57 	bl	8005d90 <__sfmoreglue>
 8005ee2:	1e04      	subs	r4, r0, #0
 8005ee4:	6030      	str	r0, [r6, #0]
 8005ee6:	d1d5      	bne.n	8005e94 <__sfp+0x28>
 8005ee8:	f7ff ff70 	bl	8005dcc <__sfp_lock_release>
 8005eec:	230c      	movs	r3, #12
 8005eee:	603b      	str	r3, [r7, #0]
 8005ef0:	e7ef      	b.n	8005ed2 <__sfp+0x66>
 8005ef2:	46c0      	nop			; (mov r8, r8)
 8005ef4:	08006fdc 	.word	0x08006fdc
 8005ef8:	ffff0001 	.word	0xffff0001

08005efc <_fwalk_reent>:
 8005efc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005efe:	0004      	movs	r4, r0
 8005f00:	0006      	movs	r6, r0
 8005f02:	2700      	movs	r7, #0
 8005f04:	9101      	str	r1, [sp, #4]
 8005f06:	3448      	adds	r4, #72	; 0x48
 8005f08:	6863      	ldr	r3, [r4, #4]
 8005f0a:	68a5      	ldr	r5, [r4, #8]
 8005f0c:	9300      	str	r3, [sp, #0]
 8005f0e:	9b00      	ldr	r3, [sp, #0]
 8005f10:	3b01      	subs	r3, #1
 8005f12:	9300      	str	r3, [sp, #0]
 8005f14:	d504      	bpl.n	8005f20 <_fwalk_reent+0x24>
 8005f16:	6824      	ldr	r4, [r4, #0]
 8005f18:	2c00      	cmp	r4, #0
 8005f1a:	d1f5      	bne.n	8005f08 <_fwalk_reent+0xc>
 8005f1c:	0038      	movs	r0, r7
 8005f1e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005f20:	89ab      	ldrh	r3, [r5, #12]
 8005f22:	2b01      	cmp	r3, #1
 8005f24:	d908      	bls.n	8005f38 <_fwalk_reent+0x3c>
 8005f26:	220e      	movs	r2, #14
 8005f28:	5eab      	ldrsh	r3, [r5, r2]
 8005f2a:	3301      	adds	r3, #1
 8005f2c:	d004      	beq.n	8005f38 <_fwalk_reent+0x3c>
 8005f2e:	0029      	movs	r1, r5
 8005f30:	0030      	movs	r0, r6
 8005f32:	9b01      	ldr	r3, [sp, #4]
 8005f34:	4798      	blx	r3
 8005f36:	4307      	orrs	r7, r0
 8005f38:	3568      	adds	r5, #104	; 0x68
 8005f3a:	e7e8      	b.n	8005f0e <_fwalk_reent+0x12>

08005f3c <_localeconv_r>:
 8005f3c:	4800      	ldr	r0, [pc, #0]	; (8005f40 <_localeconv_r+0x4>)
 8005f3e:	4770      	bx	lr
 8005f40:	20000160 	.word	0x20000160

08005f44 <__retarget_lock_init_recursive>:
 8005f44:	4770      	bx	lr

08005f46 <__retarget_lock_acquire_recursive>:
 8005f46:	4770      	bx	lr

08005f48 <__retarget_lock_release_recursive>:
 8005f48:	4770      	bx	lr
	...

08005f4c <__swhatbuf_r>:
 8005f4c:	b570      	push	{r4, r5, r6, lr}
 8005f4e:	000e      	movs	r6, r1
 8005f50:	001d      	movs	r5, r3
 8005f52:	230e      	movs	r3, #14
 8005f54:	5ec9      	ldrsh	r1, [r1, r3]
 8005f56:	0014      	movs	r4, r2
 8005f58:	b096      	sub	sp, #88	; 0x58
 8005f5a:	2900      	cmp	r1, #0
 8005f5c:	da07      	bge.n	8005f6e <__swhatbuf_r+0x22>
 8005f5e:	2300      	movs	r3, #0
 8005f60:	602b      	str	r3, [r5, #0]
 8005f62:	89b3      	ldrh	r3, [r6, #12]
 8005f64:	061b      	lsls	r3, r3, #24
 8005f66:	d411      	bmi.n	8005f8c <__swhatbuf_r+0x40>
 8005f68:	2380      	movs	r3, #128	; 0x80
 8005f6a:	00db      	lsls	r3, r3, #3
 8005f6c:	e00f      	b.n	8005f8e <__swhatbuf_r+0x42>
 8005f6e:	466a      	mov	r2, sp
 8005f70:	f000 fd7c 	bl	8006a6c <_fstat_r>
 8005f74:	2800      	cmp	r0, #0
 8005f76:	dbf2      	blt.n	8005f5e <__swhatbuf_r+0x12>
 8005f78:	23f0      	movs	r3, #240	; 0xf0
 8005f7a:	9901      	ldr	r1, [sp, #4]
 8005f7c:	021b      	lsls	r3, r3, #8
 8005f7e:	4019      	ands	r1, r3
 8005f80:	4b05      	ldr	r3, [pc, #20]	; (8005f98 <__swhatbuf_r+0x4c>)
 8005f82:	18c9      	adds	r1, r1, r3
 8005f84:	424b      	negs	r3, r1
 8005f86:	4159      	adcs	r1, r3
 8005f88:	6029      	str	r1, [r5, #0]
 8005f8a:	e7ed      	b.n	8005f68 <__swhatbuf_r+0x1c>
 8005f8c:	2340      	movs	r3, #64	; 0x40
 8005f8e:	2000      	movs	r0, #0
 8005f90:	6023      	str	r3, [r4, #0]
 8005f92:	b016      	add	sp, #88	; 0x58
 8005f94:	bd70      	pop	{r4, r5, r6, pc}
 8005f96:	46c0      	nop			; (mov r8, r8)
 8005f98:	ffffe000 	.word	0xffffe000

08005f9c <__smakebuf_r>:
 8005f9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005f9e:	2602      	movs	r6, #2
 8005fa0:	898b      	ldrh	r3, [r1, #12]
 8005fa2:	0005      	movs	r5, r0
 8005fa4:	000c      	movs	r4, r1
 8005fa6:	4233      	tst	r3, r6
 8005fa8:	d006      	beq.n	8005fb8 <__smakebuf_r+0x1c>
 8005faa:	0023      	movs	r3, r4
 8005fac:	3347      	adds	r3, #71	; 0x47
 8005fae:	6023      	str	r3, [r4, #0]
 8005fb0:	6123      	str	r3, [r4, #16]
 8005fb2:	2301      	movs	r3, #1
 8005fb4:	6163      	str	r3, [r4, #20]
 8005fb6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8005fb8:	466a      	mov	r2, sp
 8005fba:	ab01      	add	r3, sp, #4
 8005fbc:	f7ff ffc6 	bl	8005f4c <__swhatbuf_r>
 8005fc0:	9900      	ldr	r1, [sp, #0]
 8005fc2:	0007      	movs	r7, r0
 8005fc4:	0028      	movs	r0, r5
 8005fc6:	f000 fc41 	bl	800684c <_malloc_r>
 8005fca:	2800      	cmp	r0, #0
 8005fcc:	d108      	bne.n	8005fe0 <__smakebuf_r+0x44>
 8005fce:	220c      	movs	r2, #12
 8005fd0:	5ea3      	ldrsh	r3, [r4, r2]
 8005fd2:	059a      	lsls	r2, r3, #22
 8005fd4:	d4ef      	bmi.n	8005fb6 <__smakebuf_r+0x1a>
 8005fd6:	2203      	movs	r2, #3
 8005fd8:	4393      	bics	r3, r2
 8005fda:	431e      	orrs	r6, r3
 8005fdc:	81a6      	strh	r6, [r4, #12]
 8005fde:	e7e4      	b.n	8005faa <__smakebuf_r+0xe>
 8005fe0:	4b0f      	ldr	r3, [pc, #60]	; (8006020 <__smakebuf_r+0x84>)
 8005fe2:	62ab      	str	r3, [r5, #40]	; 0x28
 8005fe4:	2380      	movs	r3, #128	; 0x80
 8005fe6:	89a2      	ldrh	r2, [r4, #12]
 8005fe8:	6020      	str	r0, [r4, #0]
 8005fea:	4313      	orrs	r3, r2
 8005fec:	81a3      	strh	r3, [r4, #12]
 8005fee:	9b00      	ldr	r3, [sp, #0]
 8005ff0:	6120      	str	r0, [r4, #16]
 8005ff2:	6163      	str	r3, [r4, #20]
 8005ff4:	9b01      	ldr	r3, [sp, #4]
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d00d      	beq.n	8006016 <__smakebuf_r+0x7a>
 8005ffa:	0028      	movs	r0, r5
 8005ffc:	230e      	movs	r3, #14
 8005ffe:	5ee1      	ldrsh	r1, [r4, r3]
 8006000:	f000 fd46 	bl	8006a90 <_isatty_r>
 8006004:	2800      	cmp	r0, #0
 8006006:	d006      	beq.n	8006016 <__smakebuf_r+0x7a>
 8006008:	2203      	movs	r2, #3
 800600a:	89a3      	ldrh	r3, [r4, #12]
 800600c:	4393      	bics	r3, r2
 800600e:	001a      	movs	r2, r3
 8006010:	2301      	movs	r3, #1
 8006012:	4313      	orrs	r3, r2
 8006014:	81a3      	strh	r3, [r4, #12]
 8006016:	89a0      	ldrh	r0, [r4, #12]
 8006018:	4307      	orrs	r7, r0
 800601a:	81a7      	strh	r7, [r4, #12]
 800601c:	e7cb      	b.n	8005fb6 <__smakebuf_r+0x1a>
 800601e:	46c0      	nop			; (mov r8, r8)
 8006020:	08005d81 	.word	0x08005d81

08006024 <malloc>:
 8006024:	b510      	push	{r4, lr}
 8006026:	4b03      	ldr	r3, [pc, #12]	; (8006034 <malloc+0x10>)
 8006028:	0001      	movs	r1, r0
 800602a:	6818      	ldr	r0, [r3, #0]
 800602c:	f000 fc0e 	bl	800684c <_malloc_r>
 8006030:	bd10      	pop	{r4, pc}
 8006032:	46c0      	nop			; (mov r8, r8)
 8006034:	2000000c 	.word	0x2000000c

08006038 <memchr>:
 8006038:	b2c9      	uxtb	r1, r1
 800603a:	1882      	adds	r2, r0, r2
 800603c:	4290      	cmp	r0, r2
 800603e:	d101      	bne.n	8006044 <memchr+0xc>
 8006040:	2000      	movs	r0, #0
 8006042:	4770      	bx	lr
 8006044:	7803      	ldrb	r3, [r0, #0]
 8006046:	428b      	cmp	r3, r1
 8006048:	d0fb      	beq.n	8006042 <memchr+0xa>
 800604a:	3001      	adds	r0, #1
 800604c:	e7f6      	b.n	800603c <memchr+0x4>

0800604e <memcpy>:
 800604e:	2300      	movs	r3, #0
 8006050:	b510      	push	{r4, lr}
 8006052:	429a      	cmp	r2, r3
 8006054:	d100      	bne.n	8006058 <memcpy+0xa>
 8006056:	bd10      	pop	{r4, pc}
 8006058:	5ccc      	ldrb	r4, [r1, r3]
 800605a:	54c4      	strb	r4, [r0, r3]
 800605c:	3301      	adds	r3, #1
 800605e:	e7f8      	b.n	8006052 <memcpy+0x4>

08006060 <_Balloc>:
 8006060:	b570      	push	{r4, r5, r6, lr}
 8006062:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8006064:	0006      	movs	r6, r0
 8006066:	000c      	movs	r4, r1
 8006068:	2d00      	cmp	r5, #0
 800606a:	d10e      	bne.n	800608a <_Balloc+0x2a>
 800606c:	2010      	movs	r0, #16
 800606e:	f7ff ffd9 	bl	8006024 <malloc>
 8006072:	1e02      	subs	r2, r0, #0
 8006074:	6270      	str	r0, [r6, #36]	; 0x24
 8006076:	d104      	bne.n	8006082 <_Balloc+0x22>
 8006078:	2166      	movs	r1, #102	; 0x66
 800607a:	4b19      	ldr	r3, [pc, #100]	; (80060e0 <_Balloc+0x80>)
 800607c:	4819      	ldr	r0, [pc, #100]	; (80060e4 <_Balloc+0x84>)
 800607e:	f000 fcb5 	bl	80069ec <__assert_func>
 8006082:	6045      	str	r5, [r0, #4]
 8006084:	6085      	str	r5, [r0, #8]
 8006086:	6005      	str	r5, [r0, #0]
 8006088:	60c5      	str	r5, [r0, #12]
 800608a:	6a75      	ldr	r5, [r6, #36]	; 0x24
 800608c:	68eb      	ldr	r3, [r5, #12]
 800608e:	2b00      	cmp	r3, #0
 8006090:	d013      	beq.n	80060ba <_Balloc+0x5a>
 8006092:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8006094:	00a2      	lsls	r2, r4, #2
 8006096:	68db      	ldr	r3, [r3, #12]
 8006098:	189b      	adds	r3, r3, r2
 800609a:	6818      	ldr	r0, [r3, #0]
 800609c:	2800      	cmp	r0, #0
 800609e:	d118      	bne.n	80060d2 <_Balloc+0x72>
 80060a0:	2101      	movs	r1, #1
 80060a2:	000d      	movs	r5, r1
 80060a4:	40a5      	lsls	r5, r4
 80060a6:	1d6a      	adds	r2, r5, #5
 80060a8:	0030      	movs	r0, r6
 80060aa:	0092      	lsls	r2, r2, #2
 80060ac:	f000 fb76 	bl	800679c <_calloc_r>
 80060b0:	2800      	cmp	r0, #0
 80060b2:	d00c      	beq.n	80060ce <_Balloc+0x6e>
 80060b4:	6044      	str	r4, [r0, #4]
 80060b6:	6085      	str	r5, [r0, #8]
 80060b8:	e00d      	b.n	80060d6 <_Balloc+0x76>
 80060ba:	2221      	movs	r2, #33	; 0x21
 80060bc:	2104      	movs	r1, #4
 80060be:	0030      	movs	r0, r6
 80060c0:	f000 fb6c 	bl	800679c <_calloc_r>
 80060c4:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80060c6:	60e8      	str	r0, [r5, #12]
 80060c8:	68db      	ldr	r3, [r3, #12]
 80060ca:	2b00      	cmp	r3, #0
 80060cc:	d1e1      	bne.n	8006092 <_Balloc+0x32>
 80060ce:	2000      	movs	r0, #0
 80060d0:	bd70      	pop	{r4, r5, r6, pc}
 80060d2:	6802      	ldr	r2, [r0, #0]
 80060d4:	601a      	str	r2, [r3, #0]
 80060d6:	2300      	movs	r3, #0
 80060d8:	6103      	str	r3, [r0, #16]
 80060da:	60c3      	str	r3, [r0, #12]
 80060dc:	e7f8      	b.n	80060d0 <_Balloc+0x70>
 80060de:	46c0      	nop			; (mov r8, r8)
 80060e0:	08007021 	.word	0x08007021
 80060e4:	08007108 	.word	0x08007108

080060e8 <_Bfree>:
 80060e8:	b570      	push	{r4, r5, r6, lr}
 80060ea:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80060ec:	0005      	movs	r5, r0
 80060ee:	000c      	movs	r4, r1
 80060f0:	2e00      	cmp	r6, #0
 80060f2:	d10e      	bne.n	8006112 <_Bfree+0x2a>
 80060f4:	2010      	movs	r0, #16
 80060f6:	f7ff ff95 	bl	8006024 <malloc>
 80060fa:	1e02      	subs	r2, r0, #0
 80060fc:	6268      	str	r0, [r5, #36]	; 0x24
 80060fe:	d104      	bne.n	800610a <_Bfree+0x22>
 8006100:	218a      	movs	r1, #138	; 0x8a
 8006102:	4b09      	ldr	r3, [pc, #36]	; (8006128 <_Bfree+0x40>)
 8006104:	4809      	ldr	r0, [pc, #36]	; (800612c <_Bfree+0x44>)
 8006106:	f000 fc71 	bl	80069ec <__assert_func>
 800610a:	6046      	str	r6, [r0, #4]
 800610c:	6086      	str	r6, [r0, #8]
 800610e:	6006      	str	r6, [r0, #0]
 8006110:	60c6      	str	r6, [r0, #12]
 8006112:	2c00      	cmp	r4, #0
 8006114:	d007      	beq.n	8006126 <_Bfree+0x3e>
 8006116:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006118:	6862      	ldr	r2, [r4, #4]
 800611a:	68db      	ldr	r3, [r3, #12]
 800611c:	0092      	lsls	r2, r2, #2
 800611e:	189b      	adds	r3, r3, r2
 8006120:	681a      	ldr	r2, [r3, #0]
 8006122:	6022      	str	r2, [r4, #0]
 8006124:	601c      	str	r4, [r3, #0]
 8006126:	bd70      	pop	{r4, r5, r6, pc}
 8006128:	08007021 	.word	0x08007021
 800612c:	08007108 	.word	0x08007108

08006130 <__multadd>:
 8006130:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006132:	000e      	movs	r6, r1
 8006134:	9001      	str	r0, [sp, #4]
 8006136:	000c      	movs	r4, r1
 8006138:	001d      	movs	r5, r3
 800613a:	2000      	movs	r0, #0
 800613c:	690f      	ldr	r7, [r1, #16]
 800613e:	3614      	adds	r6, #20
 8006140:	6833      	ldr	r3, [r6, #0]
 8006142:	3001      	adds	r0, #1
 8006144:	b299      	uxth	r1, r3
 8006146:	4351      	muls	r1, r2
 8006148:	0c1b      	lsrs	r3, r3, #16
 800614a:	4353      	muls	r3, r2
 800614c:	1949      	adds	r1, r1, r5
 800614e:	0c0d      	lsrs	r5, r1, #16
 8006150:	195b      	adds	r3, r3, r5
 8006152:	0c1d      	lsrs	r5, r3, #16
 8006154:	b289      	uxth	r1, r1
 8006156:	041b      	lsls	r3, r3, #16
 8006158:	185b      	adds	r3, r3, r1
 800615a:	c608      	stmia	r6!, {r3}
 800615c:	4287      	cmp	r7, r0
 800615e:	dcef      	bgt.n	8006140 <__multadd+0x10>
 8006160:	2d00      	cmp	r5, #0
 8006162:	d022      	beq.n	80061aa <__multadd+0x7a>
 8006164:	68a3      	ldr	r3, [r4, #8]
 8006166:	42bb      	cmp	r3, r7
 8006168:	dc19      	bgt.n	800619e <__multadd+0x6e>
 800616a:	6863      	ldr	r3, [r4, #4]
 800616c:	9801      	ldr	r0, [sp, #4]
 800616e:	1c59      	adds	r1, r3, #1
 8006170:	f7ff ff76 	bl	8006060 <_Balloc>
 8006174:	1e06      	subs	r6, r0, #0
 8006176:	d105      	bne.n	8006184 <__multadd+0x54>
 8006178:	0002      	movs	r2, r0
 800617a:	21b5      	movs	r1, #181	; 0xb5
 800617c:	4b0c      	ldr	r3, [pc, #48]	; (80061b0 <__multadd+0x80>)
 800617e:	480d      	ldr	r0, [pc, #52]	; (80061b4 <__multadd+0x84>)
 8006180:	f000 fc34 	bl	80069ec <__assert_func>
 8006184:	0021      	movs	r1, r4
 8006186:	6923      	ldr	r3, [r4, #16]
 8006188:	310c      	adds	r1, #12
 800618a:	1c9a      	adds	r2, r3, #2
 800618c:	0092      	lsls	r2, r2, #2
 800618e:	300c      	adds	r0, #12
 8006190:	f7ff ff5d 	bl	800604e <memcpy>
 8006194:	0021      	movs	r1, r4
 8006196:	9801      	ldr	r0, [sp, #4]
 8006198:	f7ff ffa6 	bl	80060e8 <_Bfree>
 800619c:	0034      	movs	r4, r6
 800619e:	1d3b      	adds	r3, r7, #4
 80061a0:	009b      	lsls	r3, r3, #2
 80061a2:	18e3      	adds	r3, r4, r3
 80061a4:	605d      	str	r5, [r3, #4]
 80061a6:	1c7b      	adds	r3, r7, #1
 80061a8:	6123      	str	r3, [r4, #16]
 80061aa:	0020      	movs	r0, r4
 80061ac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80061ae:	46c0      	nop			; (mov r8, r8)
 80061b0:	08007097 	.word	0x08007097
 80061b4:	08007108 	.word	0x08007108

080061b8 <__hi0bits>:
 80061b8:	0003      	movs	r3, r0
 80061ba:	0c02      	lsrs	r2, r0, #16
 80061bc:	2000      	movs	r0, #0
 80061be:	4282      	cmp	r2, r0
 80061c0:	d101      	bne.n	80061c6 <__hi0bits+0xe>
 80061c2:	041b      	lsls	r3, r3, #16
 80061c4:	3010      	adds	r0, #16
 80061c6:	0e1a      	lsrs	r2, r3, #24
 80061c8:	d101      	bne.n	80061ce <__hi0bits+0x16>
 80061ca:	3008      	adds	r0, #8
 80061cc:	021b      	lsls	r3, r3, #8
 80061ce:	0f1a      	lsrs	r2, r3, #28
 80061d0:	d101      	bne.n	80061d6 <__hi0bits+0x1e>
 80061d2:	3004      	adds	r0, #4
 80061d4:	011b      	lsls	r3, r3, #4
 80061d6:	0f9a      	lsrs	r2, r3, #30
 80061d8:	d101      	bne.n	80061de <__hi0bits+0x26>
 80061da:	3002      	adds	r0, #2
 80061dc:	009b      	lsls	r3, r3, #2
 80061de:	2b00      	cmp	r3, #0
 80061e0:	db03      	blt.n	80061ea <__hi0bits+0x32>
 80061e2:	3001      	adds	r0, #1
 80061e4:	005b      	lsls	r3, r3, #1
 80061e6:	d400      	bmi.n	80061ea <__hi0bits+0x32>
 80061e8:	2020      	movs	r0, #32
 80061ea:	4770      	bx	lr

080061ec <__lo0bits>:
 80061ec:	6803      	ldr	r3, [r0, #0]
 80061ee:	0002      	movs	r2, r0
 80061f0:	2107      	movs	r1, #7
 80061f2:	0018      	movs	r0, r3
 80061f4:	4008      	ands	r0, r1
 80061f6:	420b      	tst	r3, r1
 80061f8:	d00d      	beq.n	8006216 <__lo0bits+0x2a>
 80061fa:	3906      	subs	r1, #6
 80061fc:	2000      	movs	r0, #0
 80061fe:	420b      	tst	r3, r1
 8006200:	d105      	bne.n	800620e <__lo0bits+0x22>
 8006202:	3002      	adds	r0, #2
 8006204:	4203      	tst	r3, r0
 8006206:	d003      	beq.n	8006210 <__lo0bits+0x24>
 8006208:	40cb      	lsrs	r3, r1
 800620a:	0008      	movs	r0, r1
 800620c:	6013      	str	r3, [r2, #0]
 800620e:	4770      	bx	lr
 8006210:	089b      	lsrs	r3, r3, #2
 8006212:	6013      	str	r3, [r2, #0]
 8006214:	e7fb      	b.n	800620e <__lo0bits+0x22>
 8006216:	b299      	uxth	r1, r3
 8006218:	2900      	cmp	r1, #0
 800621a:	d101      	bne.n	8006220 <__lo0bits+0x34>
 800621c:	2010      	movs	r0, #16
 800621e:	0c1b      	lsrs	r3, r3, #16
 8006220:	b2d9      	uxtb	r1, r3
 8006222:	2900      	cmp	r1, #0
 8006224:	d101      	bne.n	800622a <__lo0bits+0x3e>
 8006226:	3008      	adds	r0, #8
 8006228:	0a1b      	lsrs	r3, r3, #8
 800622a:	0719      	lsls	r1, r3, #28
 800622c:	d101      	bne.n	8006232 <__lo0bits+0x46>
 800622e:	3004      	adds	r0, #4
 8006230:	091b      	lsrs	r3, r3, #4
 8006232:	0799      	lsls	r1, r3, #30
 8006234:	d101      	bne.n	800623a <__lo0bits+0x4e>
 8006236:	3002      	adds	r0, #2
 8006238:	089b      	lsrs	r3, r3, #2
 800623a:	07d9      	lsls	r1, r3, #31
 800623c:	d4e9      	bmi.n	8006212 <__lo0bits+0x26>
 800623e:	3001      	adds	r0, #1
 8006240:	085b      	lsrs	r3, r3, #1
 8006242:	d1e6      	bne.n	8006212 <__lo0bits+0x26>
 8006244:	2020      	movs	r0, #32
 8006246:	e7e2      	b.n	800620e <__lo0bits+0x22>

08006248 <__i2b>:
 8006248:	b510      	push	{r4, lr}
 800624a:	000c      	movs	r4, r1
 800624c:	2101      	movs	r1, #1
 800624e:	f7ff ff07 	bl	8006060 <_Balloc>
 8006252:	2800      	cmp	r0, #0
 8006254:	d106      	bne.n	8006264 <__i2b+0x1c>
 8006256:	21a0      	movs	r1, #160	; 0xa0
 8006258:	0002      	movs	r2, r0
 800625a:	4b04      	ldr	r3, [pc, #16]	; (800626c <__i2b+0x24>)
 800625c:	4804      	ldr	r0, [pc, #16]	; (8006270 <__i2b+0x28>)
 800625e:	0049      	lsls	r1, r1, #1
 8006260:	f000 fbc4 	bl	80069ec <__assert_func>
 8006264:	2301      	movs	r3, #1
 8006266:	6144      	str	r4, [r0, #20]
 8006268:	6103      	str	r3, [r0, #16]
 800626a:	bd10      	pop	{r4, pc}
 800626c:	08007097 	.word	0x08007097
 8006270:	08007108 	.word	0x08007108

08006274 <__multiply>:
 8006274:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006276:	690b      	ldr	r3, [r1, #16]
 8006278:	0014      	movs	r4, r2
 800627a:	6912      	ldr	r2, [r2, #16]
 800627c:	000d      	movs	r5, r1
 800627e:	b089      	sub	sp, #36	; 0x24
 8006280:	4293      	cmp	r3, r2
 8006282:	da01      	bge.n	8006288 <__multiply+0x14>
 8006284:	0025      	movs	r5, r4
 8006286:	000c      	movs	r4, r1
 8006288:	692f      	ldr	r7, [r5, #16]
 800628a:	6926      	ldr	r6, [r4, #16]
 800628c:	6869      	ldr	r1, [r5, #4]
 800628e:	19bb      	adds	r3, r7, r6
 8006290:	9302      	str	r3, [sp, #8]
 8006292:	68ab      	ldr	r3, [r5, #8]
 8006294:	19ba      	adds	r2, r7, r6
 8006296:	4293      	cmp	r3, r2
 8006298:	da00      	bge.n	800629c <__multiply+0x28>
 800629a:	3101      	adds	r1, #1
 800629c:	f7ff fee0 	bl	8006060 <_Balloc>
 80062a0:	9001      	str	r0, [sp, #4]
 80062a2:	2800      	cmp	r0, #0
 80062a4:	d106      	bne.n	80062b4 <__multiply+0x40>
 80062a6:	215e      	movs	r1, #94	; 0x5e
 80062a8:	0002      	movs	r2, r0
 80062aa:	4b48      	ldr	r3, [pc, #288]	; (80063cc <__multiply+0x158>)
 80062ac:	4848      	ldr	r0, [pc, #288]	; (80063d0 <__multiply+0x15c>)
 80062ae:	31ff      	adds	r1, #255	; 0xff
 80062b0:	f000 fb9c 	bl	80069ec <__assert_func>
 80062b4:	9b01      	ldr	r3, [sp, #4]
 80062b6:	2200      	movs	r2, #0
 80062b8:	3314      	adds	r3, #20
 80062ba:	469c      	mov	ip, r3
 80062bc:	19bb      	adds	r3, r7, r6
 80062be:	009b      	lsls	r3, r3, #2
 80062c0:	4463      	add	r3, ip
 80062c2:	9303      	str	r3, [sp, #12]
 80062c4:	4663      	mov	r3, ip
 80062c6:	9903      	ldr	r1, [sp, #12]
 80062c8:	428b      	cmp	r3, r1
 80062ca:	d32c      	bcc.n	8006326 <__multiply+0xb2>
 80062cc:	002b      	movs	r3, r5
 80062ce:	0022      	movs	r2, r4
 80062d0:	3314      	adds	r3, #20
 80062d2:	00bf      	lsls	r7, r7, #2
 80062d4:	3214      	adds	r2, #20
 80062d6:	9306      	str	r3, [sp, #24]
 80062d8:	00b6      	lsls	r6, r6, #2
 80062da:	19db      	adds	r3, r3, r7
 80062dc:	9304      	str	r3, [sp, #16]
 80062de:	1993      	adds	r3, r2, r6
 80062e0:	9307      	str	r3, [sp, #28]
 80062e2:	2304      	movs	r3, #4
 80062e4:	9305      	str	r3, [sp, #20]
 80062e6:	002b      	movs	r3, r5
 80062e8:	9904      	ldr	r1, [sp, #16]
 80062ea:	3315      	adds	r3, #21
 80062ec:	9200      	str	r2, [sp, #0]
 80062ee:	4299      	cmp	r1, r3
 80062f0:	d305      	bcc.n	80062fe <__multiply+0x8a>
 80062f2:	1b4b      	subs	r3, r1, r5
 80062f4:	3b15      	subs	r3, #21
 80062f6:	089b      	lsrs	r3, r3, #2
 80062f8:	3301      	adds	r3, #1
 80062fa:	009b      	lsls	r3, r3, #2
 80062fc:	9305      	str	r3, [sp, #20]
 80062fe:	9b07      	ldr	r3, [sp, #28]
 8006300:	9a00      	ldr	r2, [sp, #0]
 8006302:	429a      	cmp	r2, r3
 8006304:	d311      	bcc.n	800632a <__multiply+0xb6>
 8006306:	9b02      	ldr	r3, [sp, #8]
 8006308:	2b00      	cmp	r3, #0
 800630a:	dd06      	ble.n	800631a <__multiply+0xa6>
 800630c:	9b03      	ldr	r3, [sp, #12]
 800630e:	3b04      	subs	r3, #4
 8006310:	9303      	str	r3, [sp, #12]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	9300      	str	r3, [sp, #0]
 8006316:	2b00      	cmp	r3, #0
 8006318:	d054      	beq.n	80063c4 <__multiply+0x150>
 800631a:	9b01      	ldr	r3, [sp, #4]
 800631c:	9a02      	ldr	r2, [sp, #8]
 800631e:	0018      	movs	r0, r3
 8006320:	611a      	str	r2, [r3, #16]
 8006322:	b009      	add	sp, #36	; 0x24
 8006324:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006326:	c304      	stmia	r3!, {r2}
 8006328:	e7cd      	b.n	80062c6 <__multiply+0x52>
 800632a:	9b00      	ldr	r3, [sp, #0]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	b298      	uxth	r0, r3
 8006330:	2800      	cmp	r0, #0
 8006332:	d01c      	beq.n	800636e <__multiply+0xfa>
 8006334:	4667      	mov	r7, ip
 8006336:	2400      	movs	r4, #0
 8006338:	9e06      	ldr	r6, [sp, #24]
 800633a:	ce02      	ldmia	r6!, {r1}
 800633c:	683a      	ldr	r2, [r7, #0]
 800633e:	b28b      	uxth	r3, r1
 8006340:	4343      	muls	r3, r0
 8006342:	0c09      	lsrs	r1, r1, #16
 8006344:	4341      	muls	r1, r0
 8006346:	b292      	uxth	r2, r2
 8006348:	189b      	adds	r3, r3, r2
 800634a:	191b      	adds	r3, r3, r4
 800634c:	000c      	movs	r4, r1
 800634e:	683a      	ldr	r2, [r7, #0]
 8006350:	0c11      	lsrs	r1, r2, #16
 8006352:	1861      	adds	r1, r4, r1
 8006354:	0c1c      	lsrs	r4, r3, #16
 8006356:	1909      	adds	r1, r1, r4
 8006358:	0c0c      	lsrs	r4, r1, #16
 800635a:	b29b      	uxth	r3, r3
 800635c:	0409      	lsls	r1, r1, #16
 800635e:	430b      	orrs	r3, r1
 8006360:	c708      	stmia	r7!, {r3}
 8006362:	9b04      	ldr	r3, [sp, #16]
 8006364:	42b3      	cmp	r3, r6
 8006366:	d8e8      	bhi.n	800633a <__multiply+0xc6>
 8006368:	4663      	mov	r3, ip
 800636a:	9a05      	ldr	r2, [sp, #20]
 800636c:	509c      	str	r4, [r3, r2]
 800636e:	9b00      	ldr	r3, [sp, #0]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	0c1e      	lsrs	r6, r3, #16
 8006374:	d020      	beq.n	80063b8 <__multiply+0x144>
 8006376:	4663      	mov	r3, ip
 8006378:	002c      	movs	r4, r5
 800637a:	4660      	mov	r0, ip
 800637c:	2700      	movs	r7, #0
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	3414      	adds	r4, #20
 8006382:	6822      	ldr	r2, [r4, #0]
 8006384:	b29b      	uxth	r3, r3
 8006386:	b291      	uxth	r1, r2
 8006388:	4371      	muls	r1, r6
 800638a:	6802      	ldr	r2, [r0, #0]
 800638c:	0c12      	lsrs	r2, r2, #16
 800638e:	1889      	adds	r1, r1, r2
 8006390:	19cf      	adds	r7, r1, r7
 8006392:	0439      	lsls	r1, r7, #16
 8006394:	430b      	orrs	r3, r1
 8006396:	6003      	str	r3, [r0, #0]
 8006398:	cc02      	ldmia	r4!, {r1}
 800639a:	6843      	ldr	r3, [r0, #4]
 800639c:	0c09      	lsrs	r1, r1, #16
 800639e:	4371      	muls	r1, r6
 80063a0:	b29b      	uxth	r3, r3
 80063a2:	0c3f      	lsrs	r7, r7, #16
 80063a4:	18cb      	adds	r3, r1, r3
 80063a6:	9a04      	ldr	r2, [sp, #16]
 80063a8:	19db      	adds	r3, r3, r7
 80063aa:	0c1f      	lsrs	r7, r3, #16
 80063ac:	3004      	adds	r0, #4
 80063ae:	42a2      	cmp	r2, r4
 80063b0:	d8e7      	bhi.n	8006382 <__multiply+0x10e>
 80063b2:	4662      	mov	r2, ip
 80063b4:	9905      	ldr	r1, [sp, #20]
 80063b6:	5053      	str	r3, [r2, r1]
 80063b8:	9b00      	ldr	r3, [sp, #0]
 80063ba:	3304      	adds	r3, #4
 80063bc:	9300      	str	r3, [sp, #0]
 80063be:	2304      	movs	r3, #4
 80063c0:	449c      	add	ip, r3
 80063c2:	e79c      	b.n	80062fe <__multiply+0x8a>
 80063c4:	9b02      	ldr	r3, [sp, #8]
 80063c6:	3b01      	subs	r3, #1
 80063c8:	9302      	str	r3, [sp, #8]
 80063ca:	e79c      	b.n	8006306 <__multiply+0x92>
 80063cc:	08007097 	.word	0x08007097
 80063d0:	08007108 	.word	0x08007108

080063d4 <__pow5mult>:
 80063d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80063d6:	2303      	movs	r3, #3
 80063d8:	0015      	movs	r5, r2
 80063da:	0007      	movs	r7, r0
 80063dc:	000e      	movs	r6, r1
 80063de:	401a      	ands	r2, r3
 80063e0:	421d      	tst	r5, r3
 80063e2:	d008      	beq.n	80063f6 <__pow5mult+0x22>
 80063e4:	4925      	ldr	r1, [pc, #148]	; (800647c <__pow5mult+0xa8>)
 80063e6:	3a01      	subs	r2, #1
 80063e8:	0092      	lsls	r2, r2, #2
 80063ea:	5852      	ldr	r2, [r2, r1]
 80063ec:	2300      	movs	r3, #0
 80063ee:	0031      	movs	r1, r6
 80063f0:	f7ff fe9e 	bl	8006130 <__multadd>
 80063f4:	0006      	movs	r6, r0
 80063f6:	10ad      	asrs	r5, r5, #2
 80063f8:	d03d      	beq.n	8006476 <__pow5mult+0xa2>
 80063fa:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80063fc:	2c00      	cmp	r4, #0
 80063fe:	d10f      	bne.n	8006420 <__pow5mult+0x4c>
 8006400:	2010      	movs	r0, #16
 8006402:	f7ff fe0f 	bl	8006024 <malloc>
 8006406:	1e02      	subs	r2, r0, #0
 8006408:	6278      	str	r0, [r7, #36]	; 0x24
 800640a:	d105      	bne.n	8006418 <__pow5mult+0x44>
 800640c:	21d7      	movs	r1, #215	; 0xd7
 800640e:	4b1c      	ldr	r3, [pc, #112]	; (8006480 <__pow5mult+0xac>)
 8006410:	481c      	ldr	r0, [pc, #112]	; (8006484 <__pow5mult+0xb0>)
 8006412:	0049      	lsls	r1, r1, #1
 8006414:	f000 faea 	bl	80069ec <__assert_func>
 8006418:	6044      	str	r4, [r0, #4]
 800641a:	6084      	str	r4, [r0, #8]
 800641c:	6004      	str	r4, [r0, #0]
 800641e:	60c4      	str	r4, [r0, #12]
 8006420:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006422:	689c      	ldr	r4, [r3, #8]
 8006424:	9301      	str	r3, [sp, #4]
 8006426:	2c00      	cmp	r4, #0
 8006428:	d108      	bne.n	800643c <__pow5mult+0x68>
 800642a:	0038      	movs	r0, r7
 800642c:	4916      	ldr	r1, [pc, #88]	; (8006488 <__pow5mult+0xb4>)
 800642e:	f7ff ff0b 	bl	8006248 <__i2b>
 8006432:	9b01      	ldr	r3, [sp, #4]
 8006434:	0004      	movs	r4, r0
 8006436:	6098      	str	r0, [r3, #8]
 8006438:	2300      	movs	r3, #0
 800643a:	6003      	str	r3, [r0, #0]
 800643c:	2301      	movs	r3, #1
 800643e:	421d      	tst	r5, r3
 8006440:	d00a      	beq.n	8006458 <__pow5mult+0x84>
 8006442:	0031      	movs	r1, r6
 8006444:	0022      	movs	r2, r4
 8006446:	0038      	movs	r0, r7
 8006448:	f7ff ff14 	bl	8006274 <__multiply>
 800644c:	0031      	movs	r1, r6
 800644e:	9001      	str	r0, [sp, #4]
 8006450:	0038      	movs	r0, r7
 8006452:	f7ff fe49 	bl	80060e8 <_Bfree>
 8006456:	9e01      	ldr	r6, [sp, #4]
 8006458:	106d      	asrs	r5, r5, #1
 800645a:	d00c      	beq.n	8006476 <__pow5mult+0xa2>
 800645c:	6820      	ldr	r0, [r4, #0]
 800645e:	2800      	cmp	r0, #0
 8006460:	d107      	bne.n	8006472 <__pow5mult+0x9e>
 8006462:	0022      	movs	r2, r4
 8006464:	0021      	movs	r1, r4
 8006466:	0038      	movs	r0, r7
 8006468:	f7ff ff04 	bl	8006274 <__multiply>
 800646c:	2300      	movs	r3, #0
 800646e:	6020      	str	r0, [r4, #0]
 8006470:	6003      	str	r3, [r0, #0]
 8006472:	0004      	movs	r4, r0
 8006474:	e7e2      	b.n	800643c <__pow5mult+0x68>
 8006476:	0030      	movs	r0, r6
 8006478:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800647a:	46c0      	nop			; (mov r8, r8)
 800647c:	08007258 	.word	0x08007258
 8006480:	08007021 	.word	0x08007021
 8006484:	08007108 	.word	0x08007108
 8006488:	00000271 	.word	0x00000271

0800648c <__lshift>:
 800648c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800648e:	000c      	movs	r4, r1
 8006490:	0017      	movs	r7, r2
 8006492:	6923      	ldr	r3, [r4, #16]
 8006494:	1155      	asrs	r5, r2, #5
 8006496:	b087      	sub	sp, #28
 8006498:	18eb      	adds	r3, r5, r3
 800649a:	9302      	str	r3, [sp, #8]
 800649c:	3301      	adds	r3, #1
 800649e:	9301      	str	r3, [sp, #4]
 80064a0:	6849      	ldr	r1, [r1, #4]
 80064a2:	68a3      	ldr	r3, [r4, #8]
 80064a4:	9004      	str	r0, [sp, #16]
 80064a6:	9a01      	ldr	r2, [sp, #4]
 80064a8:	4293      	cmp	r3, r2
 80064aa:	db11      	blt.n	80064d0 <__lshift+0x44>
 80064ac:	9804      	ldr	r0, [sp, #16]
 80064ae:	f7ff fdd7 	bl	8006060 <_Balloc>
 80064b2:	0002      	movs	r2, r0
 80064b4:	2300      	movs	r3, #0
 80064b6:	3214      	adds	r2, #20
 80064b8:	0006      	movs	r6, r0
 80064ba:	0011      	movs	r1, r2
 80064bc:	9203      	str	r2, [sp, #12]
 80064be:	4298      	cmp	r0, r3
 80064c0:	d10d      	bne.n	80064de <__lshift+0x52>
 80064c2:	21da      	movs	r1, #218	; 0xda
 80064c4:	0002      	movs	r2, r0
 80064c6:	4b27      	ldr	r3, [pc, #156]	; (8006564 <__lshift+0xd8>)
 80064c8:	4827      	ldr	r0, [pc, #156]	; (8006568 <__lshift+0xdc>)
 80064ca:	31ff      	adds	r1, #255	; 0xff
 80064cc:	f000 fa8e 	bl	80069ec <__assert_func>
 80064d0:	3101      	adds	r1, #1
 80064d2:	005b      	lsls	r3, r3, #1
 80064d4:	e7e7      	b.n	80064a6 <__lshift+0x1a>
 80064d6:	2200      	movs	r2, #0
 80064d8:	0098      	lsls	r0, r3, #2
 80064da:	500a      	str	r2, [r1, r0]
 80064dc:	3301      	adds	r3, #1
 80064de:	42ab      	cmp	r3, r5
 80064e0:	dbf9      	blt.n	80064d6 <__lshift+0x4a>
 80064e2:	43eb      	mvns	r3, r5
 80064e4:	17db      	asrs	r3, r3, #31
 80064e6:	401d      	ands	r5, r3
 80064e8:	9b03      	ldr	r3, [sp, #12]
 80064ea:	00ad      	lsls	r5, r5, #2
 80064ec:	211f      	movs	r1, #31
 80064ee:	0038      	movs	r0, r7
 80064f0:	195d      	adds	r5, r3, r5
 80064f2:	0023      	movs	r3, r4
 80064f4:	6922      	ldr	r2, [r4, #16]
 80064f6:	3314      	adds	r3, #20
 80064f8:	0092      	lsls	r2, r2, #2
 80064fa:	4008      	ands	r0, r1
 80064fc:	4684      	mov	ip, r0
 80064fe:	189a      	adds	r2, r3, r2
 8006500:	420f      	tst	r7, r1
 8006502:	d02a      	beq.n	800655a <__lshift+0xce>
 8006504:	3101      	adds	r1, #1
 8006506:	1a09      	subs	r1, r1, r0
 8006508:	9105      	str	r1, [sp, #20]
 800650a:	2100      	movs	r1, #0
 800650c:	9503      	str	r5, [sp, #12]
 800650e:	4667      	mov	r7, ip
 8006510:	6818      	ldr	r0, [r3, #0]
 8006512:	40b8      	lsls	r0, r7
 8006514:	4301      	orrs	r1, r0
 8006516:	9803      	ldr	r0, [sp, #12]
 8006518:	c002      	stmia	r0!, {r1}
 800651a:	cb02      	ldmia	r3!, {r1}
 800651c:	9003      	str	r0, [sp, #12]
 800651e:	9805      	ldr	r0, [sp, #20]
 8006520:	40c1      	lsrs	r1, r0
 8006522:	429a      	cmp	r2, r3
 8006524:	d8f3      	bhi.n	800650e <__lshift+0x82>
 8006526:	0020      	movs	r0, r4
 8006528:	3015      	adds	r0, #21
 800652a:	2304      	movs	r3, #4
 800652c:	4282      	cmp	r2, r0
 800652e:	d304      	bcc.n	800653a <__lshift+0xae>
 8006530:	1b13      	subs	r3, r2, r4
 8006532:	3b15      	subs	r3, #21
 8006534:	089b      	lsrs	r3, r3, #2
 8006536:	3301      	adds	r3, #1
 8006538:	009b      	lsls	r3, r3, #2
 800653a:	50e9      	str	r1, [r5, r3]
 800653c:	2900      	cmp	r1, #0
 800653e:	d002      	beq.n	8006546 <__lshift+0xba>
 8006540:	9b02      	ldr	r3, [sp, #8]
 8006542:	3302      	adds	r3, #2
 8006544:	9301      	str	r3, [sp, #4]
 8006546:	9b01      	ldr	r3, [sp, #4]
 8006548:	9804      	ldr	r0, [sp, #16]
 800654a:	3b01      	subs	r3, #1
 800654c:	0021      	movs	r1, r4
 800654e:	6133      	str	r3, [r6, #16]
 8006550:	f7ff fdca 	bl	80060e8 <_Bfree>
 8006554:	0030      	movs	r0, r6
 8006556:	b007      	add	sp, #28
 8006558:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800655a:	cb02      	ldmia	r3!, {r1}
 800655c:	c502      	stmia	r5!, {r1}
 800655e:	429a      	cmp	r2, r3
 8006560:	d8fb      	bhi.n	800655a <__lshift+0xce>
 8006562:	e7f0      	b.n	8006546 <__lshift+0xba>
 8006564:	08007097 	.word	0x08007097
 8006568:	08007108 	.word	0x08007108

0800656c <__mcmp>:
 800656c:	6902      	ldr	r2, [r0, #16]
 800656e:	690b      	ldr	r3, [r1, #16]
 8006570:	b530      	push	{r4, r5, lr}
 8006572:	0004      	movs	r4, r0
 8006574:	1ad0      	subs	r0, r2, r3
 8006576:	429a      	cmp	r2, r3
 8006578:	d10d      	bne.n	8006596 <__mcmp+0x2a>
 800657a:	009b      	lsls	r3, r3, #2
 800657c:	3414      	adds	r4, #20
 800657e:	3114      	adds	r1, #20
 8006580:	18e2      	adds	r2, r4, r3
 8006582:	18c9      	adds	r1, r1, r3
 8006584:	3a04      	subs	r2, #4
 8006586:	3904      	subs	r1, #4
 8006588:	6815      	ldr	r5, [r2, #0]
 800658a:	680b      	ldr	r3, [r1, #0]
 800658c:	429d      	cmp	r5, r3
 800658e:	d003      	beq.n	8006598 <__mcmp+0x2c>
 8006590:	2001      	movs	r0, #1
 8006592:	429d      	cmp	r5, r3
 8006594:	d303      	bcc.n	800659e <__mcmp+0x32>
 8006596:	bd30      	pop	{r4, r5, pc}
 8006598:	4294      	cmp	r4, r2
 800659a:	d3f3      	bcc.n	8006584 <__mcmp+0x18>
 800659c:	e7fb      	b.n	8006596 <__mcmp+0x2a>
 800659e:	4240      	negs	r0, r0
 80065a0:	e7f9      	b.n	8006596 <__mcmp+0x2a>
	...

080065a4 <__mdiff>:
 80065a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065a6:	000e      	movs	r6, r1
 80065a8:	0007      	movs	r7, r0
 80065aa:	0011      	movs	r1, r2
 80065ac:	0030      	movs	r0, r6
 80065ae:	b087      	sub	sp, #28
 80065b0:	0014      	movs	r4, r2
 80065b2:	f7ff ffdb 	bl	800656c <__mcmp>
 80065b6:	1e05      	subs	r5, r0, #0
 80065b8:	d110      	bne.n	80065dc <__mdiff+0x38>
 80065ba:	0001      	movs	r1, r0
 80065bc:	0038      	movs	r0, r7
 80065be:	f7ff fd4f 	bl	8006060 <_Balloc>
 80065c2:	1e02      	subs	r2, r0, #0
 80065c4:	d104      	bne.n	80065d0 <__mdiff+0x2c>
 80065c6:	4b40      	ldr	r3, [pc, #256]	; (80066c8 <__mdiff+0x124>)
 80065c8:	4940      	ldr	r1, [pc, #256]	; (80066cc <__mdiff+0x128>)
 80065ca:	4841      	ldr	r0, [pc, #260]	; (80066d0 <__mdiff+0x12c>)
 80065cc:	f000 fa0e 	bl	80069ec <__assert_func>
 80065d0:	2301      	movs	r3, #1
 80065d2:	6145      	str	r5, [r0, #20]
 80065d4:	6103      	str	r3, [r0, #16]
 80065d6:	0010      	movs	r0, r2
 80065d8:	b007      	add	sp, #28
 80065da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065dc:	2301      	movs	r3, #1
 80065de:	9301      	str	r3, [sp, #4]
 80065e0:	2800      	cmp	r0, #0
 80065e2:	db04      	blt.n	80065ee <__mdiff+0x4a>
 80065e4:	0023      	movs	r3, r4
 80065e6:	0034      	movs	r4, r6
 80065e8:	001e      	movs	r6, r3
 80065ea:	2300      	movs	r3, #0
 80065ec:	9301      	str	r3, [sp, #4]
 80065ee:	0038      	movs	r0, r7
 80065f0:	6861      	ldr	r1, [r4, #4]
 80065f2:	f7ff fd35 	bl	8006060 <_Balloc>
 80065f6:	1e02      	subs	r2, r0, #0
 80065f8:	d103      	bne.n	8006602 <__mdiff+0x5e>
 80065fa:	2190      	movs	r1, #144	; 0x90
 80065fc:	4b32      	ldr	r3, [pc, #200]	; (80066c8 <__mdiff+0x124>)
 80065fe:	0089      	lsls	r1, r1, #2
 8006600:	e7e3      	b.n	80065ca <__mdiff+0x26>
 8006602:	9b01      	ldr	r3, [sp, #4]
 8006604:	2700      	movs	r7, #0
 8006606:	60c3      	str	r3, [r0, #12]
 8006608:	6920      	ldr	r0, [r4, #16]
 800660a:	3414      	adds	r4, #20
 800660c:	9401      	str	r4, [sp, #4]
 800660e:	9b01      	ldr	r3, [sp, #4]
 8006610:	0084      	lsls	r4, r0, #2
 8006612:	191b      	adds	r3, r3, r4
 8006614:	0034      	movs	r4, r6
 8006616:	9302      	str	r3, [sp, #8]
 8006618:	6933      	ldr	r3, [r6, #16]
 800661a:	3414      	adds	r4, #20
 800661c:	0099      	lsls	r1, r3, #2
 800661e:	1863      	adds	r3, r4, r1
 8006620:	9303      	str	r3, [sp, #12]
 8006622:	0013      	movs	r3, r2
 8006624:	3314      	adds	r3, #20
 8006626:	469c      	mov	ip, r3
 8006628:	9305      	str	r3, [sp, #20]
 800662a:	9b01      	ldr	r3, [sp, #4]
 800662c:	9304      	str	r3, [sp, #16]
 800662e:	9b04      	ldr	r3, [sp, #16]
 8006630:	cc02      	ldmia	r4!, {r1}
 8006632:	cb20      	ldmia	r3!, {r5}
 8006634:	9304      	str	r3, [sp, #16]
 8006636:	b2ab      	uxth	r3, r5
 8006638:	19df      	adds	r7, r3, r7
 800663a:	b28b      	uxth	r3, r1
 800663c:	1afb      	subs	r3, r7, r3
 800663e:	0c2d      	lsrs	r5, r5, #16
 8006640:	0c09      	lsrs	r1, r1, #16
 8006642:	1a69      	subs	r1, r5, r1
 8006644:	141d      	asrs	r5, r3, #16
 8006646:	1949      	adds	r1, r1, r5
 8006648:	140f      	asrs	r7, r1, #16
 800664a:	b29b      	uxth	r3, r3
 800664c:	0409      	lsls	r1, r1, #16
 800664e:	430b      	orrs	r3, r1
 8006650:	4661      	mov	r1, ip
 8006652:	c108      	stmia	r1!, {r3}
 8006654:	9b03      	ldr	r3, [sp, #12]
 8006656:	468c      	mov	ip, r1
 8006658:	42a3      	cmp	r3, r4
 800665a:	d8e8      	bhi.n	800662e <__mdiff+0x8a>
 800665c:	0031      	movs	r1, r6
 800665e:	9c03      	ldr	r4, [sp, #12]
 8006660:	3115      	adds	r1, #21
 8006662:	2304      	movs	r3, #4
 8006664:	428c      	cmp	r4, r1
 8006666:	d304      	bcc.n	8006672 <__mdiff+0xce>
 8006668:	1ba3      	subs	r3, r4, r6
 800666a:	3b15      	subs	r3, #21
 800666c:	089b      	lsrs	r3, r3, #2
 800666e:	3301      	adds	r3, #1
 8006670:	009b      	lsls	r3, r3, #2
 8006672:	9901      	ldr	r1, [sp, #4]
 8006674:	18cc      	adds	r4, r1, r3
 8006676:	9905      	ldr	r1, [sp, #20]
 8006678:	0026      	movs	r6, r4
 800667a:	18cb      	adds	r3, r1, r3
 800667c:	469c      	mov	ip, r3
 800667e:	9902      	ldr	r1, [sp, #8]
 8006680:	428e      	cmp	r6, r1
 8006682:	d310      	bcc.n	80066a6 <__mdiff+0x102>
 8006684:	9e02      	ldr	r6, [sp, #8]
 8006686:	1ee5      	subs	r5, r4, #3
 8006688:	2100      	movs	r1, #0
 800668a:	42ae      	cmp	r6, r5
 800668c:	d304      	bcc.n	8006698 <__mdiff+0xf4>
 800668e:	0031      	movs	r1, r6
 8006690:	3103      	adds	r1, #3
 8006692:	1b09      	subs	r1, r1, r4
 8006694:	0889      	lsrs	r1, r1, #2
 8006696:	0089      	lsls	r1, r1, #2
 8006698:	185b      	adds	r3, r3, r1
 800669a:	3b04      	subs	r3, #4
 800669c:	6819      	ldr	r1, [r3, #0]
 800669e:	2900      	cmp	r1, #0
 80066a0:	d00f      	beq.n	80066c2 <__mdiff+0x11e>
 80066a2:	6110      	str	r0, [r2, #16]
 80066a4:	e797      	b.n	80065d6 <__mdiff+0x32>
 80066a6:	ce02      	ldmia	r6!, {r1}
 80066a8:	b28d      	uxth	r5, r1
 80066aa:	19ed      	adds	r5, r5, r7
 80066ac:	0c0f      	lsrs	r7, r1, #16
 80066ae:	1429      	asrs	r1, r5, #16
 80066b0:	1879      	adds	r1, r7, r1
 80066b2:	140f      	asrs	r7, r1, #16
 80066b4:	b2ad      	uxth	r5, r5
 80066b6:	0409      	lsls	r1, r1, #16
 80066b8:	430d      	orrs	r5, r1
 80066ba:	4661      	mov	r1, ip
 80066bc:	c120      	stmia	r1!, {r5}
 80066be:	468c      	mov	ip, r1
 80066c0:	e7dd      	b.n	800667e <__mdiff+0xda>
 80066c2:	3801      	subs	r0, #1
 80066c4:	e7e9      	b.n	800669a <__mdiff+0xf6>
 80066c6:	46c0      	nop			; (mov r8, r8)
 80066c8:	08007097 	.word	0x08007097
 80066cc:	00000232 	.word	0x00000232
 80066d0:	08007108 	.word	0x08007108

080066d4 <__d2b>:
 80066d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066d6:	2101      	movs	r1, #1
 80066d8:	0014      	movs	r4, r2
 80066da:	001e      	movs	r6, r3
 80066dc:	9f08      	ldr	r7, [sp, #32]
 80066de:	f7ff fcbf 	bl	8006060 <_Balloc>
 80066e2:	1e05      	subs	r5, r0, #0
 80066e4:	d105      	bne.n	80066f2 <__d2b+0x1e>
 80066e6:	0002      	movs	r2, r0
 80066e8:	4b26      	ldr	r3, [pc, #152]	; (8006784 <__d2b+0xb0>)
 80066ea:	4927      	ldr	r1, [pc, #156]	; (8006788 <__d2b+0xb4>)
 80066ec:	4827      	ldr	r0, [pc, #156]	; (800678c <__d2b+0xb8>)
 80066ee:	f000 f97d 	bl	80069ec <__assert_func>
 80066f2:	0333      	lsls	r3, r6, #12
 80066f4:	0076      	lsls	r6, r6, #1
 80066f6:	0b1b      	lsrs	r3, r3, #12
 80066f8:	0d76      	lsrs	r6, r6, #21
 80066fa:	d124      	bne.n	8006746 <__d2b+0x72>
 80066fc:	9301      	str	r3, [sp, #4]
 80066fe:	2c00      	cmp	r4, #0
 8006700:	d027      	beq.n	8006752 <__d2b+0x7e>
 8006702:	4668      	mov	r0, sp
 8006704:	9400      	str	r4, [sp, #0]
 8006706:	f7ff fd71 	bl	80061ec <__lo0bits>
 800670a:	9c00      	ldr	r4, [sp, #0]
 800670c:	2800      	cmp	r0, #0
 800670e:	d01e      	beq.n	800674e <__d2b+0x7a>
 8006710:	9b01      	ldr	r3, [sp, #4]
 8006712:	2120      	movs	r1, #32
 8006714:	001a      	movs	r2, r3
 8006716:	1a09      	subs	r1, r1, r0
 8006718:	408a      	lsls	r2, r1
 800671a:	40c3      	lsrs	r3, r0
 800671c:	4322      	orrs	r2, r4
 800671e:	616a      	str	r2, [r5, #20]
 8006720:	9301      	str	r3, [sp, #4]
 8006722:	9c01      	ldr	r4, [sp, #4]
 8006724:	61ac      	str	r4, [r5, #24]
 8006726:	1e63      	subs	r3, r4, #1
 8006728:	419c      	sbcs	r4, r3
 800672a:	3401      	adds	r4, #1
 800672c:	612c      	str	r4, [r5, #16]
 800672e:	2e00      	cmp	r6, #0
 8006730:	d018      	beq.n	8006764 <__d2b+0x90>
 8006732:	4b17      	ldr	r3, [pc, #92]	; (8006790 <__d2b+0xbc>)
 8006734:	18f6      	adds	r6, r6, r3
 8006736:	2335      	movs	r3, #53	; 0x35
 8006738:	1836      	adds	r6, r6, r0
 800673a:	1a18      	subs	r0, r3, r0
 800673c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800673e:	603e      	str	r6, [r7, #0]
 8006740:	6018      	str	r0, [r3, #0]
 8006742:	0028      	movs	r0, r5
 8006744:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006746:	2280      	movs	r2, #128	; 0x80
 8006748:	0352      	lsls	r2, r2, #13
 800674a:	4313      	orrs	r3, r2
 800674c:	e7d6      	b.n	80066fc <__d2b+0x28>
 800674e:	616c      	str	r4, [r5, #20]
 8006750:	e7e7      	b.n	8006722 <__d2b+0x4e>
 8006752:	a801      	add	r0, sp, #4
 8006754:	f7ff fd4a 	bl	80061ec <__lo0bits>
 8006758:	2401      	movs	r4, #1
 800675a:	9b01      	ldr	r3, [sp, #4]
 800675c:	612c      	str	r4, [r5, #16]
 800675e:	616b      	str	r3, [r5, #20]
 8006760:	3020      	adds	r0, #32
 8006762:	e7e4      	b.n	800672e <__d2b+0x5a>
 8006764:	4b0b      	ldr	r3, [pc, #44]	; (8006794 <__d2b+0xc0>)
 8006766:	18c0      	adds	r0, r0, r3
 8006768:	4b0b      	ldr	r3, [pc, #44]	; (8006798 <__d2b+0xc4>)
 800676a:	6038      	str	r0, [r7, #0]
 800676c:	18e3      	adds	r3, r4, r3
 800676e:	009b      	lsls	r3, r3, #2
 8006770:	18eb      	adds	r3, r5, r3
 8006772:	6958      	ldr	r0, [r3, #20]
 8006774:	f7ff fd20 	bl	80061b8 <__hi0bits>
 8006778:	0164      	lsls	r4, r4, #5
 800677a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800677c:	1a24      	subs	r4, r4, r0
 800677e:	601c      	str	r4, [r3, #0]
 8006780:	e7df      	b.n	8006742 <__d2b+0x6e>
 8006782:	46c0      	nop			; (mov r8, r8)
 8006784:	08007097 	.word	0x08007097
 8006788:	0000030a 	.word	0x0000030a
 800678c:	08007108 	.word	0x08007108
 8006790:	fffffbcd 	.word	0xfffffbcd
 8006794:	fffffbce 	.word	0xfffffbce
 8006798:	3fffffff 	.word	0x3fffffff

0800679c <_calloc_r>:
 800679c:	434a      	muls	r2, r1
 800679e:	b570      	push	{r4, r5, r6, lr}
 80067a0:	0011      	movs	r1, r2
 80067a2:	0015      	movs	r5, r2
 80067a4:	f000 f852 	bl	800684c <_malloc_r>
 80067a8:	1e04      	subs	r4, r0, #0
 80067aa:	d003      	beq.n	80067b4 <_calloc_r+0x18>
 80067ac:	002a      	movs	r2, r5
 80067ae:	2100      	movs	r1, #0
 80067b0:	f7fd fd80 	bl	80042b4 <memset>
 80067b4:	0020      	movs	r0, r4
 80067b6:	bd70      	pop	{r4, r5, r6, pc}

080067b8 <_free_r>:
 80067b8:	b570      	push	{r4, r5, r6, lr}
 80067ba:	0005      	movs	r5, r0
 80067bc:	2900      	cmp	r1, #0
 80067be:	d010      	beq.n	80067e2 <_free_r+0x2a>
 80067c0:	1f0c      	subs	r4, r1, #4
 80067c2:	6823      	ldr	r3, [r4, #0]
 80067c4:	2b00      	cmp	r3, #0
 80067c6:	da00      	bge.n	80067ca <_free_r+0x12>
 80067c8:	18e4      	adds	r4, r4, r3
 80067ca:	0028      	movs	r0, r5
 80067cc:	f000 f998 	bl	8006b00 <__malloc_lock>
 80067d0:	4a1d      	ldr	r2, [pc, #116]	; (8006848 <_free_r+0x90>)
 80067d2:	6813      	ldr	r3, [r2, #0]
 80067d4:	2b00      	cmp	r3, #0
 80067d6:	d105      	bne.n	80067e4 <_free_r+0x2c>
 80067d8:	6063      	str	r3, [r4, #4]
 80067da:	6014      	str	r4, [r2, #0]
 80067dc:	0028      	movs	r0, r5
 80067de:	f000 f997 	bl	8006b10 <__malloc_unlock>
 80067e2:	bd70      	pop	{r4, r5, r6, pc}
 80067e4:	42a3      	cmp	r3, r4
 80067e6:	d908      	bls.n	80067fa <_free_r+0x42>
 80067e8:	6821      	ldr	r1, [r4, #0]
 80067ea:	1860      	adds	r0, r4, r1
 80067ec:	4283      	cmp	r3, r0
 80067ee:	d1f3      	bne.n	80067d8 <_free_r+0x20>
 80067f0:	6818      	ldr	r0, [r3, #0]
 80067f2:	685b      	ldr	r3, [r3, #4]
 80067f4:	1841      	adds	r1, r0, r1
 80067f6:	6021      	str	r1, [r4, #0]
 80067f8:	e7ee      	b.n	80067d8 <_free_r+0x20>
 80067fa:	001a      	movs	r2, r3
 80067fc:	685b      	ldr	r3, [r3, #4]
 80067fe:	2b00      	cmp	r3, #0
 8006800:	d001      	beq.n	8006806 <_free_r+0x4e>
 8006802:	42a3      	cmp	r3, r4
 8006804:	d9f9      	bls.n	80067fa <_free_r+0x42>
 8006806:	6811      	ldr	r1, [r2, #0]
 8006808:	1850      	adds	r0, r2, r1
 800680a:	42a0      	cmp	r0, r4
 800680c:	d10b      	bne.n	8006826 <_free_r+0x6e>
 800680e:	6820      	ldr	r0, [r4, #0]
 8006810:	1809      	adds	r1, r1, r0
 8006812:	1850      	adds	r0, r2, r1
 8006814:	6011      	str	r1, [r2, #0]
 8006816:	4283      	cmp	r3, r0
 8006818:	d1e0      	bne.n	80067dc <_free_r+0x24>
 800681a:	6818      	ldr	r0, [r3, #0]
 800681c:	685b      	ldr	r3, [r3, #4]
 800681e:	1841      	adds	r1, r0, r1
 8006820:	6011      	str	r1, [r2, #0]
 8006822:	6053      	str	r3, [r2, #4]
 8006824:	e7da      	b.n	80067dc <_free_r+0x24>
 8006826:	42a0      	cmp	r0, r4
 8006828:	d902      	bls.n	8006830 <_free_r+0x78>
 800682a:	230c      	movs	r3, #12
 800682c:	602b      	str	r3, [r5, #0]
 800682e:	e7d5      	b.n	80067dc <_free_r+0x24>
 8006830:	6821      	ldr	r1, [r4, #0]
 8006832:	1860      	adds	r0, r4, r1
 8006834:	4283      	cmp	r3, r0
 8006836:	d103      	bne.n	8006840 <_free_r+0x88>
 8006838:	6818      	ldr	r0, [r3, #0]
 800683a:	685b      	ldr	r3, [r3, #4]
 800683c:	1841      	adds	r1, r0, r1
 800683e:	6021      	str	r1, [r4, #0]
 8006840:	6063      	str	r3, [r4, #4]
 8006842:	6054      	str	r4, [r2, #4]
 8006844:	e7ca      	b.n	80067dc <_free_r+0x24>
 8006846:	46c0      	nop			; (mov r8, r8)
 8006848:	200001fc 	.word	0x200001fc

0800684c <_malloc_r>:
 800684c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800684e:	2303      	movs	r3, #3
 8006850:	1ccd      	adds	r5, r1, #3
 8006852:	439d      	bics	r5, r3
 8006854:	3508      	adds	r5, #8
 8006856:	0006      	movs	r6, r0
 8006858:	2d0c      	cmp	r5, #12
 800685a:	d21f      	bcs.n	800689c <_malloc_r+0x50>
 800685c:	250c      	movs	r5, #12
 800685e:	42a9      	cmp	r1, r5
 8006860:	d81e      	bhi.n	80068a0 <_malloc_r+0x54>
 8006862:	0030      	movs	r0, r6
 8006864:	f000 f94c 	bl	8006b00 <__malloc_lock>
 8006868:	4925      	ldr	r1, [pc, #148]	; (8006900 <_malloc_r+0xb4>)
 800686a:	680a      	ldr	r2, [r1, #0]
 800686c:	0014      	movs	r4, r2
 800686e:	2c00      	cmp	r4, #0
 8006870:	d11a      	bne.n	80068a8 <_malloc_r+0x5c>
 8006872:	4f24      	ldr	r7, [pc, #144]	; (8006904 <_malloc_r+0xb8>)
 8006874:	683b      	ldr	r3, [r7, #0]
 8006876:	2b00      	cmp	r3, #0
 8006878:	d104      	bne.n	8006884 <_malloc_r+0x38>
 800687a:	0021      	movs	r1, r4
 800687c:	0030      	movs	r0, r6
 800687e:	f000 f843 	bl	8006908 <_sbrk_r>
 8006882:	6038      	str	r0, [r7, #0]
 8006884:	0029      	movs	r1, r5
 8006886:	0030      	movs	r0, r6
 8006888:	f000 f83e 	bl	8006908 <_sbrk_r>
 800688c:	1c43      	adds	r3, r0, #1
 800688e:	d12b      	bne.n	80068e8 <_malloc_r+0x9c>
 8006890:	230c      	movs	r3, #12
 8006892:	0030      	movs	r0, r6
 8006894:	6033      	str	r3, [r6, #0]
 8006896:	f000 f93b 	bl	8006b10 <__malloc_unlock>
 800689a:	e003      	b.n	80068a4 <_malloc_r+0x58>
 800689c:	2d00      	cmp	r5, #0
 800689e:	dade      	bge.n	800685e <_malloc_r+0x12>
 80068a0:	230c      	movs	r3, #12
 80068a2:	6033      	str	r3, [r6, #0]
 80068a4:	2000      	movs	r0, #0
 80068a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80068a8:	6823      	ldr	r3, [r4, #0]
 80068aa:	1b5b      	subs	r3, r3, r5
 80068ac:	d419      	bmi.n	80068e2 <_malloc_r+0x96>
 80068ae:	2b0b      	cmp	r3, #11
 80068b0:	d903      	bls.n	80068ba <_malloc_r+0x6e>
 80068b2:	6023      	str	r3, [r4, #0]
 80068b4:	18e4      	adds	r4, r4, r3
 80068b6:	6025      	str	r5, [r4, #0]
 80068b8:	e003      	b.n	80068c2 <_malloc_r+0x76>
 80068ba:	6863      	ldr	r3, [r4, #4]
 80068bc:	42a2      	cmp	r2, r4
 80068be:	d10e      	bne.n	80068de <_malloc_r+0x92>
 80068c0:	600b      	str	r3, [r1, #0]
 80068c2:	0030      	movs	r0, r6
 80068c4:	f000 f924 	bl	8006b10 <__malloc_unlock>
 80068c8:	0020      	movs	r0, r4
 80068ca:	2207      	movs	r2, #7
 80068cc:	300b      	adds	r0, #11
 80068ce:	1d23      	adds	r3, r4, #4
 80068d0:	4390      	bics	r0, r2
 80068d2:	1ac2      	subs	r2, r0, r3
 80068d4:	4298      	cmp	r0, r3
 80068d6:	d0e6      	beq.n	80068a6 <_malloc_r+0x5a>
 80068d8:	1a1b      	subs	r3, r3, r0
 80068da:	50a3      	str	r3, [r4, r2]
 80068dc:	e7e3      	b.n	80068a6 <_malloc_r+0x5a>
 80068de:	6053      	str	r3, [r2, #4]
 80068e0:	e7ef      	b.n	80068c2 <_malloc_r+0x76>
 80068e2:	0022      	movs	r2, r4
 80068e4:	6864      	ldr	r4, [r4, #4]
 80068e6:	e7c2      	b.n	800686e <_malloc_r+0x22>
 80068e8:	2303      	movs	r3, #3
 80068ea:	1cc4      	adds	r4, r0, #3
 80068ec:	439c      	bics	r4, r3
 80068ee:	42a0      	cmp	r0, r4
 80068f0:	d0e1      	beq.n	80068b6 <_malloc_r+0x6a>
 80068f2:	1a21      	subs	r1, r4, r0
 80068f4:	0030      	movs	r0, r6
 80068f6:	f000 f807 	bl	8006908 <_sbrk_r>
 80068fa:	1c43      	adds	r3, r0, #1
 80068fc:	d1db      	bne.n	80068b6 <_malloc_r+0x6a>
 80068fe:	e7c7      	b.n	8006890 <_malloc_r+0x44>
 8006900:	200001fc 	.word	0x200001fc
 8006904:	20000200 	.word	0x20000200

08006908 <_sbrk_r>:
 8006908:	2300      	movs	r3, #0
 800690a:	b570      	push	{r4, r5, r6, lr}
 800690c:	4d06      	ldr	r5, [pc, #24]	; (8006928 <_sbrk_r+0x20>)
 800690e:	0004      	movs	r4, r0
 8006910:	0008      	movs	r0, r1
 8006912:	602b      	str	r3, [r5, #0]
 8006914:	f7fb fed2 	bl	80026bc <_sbrk>
 8006918:	1c43      	adds	r3, r0, #1
 800691a:	d103      	bne.n	8006924 <_sbrk_r+0x1c>
 800691c:	682b      	ldr	r3, [r5, #0]
 800691e:	2b00      	cmp	r3, #0
 8006920:	d000      	beq.n	8006924 <_sbrk_r+0x1c>
 8006922:	6023      	str	r3, [r4, #0]
 8006924:	bd70      	pop	{r4, r5, r6, pc}
 8006926:	46c0      	nop			; (mov r8, r8)
 8006928:	20000298 	.word	0x20000298

0800692c <__sread>:
 800692c:	b570      	push	{r4, r5, r6, lr}
 800692e:	000c      	movs	r4, r1
 8006930:	250e      	movs	r5, #14
 8006932:	5f49      	ldrsh	r1, [r1, r5]
 8006934:	f000 fa56 	bl	8006de4 <_read_r>
 8006938:	2800      	cmp	r0, #0
 800693a:	db03      	blt.n	8006944 <__sread+0x18>
 800693c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800693e:	181b      	adds	r3, r3, r0
 8006940:	6563      	str	r3, [r4, #84]	; 0x54
 8006942:	bd70      	pop	{r4, r5, r6, pc}
 8006944:	89a3      	ldrh	r3, [r4, #12]
 8006946:	4a02      	ldr	r2, [pc, #8]	; (8006950 <__sread+0x24>)
 8006948:	4013      	ands	r3, r2
 800694a:	81a3      	strh	r3, [r4, #12]
 800694c:	e7f9      	b.n	8006942 <__sread+0x16>
 800694e:	46c0      	nop			; (mov r8, r8)
 8006950:	ffffefff 	.word	0xffffefff

08006954 <__swrite>:
 8006954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006956:	001f      	movs	r7, r3
 8006958:	898b      	ldrh	r3, [r1, #12]
 800695a:	0005      	movs	r5, r0
 800695c:	000c      	movs	r4, r1
 800695e:	0016      	movs	r6, r2
 8006960:	05db      	lsls	r3, r3, #23
 8006962:	d505      	bpl.n	8006970 <__swrite+0x1c>
 8006964:	230e      	movs	r3, #14
 8006966:	5ec9      	ldrsh	r1, [r1, r3]
 8006968:	2200      	movs	r2, #0
 800696a:	2302      	movs	r3, #2
 800696c:	f000 f8a2 	bl	8006ab4 <_lseek_r>
 8006970:	89a3      	ldrh	r3, [r4, #12]
 8006972:	4a05      	ldr	r2, [pc, #20]	; (8006988 <__swrite+0x34>)
 8006974:	0028      	movs	r0, r5
 8006976:	4013      	ands	r3, r2
 8006978:	81a3      	strh	r3, [r4, #12]
 800697a:	0032      	movs	r2, r6
 800697c:	230e      	movs	r3, #14
 800697e:	5ee1      	ldrsh	r1, [r4, r3]
 8006980:	003b      	movs	r3, r7
 8006982:	f000 f81f 	bl	80069c4 <_write_r>
 8006986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006988:	ffffefff 	.word	0xffffefff

0800698c <__sseek>:
 800698c:	b570      	push	{r4, r5, r6, lr}
 800698e:	000c      	movs	r4, r1
 8006990:	250e      	movs	r5, #14
 8006992:	5f49      	ldrsh	r1, [r1, r5]
 8006994:	f000 f88e 	bl	8006ab4 <_lseek_r>
 8006998:	89a3      	ldrh	r3, [r4, #12]
 800699a:	1c42      	adds	r2, r0, #1
 800699c:	d103      	bne.n	80069a6 <__sseek+0x1a>
 800699e:	4a05      	ldr	r2, [pc, #20]	; (80069b4 <__sseek+0x28>)
 80069a0:	4013      	ands	r3, r2
 80069a2:	81a3      	strh	r3, [r4, #12]
 80069a4:	bd70      	pop	{r4, r5, r6, pc}
 80069a6:	2280      	movs	r2, #128	; 0x80
 80069a8:	0152      	lsls	r2, r2, #5
 80069aa:	4313      	orrs	r3, r2
 80069ac:	81a3      	strh	r3, [r4, #12]
 80069ae:	6560      	str	r0, [r4, #84]	; 0x54
 80069b0:	e7f8      	b.n	80069a4 <__sseek+0x18>
 80069b2:	46c0      	nop			; (mov r8, r8)
 80069b4:	ffffefff 	.word	0xffffefff

080069b8 <__sclose>:
 80069b8:	b510      	push	{r4, lr}
 80069ba:	230e      	movs	r3, #14
 80069bc:	5ec9      	ldrsh	r1, [r1, r3]
 80069be:	f000 f833 	bl	8006a28 <_close_r>
 80069c2:	bd10      	pop	{r4, pc}

080069c4 <_write_r>:
 80069c4:	b570      	push	{r4, r5, r6, lr}
 80069c6:	0004      	movs	r4, r0
 80069c8:	0008      	movs	r0, r1
 80069ca:	0011      	movs	r1, r2
 80069cc:	001a      	movs	r2, r3
 80069ce:	2300      	movs	r3, #0
 80069d0:	4d05      	ldr	r5, [pc, #20]	; (80069e8 <_write_r+0x24>)
 80069d2:	602b      	str	r3, [r5, #0]
 80069d4:	f7fb fe2a 	bl	800262c <_write>
 80069d8:	1c43      	adds	r3, r0, #1
 80069da:	d103      	bne.n	80069e4 <_write_r+0x20>
 80069dc:	682b      	ldr	r3, [r5, #0]
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d000      	beq.n	80069e4 <_write_r+0x20>
 80069e2:	6023      	str	r3, [r4, #0]
 80069e4:	bd70      	pop	{r4, r5, r6, pc}
 80069e6:	46c0      	nop			; (mov r8, r8)
 80069e8:	20000298 	.word	0x20000298

080069ec <__assert_func>:
 80069ec:	b530      	push	{r4, r5, lr}
 80069ee:	0014      	movs	r4, r2
 80069f0:	001a      	movs	r2, r3
 80069f2:	4b09      	ldr	r3, [pc, #36]	; (8006a18 <__assert_func+0x2c>)
 80069f4:	0005      	movs	r5, r0
 80069f6:	681b      	ldr	r3, [r3, #0]
 80069f8:	b085      	sub	sp, #20
 80069fa:	68d8      	ldr	r0, [r3, #12]
 80069fc:	4b07      	ldr	r3, [pc, #28]	; (8006a1c <__assert_func+0x30>)
 80069fe:	2c00      	cmp	r4, #0
 8006a00:	d101      	bne.n	8006a06 <__assert_func+0x1a>
 8006a02:	4b07      	ldr	r3, [pc, #28]	; (8006a20 <__assert_func+0x34>)
 8006a04:	001c      	movs	r4, r3
 8006a06:	9301      	str	r3, [sp, #4]
 8006a08:	9100      	str	r1, [sp, #0]
 8006a0a:	002b      	movs	r3, r5
 8006a0c:	4905      	ldr	r1, [pc, #20]	; (8006a24 <__assert_func+0x38>)
 8006a0e:	9402      	str	r4, [sp, #8]
 8006a10:	f000 f81c 	bl	8006a4c <fiprintf>
 8006a14:	f000 fa07 	bl	8006e26 <abort>
 8006a18:	2000000c 	.word	0x2000000c
 8006a1c:	08007264 	.word	0x08007264
 8006a20:	0800729f 	.word	0x0800729f
 8006a24:	08007271 	.word	0x08007271

08006a28 <_close_r>:
 8006a28:	2300      	movs	r3, #0
 8006a2a:	b570      	push	{r4, r5, r6, lr}
 8006a2c:	4d06      	ldr	r5, [pc, #24]	; (8006a48 <_close_r+0x20>)
 8006a2e:	0004      	movs	r4, r0
 8006a30:	0008      	movs	r0, r1
 8006a32:	602b      	str	r3, [r5, #0]
 8006a34:	f7fb fe16 	bl	8002664 <_close>
 8006a38:	1c43      	adds	r3, r0, #1
 8006a3a:	d103      	bne.n	8006a44 <_close_r+0x1c>
 8006a3c:	682b      	ldr	r3, [r5, #0]
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d000      	beq.n	8006a44 <_close_r+0x1c>
 8006a42:	6023      	str	r3, [r4, #0]
 8006a44:	bd70      	pop	{r4, r5, r6, pc}
 8006a46:	46c0      	nop			; (mov r8, r8)
 8006a48:	20000298 	.word	0x20000298

08006a4c <fiprintf>:
 8006a4c:	b40e      	push	{r1, r2, r3}
 8006a4e:	b503      	push	{r0, r1, lr}
 8006a50:	0001      	movs	r1, r0
 8006a52:	ab03      	add	r3, sp, #12
 8006a54:	4804      	ldr	r0, [pc, #16]	; (8006a68 <fiprintf+0x1c>)
 8006a56:	cb04      	ldmia	r3!, {r2}
 8006a58:	6800      	ldr	r0, [r0, #0]
 8006a5a:	9301      	str	r3, [sp, #4]
 8006a5c:	f000 f888 	bl	8006b70 <_vfiprintf_r>
 8006a60:	b002      	add	sp, #8
 8006a62:	bc08      	pop	{r3}
 8006a64:	b003      	add	sp, #12
 8006a66:	4718      	bx	r3
 8006a68:	2000000c 	.word	0x2000000c

08006a6c <_fstat_r>:
 8006a6c:	2300      	movs	r3, #0
 8006a6e:	b570      	push	{r4, r5, r6, lr}
 8006a70:	4d06      	ldr	r5, [pc, #24]	; (8006a8c <_fstat_r+0x20>)
 8006a72:	0004      	movs	r4, r0
 8006a74:	0008      	movs	r0, r1
 8006a76:	0011      	movs	r1, r2
 8006a78:	602b      	str	r3, [r5, #0]
 8006a7a:	f7fb fdfd 	bl	8002678 <_fstat>
 8006a7e:	1c43      	adds	r3, r0, #1
 8006a80:	d103      	bne.n	8006a8a <_fstat_r+0x1e>
 8006a82:	682b      	ldr	r3, [r5, #0]
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d000      	beq.n	8006a8a <_fstat_r+0x1e>
 8006a88:	6023      	str	r3, [r4, #0]
 8006a8a:	bd70      	pop	{r4, r5, r6, pc}
 8006a8c:	20000298 	.word	0x20000298

08006a90 <_isatty_r>:
 8006a90:	2300      	movs	r3, #0
 8006a92:	b570      	push	{r4, r5, r6, lr}
 8006a94:	4d06      	ldr	r5, [pc, #24]	; (8006ab0 <_isatty_r+0x20>)
 8006a96:	0004      	movs	r4, r0
 8006a98:	0008      	movs	r0, r1
 8006a9a:	602b      	str	r3, [r5, #0]
 8006a9c:	f7fb fdfa 	bl	8002694 <_isatty>
 8006aa0:	1c43      	adds	r3, r0, #1
 8006aa2:	d103      	bne.n	8006aac <_isatty_r+0x1c>
 8006aa4:	682b      	ldr	r3, [r5, #0]
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	d000      	beq.n	8006aac <_isatty_r+0x1c>
 8006aaa:	6023      	str	r3, [r4, #0]
 8006aac:	bd70      	pop	{r4, r5, r6, pc}
 8006aae:	46c0      	nop			; (mov r8, r8)
 8006ab0:	20000298 	.word	0x20000298

08006ab4 <_lseek_r>:
 8006ab4:	b570      	push	{r4, r5, r6, lr}
 8006ab6:	0004      	movs	r4, r0
 8006ab8:	0008      	movs	r0, r1
 8006aba:	0011      	movs	r1, r2
 8006abc:	001a      	movs	r2, r3
 8006abe:	2300      	movs	r3, #0
 8006ac0:	4d05      	ldr	r5, [pc, #20]	; (8006ad8 <_lseek_r+0x24>)
 8006ac2:	602b      	str	r3, [r5, #0]
 8006ac4:	f7fb fdef 	bl	80026a6 <_lseek>
 8006ac8:	1c43      	adds	r3, r0, #1
 8006aca:	d103      	bne.n	8006ad4 <_lseek_r+0x20>
 8006acc:	682b      	ldr	r3, [r5, #0]
 8006ace:	2b00      	cmp	r3, #0
 8006ad0:	d000      	beq.n	8006ad4 <_lseek_r+0x20>
 8006ad2:	6023      	str	r3, [r4, #0]
 8006ad4:	bd70      	pop	{r4, r5, r6, pc}
 8006ad6:	46c0      	nop			; (mov r8, r8)
 8006ad8:	20000298 	.word	0x20000298

08006adc <__ascii_mbtowc>:
 8006adc:	b082      	sub	sp, #8
 8006ade:	2900      	cmp	r1, #0
 8006ae0:	d100      	bne.n	8006ae4 <__ascii_mbtowc+0x8>
 8006ae2:	a901      	add	r1, sp, #4
 8006ae4:	1e10      	subs	r0, r2, #0
 8006ae6:	d006      	beq.n	8006af6 <__ascii_mbtowc+0x1a>
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	d006      	beq.n	8006afa <__ascii_mbtowc+0x1e>
 8006aec:	7813      	ldrb	r3, [r2, #0]
 8006aee:	600b      	str	r3, [r1, #0]
 8006af0:	7810      	ldrb	r0, [r2, #0]
 8006af2:	1e43      	subs	r3, r0, #1
 8006af4:	4198      	sbcs	r0, r3
 8006af6:	b002      	add	sp, #8
 8006af8:	4770      	bx	lr
 8006afa:	2002      	movs	r0, #2
 8006afc:	4240      	negs	r0, r0
 8006afe:	e7fa      	b.n	8006af6 <__ascii_mbtowc+0x1a>

08006b00 <__malloc_lock>:
 8006b00:	b510      	push	{r4, lr}
 8006b02:	4802      	ldr	r0, [pc, #8]	; (8006b0c <__malloc_lock+0xc>)
 8006b04:	f7ff fa1f 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8006b08:	bd10      	pop	{r4, pc}
 8006b0a:	46c0      	nop			; (mov r8, r8)
 8006b0c:	20000290 	.word	0x20000290

08006b10 <__malloc_unlock>:
 8006b10:	b510      	push	{r4, lr}
 8006b12:	4802      	ldr	r0, [pc, #8]	; (8006b1c <__malloc_unlock+0xc>)
 8006b14:	f7ff fa18 	bl	8005f48 <__retarget_lock_release_recursive>
 8006b18:	bd10      	pop	{r4, pc}
 8006b1a:	46c0      	nop			; (mov r8, r8)
 8006b1c:	20000290 	.word	0x20000290

08006b20 <__sfputc_r>:
 8006b20:	6893      	ldr	r3, [r2, #8]
 8006b22:	b510      	push	{r4, lr}
 8006b24:	3b01      	subs	r3, #1
 8006b26:	6093      	str	r3, [r2, #8]
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	da04      	bge.n	8006b36 <__sfputc_r+0x16>
 8006b2c:	6994      	ldr	r4, [r2, #24]
 8006b2e:	42a3      	cmp	r3, r4
 8006b30:	db07      	blt.n	8006b42 <__sfputc_r+0x22>
 8006b32:	290a      	cmp	r1, #10
 8006b34:	d005      	beq.n	8006b42 <__sfputc_r+0x22>
 8006b36:	6813      	ldr	r3, [r2, #0]
 8006b38:	1c58      	adds	r0, r3, #1
 8006b3a:	6010      	str	r0, [r2, #0]
 8006b3c:	7019      	strb	r1, [r3, #0]
 8006b3e:	0008      	movs	r0, r1
 8006b40:	bd10      	pop	{r4, pc}
 8006b42:	f7fe f8b5 	bl	8004cb0 <__swbuf_r>
 8006b46:	0001      	movs	r1, r0
 8006b48:	e7f9      	b.n	8006b3e <__sfputc_r+0x1e>

08006b4a <__sfputs_r>:
 8006b4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b4c:	0006      	movs	r6, r0
 8006b4e:	000f      	movs	r7, r1
 8006b50:	0014      	movs	r4, r2
 8006b52:	18d5      	adds	r5, r2, r3
 8006b54:	42ac      	cmp	r4, r5
 8006b56:	d101      	bne.n	8006b5c <__sfputs_r+0x12>
 8006b58:	2000      	movs	r0, #0
 8006b5a:	e007      	b.n	8006b6c <__sfputs_r+0x22>
 8006b5c:	7821      	ldrb	r1, [r4, #0]
 8006b5e:	003a      	movs	r2, r7
 8006b60:	0030      	movs	r0, r6
 8006b62:	f7ff ffdd 	bl	8006b20 <__sfputc_r>
 8006b66:	3401      	adds	r4, #1
 8006b68:	1c43      	adds	r3, r0, #1
 8006b6a:	d1f3      	bne.n	8006b54 <__sfputs_r+0xa>
 8006b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006b70 <_vfiprintf_r>:
 8006b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b72:	b0a1      	sub	sp, #132	; 0x84
 8006b74:	0006      	movs	r6, r0
 8006b76:	000c      	movs	r4, r1
 8006b78:	001f      	movs	r7, r3
 8006b7a:	9203      	str	r2, [sp, #12]
 8006b7c:	2800      	cmp	r0, #0
 8006b7e:	d004      	beq.n	8006b8a <_vfiprintf_r+0x1a>
 8006b80:	6983      	ldr	r3, [r0, #24]
 8006b82:	2b00      	cmp	r3, #0
 8006b84:	d101      	bne.n	8006b8a <_vfiprintf_r+0x1a>
 8006b86:	f7ff f939 	bl	8005dfc <__sinit>
 8006b8a:	4b8e      	ldr	r3, [pc, #568]	; (8006dc4 <_vfiprintf_r+0x254>)
 8006b8c:	429c      	cmp	r4, r3
 8006b8e:	d11c      	bne.n	8006bca <_vfiprintf_r+0x5a>
 8006b90:	6874      	ldr	r4, [r6, #4]
 8006b92:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006b94:	07db      	lsls	r3, r3, #31
 8006b96:	d405      	bmi.n	8006ba4 <_vfiprintf_r+0x34>
 8006b98:	89a3      	ldrh	r3, [r4, #12]
 8006b9a:	059b      	lsls	r3, r3, #22
 8006b9c:	d402      	bmi.n	8006ba4 <_vfiprintf_r+0x34>
 8006b9e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006ba0:	f7ff f9d1 	bl	8005f46 <__retarget_lock_acquire_recursive>
 8006ba4:	89a3      	ldrh	r3, [r4, #12]
 8006ba6:	071b      	lsls	r3, r3, #28
 8006ba8:	d502      	bpl.n	8006bb0 <_vfiprintf_r+0x40>
 8006baa:	6923      	ldr	r3, [r4, #16]
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	d11d      	bne.n	8006bec <_vfiprintf_r+0x7c>
 8006bb0:	0021      	movs	r1, r4
 8006bb2:	0030      	movs	r0, r6
 8006bb4:	f7fe f8d2 	bl	8004d5c <__swsetup_r>
 8006bb8:	2800      	cmp	r0, #0
 8006bba:	d017      	beq.n	8006bec <_vfiprintf_r+0x7c>
 8006bbc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006bbe:	07db      	lsls	r3, r3, #31
 8006bc0:	d50d      	bpl.n	8006bde <_vfiprintf_r+0x6e>
 8006bc2:	2001      	movs	r0, #1
 8006bc4:	4240      	negs	r0, r0
 8006bc6:	b021      	add	sp, #132	; 0x84
 8006bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006bca:	4b7f      	ldr	r3, [pc, #508]	; (8006dc8 <_vfiprintf_r+0x258>)
 8006bcc:	429c      	cmp	r4, r3
 8006bce:	d101      	bne.n	8006bd4 <_vfiprintf_r+0x64>
 8006bd0:	68b4      	ldr	r4, [r6, #8]
 8006bd2:	e7de      	b.n	8006b92 <_vfiprintf_r+0x22>
 8006bd4:	4b7d      	ldr	r3, [pc, #500]	; (8006dcc <_vfiprintf_r+0x25c>)
 8006bd6:	429c      	cmp	r4, r3
 8006bd8:	d1db      	bne.n	8006b92 <_vfiprintf_r+0x22>
 8006bda:	68f4      	ldr	r4, [r6, #12]
 8006bdc:	e7d9      	b.n	8006b92 <_vfiprintf_r+0x22>
 8006bde:	89a3      	ldrh	r3, [r4, #12]
 8006be0:	059b      	lsls	r3, r3, #22
 8006be2:	d4ee      	bmi.n	8006bc2 <_vfiprintf_r+0x52>
 8006be4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006be6:	f7ff f9af 	bl	8005f48 <__retarget_lock_release_recursive>
 8006bea:	e7ea      	b.n	8006bc2 <_vfiprintf_r+0x52>
 8006bec:	2300      	movs	r3, #0
 8006bee:	ad08      	add	r5, sp, #32
 8006bf0:	616b      	str	r3, [r5, #20]
 8006bf2:	3320      	adds	r3, #32
 8006bf4:	766b      	strb	r3, [r5, #25]
 8006bf6:	3310      	adds	r3, #16
 8006bf8:	76ab      	strb	r3, [r5, #26]
 8006bfa:	9707      	str	r7, [sp, #28]
 8006bfc:	9f03      	ldr	r7, [sp, #12]
 8006bfe:	783b      	ldrb	r3, [r7, #0]
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	d001      	beq.n	8006c08 <_vfiprintf_r+0x98>
 8006c04:	2b25      	cmp	r3, #37	; 0x25
 8006c06:	d14e      	bne.n	8006ca6 <_vfiprintf_r+0x136>
 8006c08:	9b03      	ldr	r3, [sp, #12]
 8006c0a:	1afb      	subs	r3, r7, r3
 8006c0c:	9305      	str	r3, [sp, #20]
 8006c0e:	9b03      	ldr	r3, [sp, #12]
 8006c10:	429f      	cmp	r7, r3
 8006c12:	d00d      	beq.n	8006c30 <_vfiprintf_r+0xc0>
 8006c14:	9b05      	ldr	r3, [sp, #20]
 8006c16:	0021      	movs	r1, r4
 8006c18:	0030      	movs	r0, r6
 8006c1a:	9a03      	ldr	r2, [sp, #12]
 8006c1c:	f7ff ff95 	bl	8006b4a <__sfputs_r>
 8006c20:	1c43      	adds	r3, r0, #1
 8006c22:	d100      	bne.n	8006c26 <_vfiprintf_r+0xb6>
 8006c24:	e0b5      	b.n	8006d92 <_vfiprintf_r+0x222>
 8006c26:	696a      	ldr	r2, [r5, #20]
 8006c28:	9b05      	ldr	r3, [sp, #20]
 8006c2a:	4694      	mov	ip, r2
 8006c2c:	4463      	add	r3, ip
 8006c2e:	616b      	str	r3, [r5, #20]
 8006c30:	783b      	ldrb	r3, [r7, #0]
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d100      	bne.n	8006c38 <_vfiprintf_r+0xc8>
 8006c36:	e0ac      	b.n	8006d92 <_vfiprintf_r+0x222>
 8006c38:	2201      	movs	r2, #1
 8006c3a:	1c7b      	adds	r3, r7, #1
 8006c3c:	9303      	str	r3, [sp, #12]
 8006c3e:	2300      	movs	r3, #0
 8006c40:	4252      	negs	r2, r2
 8006c42:	606a      	str	r2, [r5, #4]
 8006c44:	a904      	add	r1, sp, #16
 8006c46:	3254      	adds	r2, #84	; 0x54
 8006c48:	1852      	adds	r2, r2, r1
 8006c4a:	602b      	str	r3, [r5, #0]
 8006c4c:	60eb      	str	r3, [r5, #12]
 8006c4e:	60ab      	str	r3, [r5, #8]
 8006c50:	7013      	strb	r3, [r2, #0]
 8006c52:	65ab      	str	r3, [r5, #88]	; 0x58
 8006c54:	9b03      	ldr	r3, [sp, #12]
 8006c56:	2205      	movs	r2, #5
 8006c58:	7819      	ldrb	r1, [r3, #0]
 8006c5a:	485d      	ldr	r0, [pc, #372]	; (8006dd0 <_vfiprintf_r+0x260>)
 8006c5c:	f7ff f9ec 	bl	8006038 <memchr>
 8006c60:	9b03      	ldr	r3, [sp, #12]
 8006c62:	1c5f      	adds	r7, r3, #1
 8006c64:	2800      	cmp	r0, #0
 8006c66:	d120      	bne.n	8006caa <_vfiprintf_r+0x13a>
 8006c68:	682a      	ldr	r2, [r5, #0]
 8006c6a:	06d3      	lsls	r3, r2, #27
 8006c6c:	d504      	bpl.n	8006c78 <_vfiprintf_r+0x108>
 8006c6e:	2353      	movs	r3, #83	; 0x53
 8006c70:	a904      	add	r1, sp, #16
 8006c72:	185b      	adds	r3, r3, r1
 8006c74:	2120      	movs	r1, #32
 8006c76:	7019      	strb	r1, [r3, #0]
 8006c78:	0713      	lsls	r3, r2, #28
 8006c7a:	d504      	bpl.n	8006c86 <_vfiprintf_r+0x116>
 8006c7c:	2353      	movs	r3, #83	; 0x53
 8006c7e:	a904      	add	r1, sp, #16
 8006c80:	185b      	adds	r3, r3, r1
 8006c82:	212b      	movs	r1, #43	; 0x2b
 8006c84:	7019      	strb	r1, [r3, #0]
 8006c86:	9b03      	ldr	r3, [sp, #12]
 8006c88:	781b      	ldrb	r3, [r3, #0]
 8006c8a:	2b2a      	cmp	r3, #42	; 0x2a
 8006c8c:	d016      	beq.n	8006cbc <_vfiprintf_r+0x14c>
 8006c8e:	2100      	movs	r1, #0
 8006c90:	68eb      	ldr	r3, [r5, #12]
 8006c92:	9f03      	ldr	r7, [sp, #12]
 8006c94:	783a      	ldrb	r2, [r7, #0]
 8006c96:	1c78      	adds	r0, r7, #1
 8006c98:	3a30      	subs	r2, #48	; 0x30
 8006c9a:	4684      	mov	ip, r0
 8006c9c:	2a09      	cmp	r2, #9
 8006c9e:	d94f      	bls.n	8006d40 <_vfiprintf_r+0x1d0>
 8006ca0:	2900      	cmp	r1, #0
 8006ca2:	d111      	bne.n	8006cc8 <_vfiprintf_r+0x158>
 8006ca4:	e017      	b.n	8006cd6 <_vfiprintf_r+0x166>
 8006ca6:	3701      	adds	r7, #1
 8006ca8:	e7a9      	b.n	8006bfe <_vfiprintf_r+0x8e>
 8006caa:	4b49      	ldr	r3, [pc, #292]	; (8006dd0 <_vfiprintf_r+0x260>)
 8006cac:	682a      	ldr	r2, [r5, #0]
 8006cae:	1ac0      	subs	r0, r0, r3
 8006cb0:	2301      	movs	r3, #1
 8006cb2:	4083      	lsls	r3, r0
 8006cb4:	4313      	orrs	r3, r2
 8006cb6:	602b      	str	r3, [r5, #0]
 8006cb8:	9703      	str	r7, [sp, #12]
 8006cba:	e7cb      	b.n	8006c54 <_vfiprintf_r+0xe4>
 8006cbc:	9b07      	ldr	r3, [sp, #28]
 8006cbe:	1d19      	adds	r1, r3, #4
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	9107      	str	r1, [sp, #28]
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	db01      	blt.n	8006ccc <_vfiprintf_r+0x15c>
 8006cc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8006cca:	e004      	b.n	8006cd6 <_vfiprintf_r+0x166>
 8006ccc:	425b      	negs	r3, r3
 8006cce:	60eb      	str	r3, [r5, #12]
 8006cd0:	2302      	movs	r3, #2
 8006cd2:	4313      	orrs	r3, r2
 8006cd4:	602b      	str	r3, [r5, #0]
 8006cd6:	783b      	ldrb	r3, [r7, #0]
 8006cd8:	2b2e      	cmp	r3, #46	; 0x2e
 8006cda:	d10a      	bne.n	8006cf2 <_vfiprintf_r+0x182>
 8006cdc:	787b      	ldrb	r3, [r7, #1]
 8006cde:	2b2a      	cmp	r3, #42	; 0x2a
 8006ce0:	d137      	bne.n	8006d52 <_vfiprintf_r+0x1e2>
 8006ce2:	9b07      	ldr	r3, [sp, #28]
 8006ce4:	3702      	adds	r7, #2
 8006ce6:	1d1a      	adds	r2, r3, #4
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	9207      	str	r2, [sp, #28]
 8006cec:	2b00      	cmp	r3, #0
 8006cee:	db2d      	blt.n	8006d4c <_vfiprintf_r+0x1dc>
 8006cf0:	9309      	str	r3, [sp, #36]	; 0x24
 8006cf2:	2203      	movs	r2, #3
 8006cf4:	7839      	ldrb	r1, [r7, #0]
 8006cf6:	4837      	ldr	r0, [pc, #220]	; (8006dd4 <_vfiprintf_r+0x264>)
 8006cf8:	f7ff f99e 	bl	8006038 <memchr>
 8006cfc:	2800      	cmp	r0, #0
 8006cfe:	d007      	beq.n	8006d10 <_vfiprintf_r+0x1a0>
 8006d00:	4b34      	ldr	r3, [pc, #208]	; (8006dd4 <_vfiprintf_r+0x264>)
 8006d02:	682a      	ldr	r2, [r5, #0]
 8006d04:	1ac0      	subs	r0, r0, r3
 8006d06:	2340      	movs	r3, #64	; 0x40
 8006d08:	4083      	lsls	r3, r0
 8006d0a:	4313      	orrs	r3, r2
 8006d0c:	3701      	adds	r7, #1
 8006d0e:	602b      	str	r3, [r5, #0]
 8006d10:	7839      	ldrb	r1, [r7, #0]
 8006d12:	1c7b      	adds	r3, r7, #1
 8006d14:	2206      	movs	r2, #6
 8006d16:	4830      	ldr	r0, [pc, #192]	; (8006dd8 <_vfiprintf_r+0x268>)
 8006d18:	9303      	str	r3, [sp, #12]
 8006d1a:	7629      	strb	r1, [r5, #24]
 8006d1c:	f7ff f98c 	bl	8006038 <memchr>
 8006d20:	2800      	cmp	r0, #0
 8006d22:	d045      	beq.n	8006db0 <_vfiprintf_r+0x240>
 8006d24:	4b2d      	ldr	r3, [pc, #180]	; (8006ddc <_vfiprintf_r+0x26c>)
 8006d26:	2b00      	cmp	r3, #0
 8006d28:	d127      	bne.n	8006d7a <_vfiprintf_r+0x20a>
 8006d2a:	2207      	movs	r2, #7
 8006d2c:	9b07      	ldr	r3, [sp, #28]
 8006d2e:	3307      	adds	r3, #7
 8006d30:	4393      	bics	r3, r2
 8006d32:	3308      	adds	r3, #8
 8006d34:	9307      	str	r3, [sp, #28]
 8006d36:	696b      	ldr	r3, [r5, #20]
 8006d38:	9a04      	ldr	r2, [sp, #16]
 8006d3a:	189b      	adds	r3, r3, r2
 8006d3c:	616b      	str	r3, [r5, #20]
 8006d3e:	e75d      	b.n	8006bfc <_vfiprintf_r+0x8c>
 8006d40:	210a      	movs	r1, #10
 8006d42:	434b      	muls	r3, r1
 8006d44:	4667      	mov	r7, ip
 8006d46:	189b      	adds	r3, r3, r2
 8006d48:	3909      	subs	r1, #9
 8006d4a:	e7a3      	b.n	8006c94 <_vfiprintf_r+0x124>
 8006d4c:	2301      	movs	r3, #1
 8006d4e:	425b      	negs	r3, r3
 8006d50:	e7ce      	b.n	8006cf0 <_vfiprintf_r+0x180>
 8006d52:	2300      	movs	r3, #0
 8006d54:	001a      	movs	r2, r3
 8006d56:	3701      	adds	r7, #1
 8006d58:	606b      	str	r3, [r5, #4]
 8006d5a:	7839      	ldrb	r1, [r7, #0]
 8006d5c:	1c78      	adds	r0, r7, #1
 8006d5e:	3930      	subs	r1, #48	; 0x30
 8006d60:	4684      	mov	ip, r0
 8006d62:	2909      	cmp	r1, #9
 8006d64:	d903      	bls.n	8006d6e <_vfiprintf_r+0x1fe>
 8006d66:	2b00      	cmp	r3, #0
 8006d68:	d0c3      	beq.n	8006cf2 <_vfiprintf_r+0x182>
 8006d6a:	9209      	str	r2, [sp, #36]	; 0x24
 8006d6c:	e7c1      	b.n	8006cf2 <_vfiprintf_r+0x182>
 8006d6e:	230a      	movs	r3, #10
 8006d70:	435a      	muls	r2, r3
 8006d72:	4667      	mov	r7, ip
 8006d74:	1852      	adds	r2, r2, r1
 8006d76:	3b09      	subs	r3, #9
 8006d78:	e7ef      	b.n	8006d5a <_vfiprintf_r+0x1ea>
 8006d7a:	ab07      	add	r3, sp, #28
 8006d7c:	9300      	str	r3, [sp, #0]
 8006d7e:	0022      	movs	r2, r4
 8006d80:	0029      	movs	r1, r5
 8006d82:	0030      	movs	r0, r6
 8006d84:	4b16      	ldr	r3, [pc, #88]	; (8006de0 <_vfiprintf_r+0x270>)
 8006d86:	f7fd fb47 	bl	8004418 <_printf_float>
 8006d8a:	9004      	str	r0, [sp, #16]
 8006d8c:	9b04      	ldr	r3, [sp, #16]
 8006d8e:	3301      	adds	r3, #1
 8006d90:	d1d1      	bne.n	8006d36 <_vfiprintf_r+0x1c6>
 8006d92:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006d94:	07db      	lsls	r3, r3, #31
 8006d96:	d405      	bmi.n	8006da4 <_vfiprintf_r+0x234>
 8006d98:	89a3      	ldrh	r3, [r4, #12]
 8006d9a:	059b      	lsls	r3, r3, #22
 8006d9c:	d402      	bmi.n	8006da4 <_vfiprintf_r+0x234>
 8006d9e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006da0:	f7ff f8d2 	bl	8005f48 <__retarget_lock_release_recursive>
 8006da4:	89a3      	ldrh	r3, [r4, #12]
 8006da6:	065b      	lsls	r3, r3, #25
 8006da8:	d500      	bpl.n	8006dac <_vfiprintf_r+0x23c>
 8006daa:	e70a      	b.n	8006bc2 <_vfiprintf_r+0x52>
 8006dac:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006dae:	e70a      	b.n	8006bc6 <_vfiprintf_r+0x56>
 8006db0:	ab07      	add	r3, sp, #28
 8006db2:	9300      	str	r3, [sp, #0]
 8006db4:	0022      	movs	r2, r4
 8006db6:	0029      	movs	r1, r5
 8006db8:	0030      	movs	r0, r6
 8006dba:	4b09      	ldr	r3, [pc, #36]	; (8006de0 <_vfiprintf_r+0x270>)
 8006dbc:	f7fd fdea 	bl	8004994 <_printf_i>
 8006dc0:	e7e3      	b.n	8006d8a <_vfiprintf_r+0x21a>
 8006dc2:	46c0      	nop			; (mov r8, r8)
 8006dc4:	080070c8 	.word	0x080070c8
 8006dc8:	080070e8 	.word	0x080070e8
 8006dcc:	080070a8 	.word	0x080070a8
 8006dd0:	080072aa 	.word	0x080072aa
 8006dd4:	080072b0 	.word	0x080072b0
 8006dd8:	080072b4 	.word	0x080072b4
 8006ddc:	08004419 	.word	0x08004419
 8006de0:	08006b4b 	.word	0x08006b4b

08006de4 <_read_r>:
 8006de4:	b570      	push	{r4, r5, r6, lr}
 8006de6:	0004      	movs	r4, r0
 8006de8:	0008      	movs	r0, r1
 8006dea:	0011      	movs	r1, r2
 8006dec:	001a      	movs	r2, r3
 8006dee:	2300      	movs	r3, #0
 8006df0:	4d05      	ldr	r5, [pc, #20]	; (8006e08 <_read_r+0x24>)
 8006df2:	602b      	str	r3, [r5, #0]
 8006df4:	f7fb fbfd 	bl	80025f2 <_read>
 8006df8:	1c43      	adds	r3, r0, #1
 8006dfa:	d103      	bne.n	8006e04 <_read_r+0x20>
 8006dfc:	682b      	ldr	r3, [r5, #0]
 8006dfe:	2b00      	cmp	r3, #0
 8006e00:	d000      	beq.n	8006e04 <_read_r+0x20>
 8006e02:	6023      	str	r3, [r4, #0]
 8006e04:	bd70      	pop	{r4, r5, r6, pc}
 8006e06:	46c0      	nop			; (mov r8, r8)
 8006e08:	20000298 	.word	0x20000298

08006e0c <__ascii_wctomb>:
 8006e0c:	0003      	movs	r3, r0
 8006e0e:	1e08      	subs	r0, r1, #0
 8006e10:	d005      	beq.n	8006e1e <__ascii_wctomb+0x12>
 8006e12:	2aff      	cmp	r2, #255	; 0xff
 8006e14:	d904      	bls.n	8006e20 <__ascii_wctomb+0x14>
 8006e16:	228a      	movs	r2, #138	; 0x8a
 8006e18:	2001      	movs	r0, #1
 8006e1a:	601a      	str	r2, [r3, #0]
 8006e1c:	4240      	negs	r0, r0
 8006e1e:	4770      	bx	lr
 8006e20:	2001      	movs	r0, #1
 8006e22:	700a      	strb	r2, [r1, #0]
 8006e24:	e7fb      	b.n	8006e1e <__ascii_wctomb+0x12>

08006e26 <abort>:
 8006e26:	2006      	movs	r0, #6
 8006e28:	b510      	push	{r4, lr}
 8006e2a:	f000 f82d 	bl	8006e88 <raise>
 8006e2e:	2001      	movs	r0, #1
 8006e30:	f7fb fbd3 	bl	80025da <_exit>

08006e34 <_raise_r>:
 8006e34:	b570      	push	{r4, r5, r6, lr}
 8006e36:	0004      	movs	r4, r0
 8006e38:	000d      	movs	r5, r1
 8006e3a:	291f      	cmp	r1, #31
 8006e3c:	d904      	bls.n	8006e48 <_raise_r+0x14>
 8006e3e:	2316      	movs	r3, #22
 8006e40:	6003      	str	r3, [r0, #0]
 8006e42:	2001      	movs	r0, #1
 8006e44:	4240      	negs	r0, r0
 8006e46:	bd70      	pop	{r4, r5, r6, pc}
 8006e48:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d004      	beq.n	8006e58 <_raise_r+0x24>
 8006e4e:	008a      	lsls	r2, r1, #2
 8006e50:	189b      	adds	r3, r3, r2
 8006e52:	681a      	ldr	r2, [r3, #0]
 8006e54:	2a00      	cmp	r2, #0
 8006e56:	d108      	bne.n	8006e6a <_raise_r+0x36>
 8006e58:	0020      	movs	r0, r4
 8006e5a:	f000 f831 	bl	8006ec0 <_getpid_r>
 8006e5e:	002a      	movs	r2, r5
 8006e60:	0001      	movs	r1, r0
 8006e62:	0020      	movs	r0, r4
 8006e64:	f000 f81a 	bl	8006e9c <_kill_r>
 8006e68:	e7ed      	b.n	8006e46 <_raise_r+0x12>
 8006e6a:	2000      	movs	r0, #0
 8006e6c:	2a01      	cmp	r2, #1
 8006e6e:	d0ea      	beq.n	8006e46 <_raise_r+0x12>
 8006e70:	1c51      	adds	r1, r2, #1
 8006e72:	d103      	bne.n	8006e7c <_raise_r+0x48>
 8006e74:	2316      	movs	r3, #22
 8006e76:	3001      	adds	r0, #1
 8006e78:	6023      	str	r3, [r4, #0]
 8006e7a:	e7e4      	b.n	8006e46 <_raise_r+0x12>
 8006e7c:	2400      	movs	r4, #0
 8006e7e:	0028      	movs	r0, r5
 8006e80:	601c      	str	r4, [r3, #0]
 8006e82:	4790      	blx	r2
 8006e84:	0020      	movs	r0, r4
 8006e86:	e7de      	b.n	8006e46 <_raise_r+0x12>

08006e88 <raise>:
 8006e88:	b510      	push	{r4, lr}
 8006e8a:	4b03      	ldr	r3, [pc, #12]	; (8006e98 <raise+0x10>)
 8006e8c:	0001      	movs	r1, r0
 8006e8e:	6818      	ldr	r0, [r3, #0]
 8006e90:	f7ff ffd0 	bl	8006e34 <_raise_r>
 8006e94:	bd10      	pop	{r4, pc}
 8006e96:	46c0      	nop			; (mov r8, r8)
 8006e98:	2000000c 	.word	0x2000000c

08006e9c <_kill_r>:
 8006e9c:	2300      	movs	r3, #0
 8006e9e:	b570      	push	{r4, r5, r6, lr}
 8006ea0:	4d06      	ldr	r5, [pc, #24]	; (8006ebc <_kill_r+0x20>)
 8006ea2:	0004      	movs	r4, r0
 8006ea4:	0008      	movs	r0, r1
 8006ea6:	0011      	movs	r1, r2
 8006ea8:	602b      	str	r3, [r5, #0]
 8006eaa:	f7fb fb86 	bl	80025ba <_kill>
 8006eae:	1c43      	adds	r3, r0, #1
 8006eb0:	d103      	bne.n	8006eba <_kill_r+0x1e>
 8006eb2:	682b      	ldr	r3, [r5, #0]
 8006eb4:	2b00      	cmp	r3, #0
 8006eb6:	d000      	beq.n	8006eba <_kill_r+0x1e>
 8006eb8:	6023      	str	r3, [r4, #0]
 8006eba:	bd70      	pop	{r4, r5, r6, pc}
 8006ebc:	20000298 	.word	0x20000298

08006ec0 <_getpid_r>:
 8006ec0:	b510      	push	{r4, lr}
 8006ec2:	f7fb fb74 	bl	80025ae <_getpid>
 8006ec6:	bd10      	pop	{r4, pc}

08006ec8 <_init>:
 8006ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006eca:	46c0      	nop			; (mov r8, r8)
 8006ecc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006ece:	bc08      	pop	{r3}
 8006ed0:	469e      	mov	lr, r3
 8006ed2:	4770      	bx	lr

08006ed4 <_fini>:
 8006ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006ed6:	46c0      	nop			; (mov r8, r8)
 8006ed8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006eda:	bc08      	pop	{r3}
 8006edc:	469e      	mov	lr, r3
 8006ede:	4770      	bx	lr
